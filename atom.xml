<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>点点寒彬</title>
  <subtitle>www.wengyb.com</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.wengyb.com/"/>
  <updated>2016-04-01T09:26:58.000Z</updated>
  <id>http://www.wengyb.com/</id>
  
  <author>
    <name>点点寒彬 | SvenWeng</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Python开发测试工具(一)—Monkey</title>
    <link href="http://www.wengyb.com/2016/04/01/Python%E5%BC%80%E5%8F%91%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7-%E4%B8%80-%E2%80%94Monkey/"/>
    <id>http://www.wengyb.com/2016/04/01/Python开发测试工具-一-—Monkey/</id>
    <published>2016-04-01T09:17:44.000Z</published>
    <updated>2016-04-01T09:26:58.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h2&gt;&lt;p&gt;最近在测试安卓的时候，经常会用到Monkey，Monkey作为安卓的基础工具，必须要到命令行去敲敲敲，做起来非常非常麻烦，于是我就想能不能利用学会的Python知识直接开发一个带有界面的安卓测试工具。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;思路&quot;&gt;&lt;a href=&quot;#思路&quot; class=&quot;headerlink&quot; title=&quot;思路&quot;&gt;&lt;/a&gt;思路&lt;/h2&gt;&lt;p&gt;整个实现流程并不困难，一个界面填写数据，提交到后台，然后Python调用os模块，执行shell命令，然后就可以实现GUI端的Monkey了。&lt;/p&gt;
&lt;h2 id=&quot;Web端&quot;&gt;&lt;a href=&quot;#Web端&quot; class=&quot;headerlink&quot; title=&quot;Web端&quot;&gt;&lt;/a&gt;Web端&lt;/h2&gt;&lt;p&gt;前段时间一直都在看web端的知识，我就想用web写一个界面，然后后台用Django执行，就可以很简单的完成这个工具了。&lt;/p&gt;
&lt;h3 id=&quot;使用POST表单实现&quot;&gt;&lt;a href=&quot;#使用POST表单实现&quot; class=&quot;headerlink&quot; title=&quot;使用POST表单实现&quot;&gt;&lt;/a&gt;使用POST表单实现&lt;/h3&gt;&lt;p&gt;前端就是用Bootstrap来实现了，对我来说，写了这么久得博客，这块东西比较容易了，代码就不放了，bootstrap套套就出来了，界面图如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xsgl3.com1.z0.glb.clouddn.com/F819E2C3-3A6B-4BCD-B538-22F1E9D9C6BF.png&quot; alt=&quot;界面图&quot;&gt;&lt;/p&gt;
&lt;p&gt;本来上面还有一个结束Monkey按钮的，被我拿掉了，拿掉的原因后面会说。&lt;/p&gt;
&lt;p&gt;现在该有的东西都有了，后台实现起来也不难，获取前端给的参数，然后执行命令就行了，第一版用的是POST提交表单的方式执行，我发现了这么些问题：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;点击执行Monkey命令的时候整个页面是卡住的，没办法点击获取Monkey进程和结束Monkey&lt;/li&gt;
&lt;li&gt;执行完Monkey后整个页面会刷新，也就是说没办法从前端获取我命令的参数，虽然日志中可以获取到命令相关的参数，但是总的来说并不是那么直观&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;使用Ajax提交表单&quot;&gt;&lt;a href=&quot;#使用Ajax提交表单&quot; class=&quot;headerlink&quot; title=&quot;使用Ajax提交表单&quot;&gt;&lt;/a&gt;使用Ajax提交表单&lt;/h3&gt;&lt;p&gt;用POST提交是最简单的了，我也最熟悉，不过存在上面的问题，总是很操蛋，于是我就改为使用Ajax异步提交数据，这样就不会导致执行Monkey的时候整个页面卡死的情况了。&lt;/p&gt;
&lt;p&gt;页面没有修改，改了一个方法，jQuery的方法如下：&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$(&lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;).ready(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    $(&lt;span class=&quot;string&quot;&gt;&quot;#sub&quot;&lt;/span&gt;).click(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        $.post(&lt;span class=&quot;string&quot;&gt;&quot;/monkey/&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;string&quot;&gt;&quot;package_name&quot;&lt;/span&gt;: $(&lt;span class=&quot;string&quot;&gt;&quot;#package_name&quot;&lt;/span&gt;).val(),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;string&quot;&gt;&quot;event_count&quot;&lt;/span&gt;: $(&lt;span class=&quot;string&quot;&gt;&quot;#event_count&quot;&lt;/span&gt;).val(),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;string&quot;&gt;&quot;log_path&quot;&lt;/span&gt;: $(&lt;span class=&quot;string&quot;&gt;&quot;#log_path&quot;&lt;/span&gt;).val(),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;string&quot;&gt;&quot;log_level&quot;&lt;/span&gt;: $(&lt;span class=&quot;string&quot;&gt;&quot;#log_level&quot;&lt;/span&gt;).val(),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;string&quot;&gt;&quot;delay&quot;&lt;/span&gt;: $(&lt;span class=&quot;string&quot;&gt;&quot;#delay&quot;&lt;/span&gt;).val(),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;string&quot;&gt;&quot;sys_event&quot;&lt;/span&gt;: $(&lt;span class=&quot;string&quot;&gt;&quot;#sys_event&quot;&lt;/span&gt;).val(),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;string&quot;&gt;&quot;touch_event&quot;&lt;/span&gt;: $(&lt;span class=&quot;string&quot;&gt;&quot;#touch_event&quot;&lt;/span&gt;).val(),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;string&quot;&gt;&quot;zoom_event&quot;&lt;/span&gt;: $(&lt;span class=&quot;string&quot;&gt;&quot;#zoom_event&quot;&lt;/span&gt;).val(),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;string&quot;&gt;&quot;finger_event&quot;&lt;/span&gt;: $(&lt;span class=&quot;string&quot;&gt;&quot;#finger_event&quot;&lt;/span&gt;).val(),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;string&quot;&gt;&quot;ball_event&quot;&lt;/span&gt;: $(&lt;span class=&quot;string&quot;&gt;&quot;#ball_event&quot;&lt;/span&gt;).val(),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;string&quot;&gt;&quot;nav_event&quot;&lt;/span&gt;: $(&lt;span class=&quot;string&quot;&gt;&quot;#nav_event&quot;&lt;/span&gt;).val(),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;string&quot;&gt;&quot;switch_event&quot;&lt;/span&gt;: $(&lt;span class=&quot;string&quot;&gt;&quot;#switch_event&quot;&lt;/span&gt;).val()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        )&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;使用这个方法实现，是解决了一些问题，执行Monkey的时候页面也不会卡了，也可以正常的获取Monkey进程，不过依然存在这么些问题：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;端口容易出现异常，我执行的过程中发现Monkey经常会占用两个pid&lt;/li&gt;
&lt;li&gt;执行停止Monkey命令的时候无法生效&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;第一个问题倒是还好，占用两个结束两次就行了，倒也还能接受，第二个问题就无法接受了，NND不能直观的开始和结束，我写这个工具就没有什么意义了，我专门试了直接调用python执行停止命令是正常的。代码如下：&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$(&lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;).ready(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    $(&lt;span class=&quot;string&quot;&gt;&quot;#stop_monkey&quot;&lt;/span&gt;).click(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        $.post(&lt;span class=&quot;string&quot;&gt;&quot;/monkey/stop_monkey/&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;string&quot;&gt;&quot;monkey_id&quot;&lt;/span&gt;: $(&lt;span class=&quot;string&quot;&gt;&quot;#monkey_id&quot;&lt;/span&gt;).val()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;@csrf_exempt&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;stop_monkey&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(request)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    data = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;string&quot;&gt;&quot;msg&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;Monkey已经停止&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; request.method == &lt;span class=&quot;string&quot;&gt;&#39;POST&#39;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        command = &lt;span class=&quot;string&quot;&gt;&#39;adb shell kill &amp;#123;&amp;#125;&#39;&lt;/span&gt;.format(request.POST[&lt;span class=&quot;string&quot;&gt;&#39;monkey_id&#39;&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        cm.run_monkey(command)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; JsonResponse(data, safe=&lt;span class=&quot;keyword&quot;&gt;False&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; JsonResponse(data, safe=&lt;span class=&quot;keyword&quot;&gt;False&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;若读者知道，请发邮件告诉我到底是为什么这里不会执行，我丢了print在这上面是可以正常打印的。&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&quot;GUI端&quot;&gt;&lt;a href=&quot;#GUI端&quot; class=&quot;headerlink&quot; title=&quot;GUI端&quot;&gt;&lt;/a&gt;GUI端&lt;/h2&gt;&lt;p&gt;web端的实验失败了，效果并没有达到我的预期，只能换一种方案了，用桌面的GUI端来实现这个方案试试，然而GUI端又有很多选择，PYQT据说是最好的，但是在我电脑数据抹掉之前我有装过这个，虽然最后装成功了，但是整个装的过程太操蛋了，有点心理阴影，wxpython也是一个不错的选择，不过还要装第三方包，有点折腾，最终我选择了最基本的Tkinter来处理GUI。那么问题来了，Tkinter没用过，要重新去熟悉这个包。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://effbot.org/tkinterbook/tkinter-index.htm&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;《Tkinter介绍文档》&lt;/a&gt;。。。麻蛋又是全英文的，果然英语还是必须要学好，我大概看了两小时，把一些主要的点扫了一遍，就开始写了，代码丑也是没办法的，时间少，没办法去慢慢想设计模式。&lt;/p&gt;
&lt;p&gt;写完的界面是这样的：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xsgl3.com1.z0.glb.clouddn.com/ABAD9EFF-A159-48CA-A794-B431FC5021C3.png&quot; alt=&quot;MonkeyTool&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;按钮方法&quot;&gt;&lt;a href=&quot;#按钮方法&quot; class=&quot;headerlink&quot; title=&quot;按钮方法&quot;&gt;&lt;/a&gt;按钮方法&lt;/h3&gt;&lt;p&gt;整个GUI的代码有100多行，有点长，布局是用Grid写的，所有的代码我就不贴了，我把按钮的方法贴一下：&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;connect_text = Button(master, text=&lt;span class=&quot;string&quot;&gt;&#39;获取设备号&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                      command=&lt;span class=&quot;keyword&quot;&gt;lambda&lt;/span&gt;: cm.set_text(device_name, ad.get_devices()))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;up_pknm_conf = Button(master, text=&lt;span class=&quot;string&quot;&gt;&#39;修改包名&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                      command=&lt;span class=&quot;keyword&quot;&gt;lambda&lt;/span&gt;: cm.update_conf(status, &lt;span class=&quot;string&quot;&gt;&#39;package_name&#39;&lt;/span&gt;, cm.get_text(package_name)))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;up_log_path_conf = Button(master, text=&lt;span class=&quot;string&quot;&gt;&#39;修改日志地址&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                          command=&lt;span class=&quot;keyword&quot;&gt;lambda&lt;/span&gt;: cm.update_conf(status, &lt;span class=&quot;string&quot;&gt;&#39;log_path&#39;&lt;/span&gt;, cm.get_text(log_path)))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;up_log_level_conf = Button(master, text=&lt;span class=&quot;string&quot;&gt;&#39;修改日志等级&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                           command=&lt;span class=&quot;keyword&quot;&gt;lambda&lt;/span&gt;: cm.update_conf(status, &lt;span class=&quot;string&quot;&gt;&#39;log_level&#39;&lt;/span&gt;, cm.get_text(log_level)))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;up_count_conf = Button(master, text=&lt;span class=&quot;string&quot;&gt;&#39;修改测试数量&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                       command=&lt;span class=&quot;keyword&quot;&gt;lambda&lt;/span&gt;: cm.update_conf(status, &lt;span class=&quot;string&quot;&gt;&#39;count&#39;&lt;/span&gt;, cm.get_text(count)))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;up_delay_conf = Button(master, text=&lt;span class=&quot;string&quot;&gt;&#39;修改延时&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                       command=&lt;span class=&quot;keyword&quot;&gt;lambda&lt;/span&gt;: cm.update_conf(status, &lt;span class=&quot;string&quot;&gt;&#39;delay&#39;&lt;/span&gt;, cm.get_text(delay)))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;up_touch_conf = Button(master, text=&lt;span class=&quot;string&quot;&gt;&#39;修改触摸事件&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                       command=&lt;span class=&quot;keyword&quot;&gt;lambda&lt;/span&gt;: cm.update_conf(status, &lt;span class=&quot;string&quot;&gt;&#39;touch&#39;&lt;/span&gt;, cm.get_text(touch)))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;up_motion_conf = Button(master, text=&lt;span class=&quot;string&quot;&gt;&#39;修改手势事件&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        command=&lt;span class=&quot;keyword&quot;&gt;lambda&lt;/span&gt;: cm.update_conf(status, &lt;span class=&quot;string&quot;&gt;&#39;motion&#39;&lt;/span&gt;, cm.get_text(motion)))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;up_pinch_conf = Button(master, text=&lt;span class=&quot;string&quot;&gt;&#39;修改缩放事件&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                       command=&lt;span class=&quot;keyword&quot;&gt;lambda&lt;/span&gt;: cm.update_conf(status, &lt;span class=&quot;string&quot;&gt;&#39;pinch&#39;&lt;/span&gt;, cm.get_text(pinch)))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;up_trackball_conf = Button(master, text=&lt;span class=&quot;string&quot;&gt;&#39;修改轨迹球事件&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                           command=&lt;span class=&quot;keyword&quot;&gt;lambda&lt;/span&gt;: cm.update_conf(status, &lt;span class=&quot;string&quot;&gt;&#39;trackball&#39;&lt;/span&gt;, cm.get_text(trackball)))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;up_screen_conf = Button(master, text=&lt;span class=&quot;string&quot;&gt;&#39;修改屏幕事件&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        command=&lt;span class=&quot;keyword&quot;&gt;lambda&lt;/span&gt;: cm.update_conf(status, &lt;span class=&quot;string&quot;&gt;&#39;screen&#39;&lt;/span&gt;, cm.get_text(screen)))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;up_nav_conf = Button(master, text=&lt;span class=&quot;string&quot;&gt;&#39;修改导航事件&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                     command=&lt;span class=&quot;keyword&quot;&gt;lambda&lt;/span&gt;: cm.update_conf(status, &lt;span class=&quot;string&quot;&gt;&#39;nav&#39;&lt;/span&gt;, cm.get_text(nav)))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;up_major_conf = Button(master, text=&lt;span class=&quot;string&quot;&gt;&#39;修改主要事件&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                       command=&lt;span class=&quot;keyword&quot;&gt;lambda&lt;/span&gt;: cm.update_conf(status, &lt;span class=&quot;string&quot;&gt;&#39;major&#39;&lt;/span&gt;, cm.get_text(major)))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;up_system_conf = Button(master, text=&lt;span class=&quot;string&quot;&gt;&#39;修改系统事件&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        command=&lt;span class=&quot;keyword&quot;&gt;lambda&lt;/span&gt;: cm.update_conf(status, &lt;span class=&quot;string&quot;&gt;&#39;system&#39;&lt;/span&gt;, cm.get_text(system)))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;up_app_conf = Button(master, text=&lt;span class=&quot;string&quot;&gt;&#39;修改切屏事件&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                     command=&lt;span class=&quot;keyword&quot;&gt;lambda&lt;/span&gt;: cm.update_conf(status, &lt;span class=&quot;string&quot;&gt;&#39;app&#39;&lt;/span&gt;, cm.get_text(app)))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;up_keyboard_conf = Button(master, text=&lt;span class=&quot;string&quot;&gt;&#39;修改键盘事件&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                          command=&lt;span class=&quot;keyword&quot;&gt;lambda&lt;/span&gt;: cm.update_conf(status, &lt;span class=&quot;string&quot;&gt;&#39;keyboard&#39;&lt;/span&gt;, cm.get_text(keyboard)))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;up_anyevents_conf = Button(master, text=&lt;span class=&quot;string&quot;&gt;&#39;修改其他事件&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                           command=&lt;span class=&quot;keyword&quot;&gt;lambda&lt;/span&gt;: cm.update_conf(status, &lt;span class=&quot;string&quot;&gt;&#39;anyevents&#39;&lt;/span&gt;, cm.get_text(anyevents)))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cat_monkey_pid = Button(master, text=&lt;span class=&quot;string&quot;&gt;&#39;显示Monkey进程&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        command=&lt;span class=&quot;keyword&quot;&gt;lambda&lt;/span&gt;: cm.set_text(monkey_pid, ad.get_monkey_id()))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;start_monkey = Button(master, text=&lt;span class=&quot;string&quot;&gt;&#39;开始Monkey&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                      command=&lt;span class=&quot;keyword&quot;&gt;lambda&lt;/span&gt;: mk.merge_command(cm.get_text(log_path), *cm.collect(*ENTRYLIST)))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;stop_monkey = Button(master, text=&lt;span class=&quot;string&quot;&gt;&#39;结束Monkey&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                     command=&lt;span class=&quot;keyword&quot;&gt;lambda&lt;/span&gt;: ad.stop_monkey(status))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;get_monkey = Button(master, text=&lt;span class=&quot;string&quot;&gt;&#39;获取Monkey&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    command=&lt;span class=&quot;keyword&quot;&gt;lambda&lt;/span&gt;: cm.set_text(status, mk.get_monkey(cm.get_text(log_path), *cm.collect(*ENTRYLIST))))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;值得一提的是，在Button组件中的command执行函数是&lt;strong&gt;不能带参数&lt;/strong&gt;的，否则就会报错，不知道Tkinter的作者是怎么想的，不带参数的函数能有几个啊。。。。。&lt;/p&gt;
&lt;p&gt;我用了一个折中的方法，用lambda函数来处理这一块，这样就可以加上参数了。&lt;/p&gt;
&lt;h3 id=&quot;封装其他方法&quot;&gt;&lt;a href=&quot;#封装其他方法&quot; class=&quot;headerlink&quot; title=&quot;封装其他方法&quot;&gt;&lt;/a&gt;封装其他方法&lt;/h3&gt;&lt;p&gt;其他方法我使用了三个函数，common来处理普通的方法，adb专门处理操作shell的方法，而monkey专门处理和Monkey有关的方法，这样设计以后工具就很容易拓展了，可以加上性能监控的方法等高级功能。&lt;/p&gt;
&lt;p&gt;简单的贴一下方法。&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Adb&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;__init__&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(self)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.mk = monkey.Monkey()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.cm = common.Common()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;get_devices&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(self)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;string&quot;&gt;&quot;&quot;&quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        获取设备名称&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        :return:设备名称&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &quot;&quot;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        a = os.popen(&lt;span class=&quot;string&quot;&gt;&#39;adb devices&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        devices = a.readlines()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        spl = devices[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;].find(&lt;span class=&quot;string&quot;&gt;&#39;	&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        devices_name = devices[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;][:spl]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; devices_name == &lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;请确认设备是否连接&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; devices_name&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;get_monkey_id&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(self)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;string&quot;&gt;&quot;&quot;&quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        获取monkey进程ID&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        :return:monkey进程id&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &quot;&quot;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; self.get_devices():&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            a = os.popen(&lt;span class=&quot;string&quot;&gt;&#39;adb shell ps | grep monkey&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                monkey_id = a.read().split(&lt;span class=&quot;string&quot;&gt;&#39; &#39;&lt;/span&gt;)[&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;进程为&amp;#123;&amp;#125; 的Monkey已停止&quot;&lt;/span&gt;.format(monkey_id)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;except&lt;/span&gt; Exception:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                monkey_id = &lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; monkey_id&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;设备未连接&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;stop_monkey&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(self, entry)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;string&quot;&gt;&quot;&quot;&quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        停止monkey&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        :param monkey_id:monkey的进程号&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        :return:None&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &quot;&quot;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        monkey_id = self.get_monkey_id()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; monkey_id != &lt;span class=&quot;string&quot;&gt;&#39;请确认你的设备是否连接&#39;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            os.system(&lt;span class=&quot;string&quot;&gt;&#39;adb shell kill &amp;#123;&amp;#125;&#39;&lt;/span&gt;.format(monkey_id))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            self.cm.set_text(entry, &lt;span class=&quot;string&quot;&gt;&quot;进程为&amp;#123;&amp;#125; 的Monkey已停止&quot;&lt;/span&gt;.format(monkey_id))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;设备未连接&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;merge_command&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(self, path, *args)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;string&quot;&gt;&quot;&quot;&quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        组合命令,Monkey使用&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        :param path:日志地址&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        :param args:Monkey命令中的其他参数&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        :return:None&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &quot;&quot;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        member = &lt;span class=&quot;string&quot;&gt;&#39; &#39;&lt;/span&gt;.join(args)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        command = &lt;span class=&quot;string&quot;&gt;&#39;adb shell monkey &amp;#123;&amp;#125; &amp;gt; &amp;#123;&amp;#125;&#39;&lt;/span&gt;.format(member, path)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.run(command)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;get_monkey&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(self, path, *args)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;string&quot;&gt;&quot;&quot;&quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        获取Monkey命令&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        :param path: 日志地址&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        :param args: Monkey命令中的其他参数&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        :return:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &quot;&quot;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; self.check_total(*args):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            member = &lt;span class=&quot;string&quot;&gt;&#39; &#39;&lt;/span&gt;.join(args)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            command = &lt;span class=&quot;string&quot;&gt;&#39;adb shell monkey &amp;#123;&amp;#125; &amp;gt; &amp;#123;&amp;#125;&#39;&lt;/span&gt;.format(member, path)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; command&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;事件百分数大于100%,请修正后再获取&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;check_total&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(self, *args)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;string&quot;&gt;&quot;&quot;&quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        检查事件百分比是否合规,大于100则返回False&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        :param args:传入的事件列表&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        :return:True&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &quot;&quot;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        rst = []&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        all_list = self.deal_list(*args)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; x &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; all_list:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            x = x.split(&lt;span class=&quot;string&quot;&gt;&#39; &#39;&lt;/span&gt;)[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            rst.append(int(x))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        num = sum(rst)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; num &amp;gt; &lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;False&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;True&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;deal_list&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(self, *args)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;string&quot;&gt;&quot;&quot;&quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        处理列表数据,返回只有事件的列表&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        :param args:传入的列表数据&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        :return:list&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &quot;&quot;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        rst = []&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; x &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; range(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;12&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            rst.append(args[x])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; rst&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; rst&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;存在的问题&quot;&gt;&lt;a href=&quot;#存在的问题&quot; class=&quot;headerlink&quot; title=&quot;存在的问题&quot;&gt;&lt;/a&gt;存在的问题&lt;/h3&gt;&lt;p&gt;用GUI端来处理也会存在这么个问题，点击开始的时候回出现整个GUI卡住的情况，必须要等Monkey执行完毕才能正常操作其他东西，因此我想了一个折中的方案，加一个状态显示的文本框，加一个生成Monkey命令的按钮，这样生成命令然后在GUI上就可以使用其他命令了，加上多进程或者多线程应该能解决这个问题，但是现在我对多线程多进程几乎是0了解，等了解了之后再来完善这部分的功能。&lt;/p&gt;
&lt;p&gt;##最后&lt;br&gt;就实现了这么一点点功能，代码量差不多也要300行，不得不说真是一个操蛋的工程。&lt;/p&gt;
&lt;p&gt;最后，我仍然没有解决这个操蛋的问题，等研究完多线程之后再来重新改善这段代码。&lt;/p&gt;
&lt;p&gt;最后的最后，虽然功能还不齐全，还是放上&lt;a href=&quot;https://github.com/diandianhanbin/AndroidTools&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Github&lt;/a&gt;，怎么说也是一个可以试想功能的工具吧。&lt;/p&gt;
&lt;p&gt;最近博客上线了，读者可以关注我的博客。&lt;br&gt;博客地址：&lt;a href=&quot;http://www.wengyb.com&quot;&gt;www.wengyb.com&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h2&gt;&lt;p&gt;最近在测试安卓的时候，经常会用到Monkey，Monkey作为安卓的基础工具，必须要到命令行去敲敲敲，做起来非常非常麻烦，于是我就想能不能利用学会的Python知识直接开发一个带有界面的安卓测试工具。&lt;br&gt;
    
    </summary>
    
      <category term="Python" scheme="http://www.wengyb.com/categories/Python/"/>
    
    
      <category term="测试" scheme="http://www.wengyb.com/tags/%E6%B5%8B%E8%AF%95/"/>
    
      <category term="python" scheme="http://www.wengyb.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>Appium学习之路—处理混合APP</title>
    <link href="http://www.wengyb.com/2016/03/31/Appium%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF%E2%80%94%E5%A4%84%E7%90%86%E6%B7%B7%E5%90%88APP/"/>
    <id>http://www.wengyb.com/2016/03/31/Appium学习之路—处理混合APP/</id>
    <published>2016-03-31T07:08:50.000Z</published>
    <updated>2016-03-31T07:09:32.000Z</updated>
    
    <content type="html">&lt;p&gt;文章首发：&lt;a href=&quot;http://wybblog.applinzi.com/blog/article/34/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;《我的博客》&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h2&gt;&lt;p&gt;自己自学APPIUM测试公司的APP有一段时间的，Android原生的元素定位，包括数据处理和逻辑判断也基本上搞熟了，但是公司的APP很坑爹，开发过程中存在混合开发的情况，这就意味着我必须要处理APP里面的webview，真的是很坑爹的东西。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;操作系统：Mac OS X EI Caption&lt;/p&gt;
&lt;p&gt;Appium: 1.4.16&lt;/p&gt;
&lt;p&gt;Java: java version “1.7.0_79”&lt;/p&gt;
&lt;p&gt;node.js: v5.3.0&lt;/p&gt;
&lt;p&gt;npm: 3.3.12&lt;/p&gt;
&lt;p&gt;手机：小米NOTE4&lt;/p&gt;
&lt;p&gt;待测应用： 微证券&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&quot;常规方法&quot;&gt;&lt;a href=&quot;#常规方法&quot; class=&quot;headerlink&quot; title=&quot;常规方法&quot;&gt;&lt;/a&gt;常规方法&lt;/h2&gt;&lt;p&gt;正常来说，常规的方法应该是使用UI Automator Viewer来探测页面的元素，比如下面这样：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://ww1.sinaimg.cn/mw690/811987cbgw1f20rlzwtwwj21kw103thr.jpg&quot; alt=&quot;页面元素&quot;&gt;&lt;/p&gt;
&lt;p&gt;但是，如果是混合开发，就会出现只有一个webview元素的情况，正常的方法无法定位。比如这样：&lt;br&gt;&lt;img src=&quot;http://ww3.sinaimg.cn/mw690/811987cbgw1f25r2354hcj21d4120n6k.jpg&quot; alt=&quot;webview&quot;&gt;&lt;/p&gt;
&lt;p&gt;常规的方法是没办法定位出这部分内容，只有一个webview，无法像原生一样获取内容。&lt;/p&gt;
&lt;h2 id=&quot;取巧的办法&quot;&gt;&lt;a href=&quot;#取巧的办法&quot; class=&quot;headerlink&quot; title=&quot;取巧的办法&quot;&gt;&lt;/a&gt;取巧的办法&lt;/h2&gt;&lt;p&gt;如果针对H5的元素，只需要点击的话，可以这么做，比如上文我们的开户页面，我们需要做的只是在这个页面上点击立即开户，跳转到下一个页面，我们可以用这种取巧的方法：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;self.driver.get_name(&amp;apos;立即开户&amp;apos;).click()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这样的代码，也是可以实现的，当然，上面的get_name我是进行封装了的，原来的代码是：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;def get_name(self, name):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        element = self.driver.find_element_by_name(name)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        return element&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;更优化的处理方式&quot;&gt;&lt;a href=&quot;#更优化的处理方式&quot; class=&quot;headerlink&quot; title=&quot;更优化的处理方式&quot;&gt;&lt;/a&gt;更优化的处理方式&lt;/h2&gt;&lt;p&gt;既然是H5页面，如果能够获取HTML代码就好了，那么就可以使用操作DOM的方式来操作这个H5。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;谷歌浏览器：版本 49.0.2623.87 (64-bit)&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;我用的谷歌浏览器是这个版本，把手机连接上电脑，在谷歌浏览器中输入这个代码：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;chrome://inspect&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;点击这个按钮：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://ww1.sinaimg.cn/mw690/811987cbgw1f25rku93r2j21kw176grv.jpg&quot; alt=&quot;inspect&quot;&gt;&lt;/p&gt;
&lt;p&gt;神奇的一幕出现了，所有的代码都展示在你面前。就像web一样调试混合APP中的H5.&lt;/p&gt;
&lt;h2 id=&quot;切换webdriver&quot;&gt;&lt;a href=&quot;#切换webdriver&quot; class=&quot;headerlink&quot; title=&quot;切换webdriver&quot;&gt;&lt;/a&gt;切换webdriver&lt;/h2&gt;&lt;p&gt;虽然解决了html代码的问题，但是另一个问题出现了，我们要怎么去操作DOM。常规的方法是没办法了，只能操作原生的，这个时候我们需要把webdriver切换成H5的，而不是原生的。&lt;/p&gt;
&lt;p&gt;其实原理很简单，只要把webdriver切换到H5的方式就行了。使用如下代码：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;contexts&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;contexts(self):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Returns the contexts within the current session.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    返回当前会话中的上下文，使用后可以识别H5页面的控件&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    :Usage:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        driver.contexts&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;用法 driver.contexts&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;调用这个方法后，把结果打印出来，你会发现是一个列表，列表中的第一个是NATIVE_APP，这个就表示现在的webdriver是调用原生的功能，我们使用这个命令切换一下就行了。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;def switch_h5(self):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.driver.execute(MobileCommand.SWITCH_TO_CONTEXT, &amp;#123;&amp;quot;name&amp;quot;: &amp;quot;WEBVIEW_com.weizq&amp;quot;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    def switch_app(self):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.driver.execute(MobileCommand.SWITCH_TO_CONTEXT, &amp;#123;&amp;quot;name&amp;quot;: &amp;quot;NATIVE_APP&amp;quot;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;第一个函数就是封装切换到H5的方法，name对应的东西就是通过contexts列表中打印出来的东西，当然你也可以使用其他的方法封装。&lt;/p&gt;
&lt;p&gt;切换到H5的webdriver之后，再使用driver.find_element_by_id试试？现在就变成查找DOM相关的功能了，再调用第二个函数，又切回原生的webdriver了。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;文章首发：&lt;a href=&quot;http://wybblog.applinzi.com/blog/article/34/&quot;&gt;《我的博客》&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h2&gt;&lt;p&gt;自己自学APPIUM测试公司的APP有一段时间的，Android原生的元素定位，包括数据处理和逻辑判断也基本上搞熟了，但是公司的APP很坑爹，开发过程中存在混合开发的情况，这就意味着我必须要处理APP里面的webview，真的是很坑爹的东西。&lt;br&gt;
    
    </summary>
    
      <category term="AboutTest" scheme="http://www.wengyb.com/categories/AboutTest/"/>
    
    
      <category term="Appium" scheme="http://www.wengyb.com/tags/Appium/"/>
    
      <category term="测试" scheme="http://www.wengyb.com/tags/%E6%B5%8B%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>Appium学习之路—环境搭建</title>
    <link href="http://www.wengyb.com/2016/03/31/Appium%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF%E2%80%94%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
    <id>http://www.wengyb.com/2016/03/31/Appium学习之路—环境搭建/</id>
    <published>2016-03-31T07:07:47.000Z</published>
    <updated>2016-03-31T07:08:42.000Z</updated>
    
    <content type="html">&lt;h1 id=&quot;Appium学习之路—环境搭建&quot;&gt;&lt;a href=&quot;#Appium学习之路—环境搭建&quot; class=&quot;headerlink&quot; title=&quot;Appium学习之路—环境搭建&quot;&gt;&lt;/a&gt;Appium学习之路—环境搭建&lt;/h1&gt;&lt;p&gt;说实话，Appium第一次接触还是在testerhome看到的，介绍说这个框架可以测试安卓和IOS，并且只要写一个脚本，不需要做任何改动就可以直接在IOS和Android上运行，这真心是一个好消息，说干就干。先吧环境弄起来看看到底牛掰不牛掰。&lt;br&gt;&lt;strong&gt;PS：笔者使用的是Mac OS X系统。&lt;/strong&gt;&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;准备工作&quot;&gt;&lt;a href=&quot;#准备工作&quot; class=&quot;headerlink&quot; title=&quot;准备工作&quot;&gt;&lt;/a&gt;准备工作&lt;/h2&gt;&lt;p&gt;Appium提供了两种方式，一个是客户端，另一个是命令行。不过不论哪种方式，以下的东西都必须准备好&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Xcode Command Line Tools 这个是必须的工具可以百度以下，我是使用Mac系统，干脆直接下了一个完整的Xcode&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Android SDK 和AVD 这个是测试Android必须的，当然AVD可以使用Android的真机来代替。&lt;/p&gt;
&lt;h2 id=&quot;Appium客户端&quot;&gt;&lt;a href=&quot;#Appium客户端&quot; class=&quot;headerlink&quot; title=&quot;Appium客户端&quot;&gt;&lt;/a&gt;Appium客户端&lt;/h2&gt;&lt;p&gt;我看到这个框架竟然还是有客户端的，真是有一种莫名的兴奋，有客户端就意味着我可以不用搭建那些操蛋的命令行了？下载一个GUI端我就可以轻轻松松的开搞了。不过下载客户端是需要翻墙的，这个有点蛋疼，我自己的专门翻墙出去下载了一个Appium for Mac的客户端，不过那速度慢得让人无法直视。官网地址：&lt;a href=&quot;http://appium.io/downloads.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Appium官网&lt;/a&gt;。我是不太建议在官网下载。这里推荐一个资源，下载速度比较快。&lt;a href=&quot;http://pan.baidu.com/s/1jGvAISu&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Appium国内下载地址&lt;/a&gt;。&lt;/p&gt;
&lt;h3 id=&quot;客户端的使用&quot;&gt;&lt;a href=&quot;#客户端的使用&quot; class=&quot;headerlink&quot; title=&quot;客户端的使用&quot;&gt;&lt;/a&gt;客户端的使用&lt;/h3&gt;&lt;p&gt;我个人折腾完客户端之后，感觉不是很给力，客户端虽然界面挺漂亮的，风格也挺好，不过总体折腾下来不是我喜欢的类型，如果喜欢客户端的朋友可以自己去折腾折腾客户端，配置起来很简单，就不做过多的赘述了。&lt;/p&gt;
&lt;h2 id=&quot;命令行&quot;&gt;&lt;a href=&quot;#命令行&quot; class=&quot;headerlink&quot; title=&quot;命令行&quot;&gt;&lt;/a&gt;命令行&lt;/h2&gt;&lt;p&gt;命令行是体现逼格高大上的东东，不过折腾起来也很费事，笔者折腾这个命令行折腾了大概一周的时间，其中种种原因很多&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;java环境&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Mac自带了这东西，不过说实话一般的电脑也都会把这个环境折腾好吧，毕竟java是最流行的开发语言&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Python环境&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Mac自带了这东西，因为笔者是使用Python来写脚本，当然你也可以使用其他语言来写，比如java、ruby、c#等等&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;brew&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;brew是一个套件管理器，不过笔者比较懒，直接使用Mac自带的easy_install来安装，比较省事&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;node&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;node也是必须的，如果有了brew或者easy_install，安装是很省事的 sudo easy_install node，输入密码就搞定了&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;SvenWengdeMBP:~ svenweng$ node -v&lt;br&gt;v0.10.34&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;这样就算安装成功&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;npm&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;npm这东西和node一样，也是使用安装工具来安装很方便&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;SvenWengdeMBP:~ svenweng$ npm -v&lt;br&gt;1.4.28&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;Appium&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;终于到我们的主角了安装命令是 npm install -g appium&lt;br&gt;这里要说明一下，Appium的安装不能使用sudo。-g是让npm自动帮我们配置Appium的环境。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;SvenWengdeMBP:~ svenweng$ appium -v&lt;br&gt;1.4.16&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;如果你看到了这个东西，就表示你的Appium已经完全安装完毕了。网上还有教程说需要安装一个wd的东西，我不知道这个是干什么的，当然我也安装了，npm install wd。很简单的安装&lt;/p&gt;
&lt;h3 id=&quot;检查Appium的配置是否正确&quot;&gt;&lt;a href=&quot;#检查Appium的配置是否正确&quot; class=&quot;headerlink&quot; title=&quot;检查Appium的配置是否正确&quot;&gt;&lt;/a&gt;检查Appium的配置是否正确&lt;/h3&gt;&lt;p&gt;执行命令appium-doctor，你如果看到一下的界面，就表示已经正确的安装完毕了&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;SvenWengdeMBP:~ svenweng$ appium-doctor&lt;br&gt;Running iOS Checks&lt;br&gt;✔ Xcode is installed at /Applications/Xcode.app/Contents/Developer&lt;br&gt;✔ Xcode Command Line Tools are installed.&lt;br&gt;✔ DevToolsSecurity is enabled.&lt;br&gt;✔ The Authorization DB is set up properly.&lt;br&gt;✔ Node binary found at /usr/local/bin/node&lt;br&gt;✔ iOS Checks were successful.&lt;/p&gt;
&lt;p&gt;Running Android Checks&lt;br&gt;✔ ANDROID_HOME is set to “/Users/svenweng/Desktop/Application/adt-bundle-mac-x86_64-20131030/sdk”&lt;br&gt;✔ JAVA_HOME is set to “/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home.”&lt;br&gt;✔ ADB exists at /Users/svenweng/Desktop/Application/adt-bundle-mac-x86_64-20131030/sdk/platform-tools/adb&lt;br&gt;✔ Android exists at /Users/svenweng/Desktop/Application/adt-bundle-mac-x86_64-20131030/sdk/tools/android&lt;br&gt;✔ Emulator exists at /Users/svenweng/Desktop/Application/adt-bundle-mac-x86_64-20131030/sdk/tools/emulator&lt;br&gt;✔ Android Checks were successful.&lt;/p&gt;
&lt;p&gt;✔ All Checks were successful&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;如果某一行签名不是打钩，而是一个红叉叉，那就表示那个配置没有安装正确&lt;/p&gt;
&lt;h3 id=&quot;疑问&quot;&gt;&lt;a href=&quot;#疑问&quot; class=&quot;headerlink&quot; title=&quot;疑问&quot;&gt;&lt;/a&gt;疑问&lt;/h3&gt;&lt;p&gt;理论上我的Appium安装是正确的，但是我运行appium的时候出现了下面的一大串错误&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;SvenWengdeMBP:~ svenweng$ appium&lt;br&gt;error: uncaughtException: fn must be a function&lt;/p&gt;
&lt;p&gt;See &lt;a href=&quot;http://goo.gl/916lJJ&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://goo.gl/916lJJ&lt;/a&gt;&lt;br&gt;date=Sat Nov 21 2015 10:37:25 GMT+0800 (HKT), pid=2504, uid=501, gid=20, cwd=/usr/local/lib/node_modules/appium, execPath=/usr/local/bin/node, version=v0.10.34, argv=[node, /usr/local/bin/appium], rss=103559168, heapTotal=86062080, heapUsed=56309664, loadavg=[1.6328125, 1.86767578125, 1.81103515625], uptime=39552, trace=[column=15, file=/usr/local/lib/node_modules/appium/node_modules/appium-chromedriver/node_modules/appium-jsonwp-proxy/node_modules/appium-support/node_modules/bluebird/js/main/promisify.js, function=Function.Promise.promisify, line=268, method=Promise.promisify, native=false, column=13, file=lib/fs.js, function=, line=46, method=null, native=false, column=26, file=module.js, function=Module._compile, line=456, method=_compile, native=false, column=10, file=module.js, function=Object.Module._extensions..js, line=474, method=Module._extensions..js, native=false, column=32, file=module.js, function=Module.load, line=356, method=load, native=false, column=12, file=module.js, function=Function.Module._load, line=312, method=Module._load, native=false, column=17, file=module.js, function=Module.require, line=364, method=require, native=false, column=17, file=module.js, function=require, line=380, method=null, native=false, column=11, file=/usr/local/lib/node_modules/appium/node_modules/appium-chromedriver/node_modules/appium-jsonwp-proxy/node_modules/appium-support/build/lib/tempdir.js, function=, line=12, method=null, native=false, column=26, file=module.js, function=Module._compile, line=456, method=_compile, native=false, column=10, file=module.js, function=Object.Module._extensions..js, line=474, method=Module._extensions..js, native=false, column=32, file=module.js, function=Module.load, line=356, method=load, native=false, column=12, file=module.js, function=Function.Module._load, line=312, method=Module._load, native=false, column=17, file=module.js, function=Module.require, line=364, method=require, native=false, column=17, file=module.js, function=require, line=380, method=null, native=false, column=19, file=/usr/local/lib/node_modules/appium/node_modules/appium-chromedriver/node_modules/appium-jsonwp-proxy/node_modules/appium-support/build/index.js, function=, line=11, method=null, native=false, column=26, file=module.js, function=Module._compile, line=456, method=_compile, native=false, column=10, file=module.js, function=Object.Module._extensions..js, line=474, method=Module._extensions..js, native=false, column=32, file=module.js, function=Module.load, line=356, method=load, native=false, column=12, file=module.js, function=Function.Module._load, line=312, method=Module._load, native=false, column=17, file=module.js, function=Module.require, line=364, method=require, native=false, column=17, file=module.js, function=require, line=380, method=null, native=false, column=42, file=lib/proxy.js, function=, line=2, method=null, native=false, column=26, file=module.js, function=Module._compile, line=456, method=_compile, native=false, column=10, file=module.js, function=Object.Module._extensions..js, line=474, method=Module._extensions..js, native=false, column=32, file=module.js, function=Module.load, line=356, method=load, native=false, column=12, file=module.js, function=Function.Module._load, line=312, method=Module._load, native=false, column=17, file=module.js, function=Module.require, line=364, method=require, native=false, column=17, file=module.js, function=require, line=380, method=null, native=false, column=17, file=/usr/local/lib/node_modules/appium/node_modules/appium-chromedriver/node_modules/appium-jsonwp-proxy/build/index.js, function=, line=9, method=null, native=false, column=26, file=module.js, function=Module._compile, line=456, method=_compile, native=false, column=10, file=module.js, function=Object.Module._extensions..js, line=474, method=Module._extensions..js, native=false, column=32, file=module.js, function=Module.load, line=356, method=load, native=false, column=12, file=module.js, function=Function.Module._load, line=312, method=Module._load, native=false, column=17, file=module.js, function=Module.require, line=364, method=require, native=false, column=17, file=module.js, function=require, line=380, method=null, native=false, column=28, file=lib/chromedriver.js, function=, line=3, method=null, native=false, column=26, file=module.js, function=Module._compile, line=456, method=_compile, native=false, column=10, file=module.js, function=Object.Module._extensions..js, line=474, method=Module._extensions..js, native=false, column=32, file=module.js, function=Module.load, line=356, method=load, native=false], stack=[TypeError: fn must be a function, ,     See &lt;a href=&quot;http://goo.gl/916lJJ&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://goo.gl/916lJJ&lt;/a&gt;, ,     at Function.Promise.promisify (/usr/local/lib/node_modules/appium/node_modules/appium-chromedriver/node_modules/appium-jsonwp-proxy/node_modules/appium-support/node_modules/bluebird/js/main/promisify.js:268:15),     at Object.&lt;anonymous&gt; (lib/fs.js:46:13),     at Module._compile (module.js:456:26),     at Object.Module._extensions..js (module.js:474:10),     at Module.load (module.js:356:32),     at Function.Module._load (module.js:312:12),     at Module.require (module.js:364:17),     at require (module.js:380:17),     at Object.&lt;anonymous&gt; (/usr/local/lib/node_modules/appium/node_modules/appium-chromedriver/node_modules/appium-jsonwp-proxy/node_modules/appium-support/build/lib/tempdir.js:12:11),     at Module._compile (module.js:456:26),     at Object.Module._extensions..js (module.js:474:10),     at Module.load (module.js:356:32),     at Function.Module._load (module.js:312:12),     at Module.require (module.js:364:17),     at require (module.js:380:17),     at Object.&lt;anonymous&gt; (/usr/local/lib/node_modules/appium/node_modules/appium-chromedriver/node_modules/appium-jsonwp-proxy/node_modules/appium-support/build/index.js:11:19),     at Module._compile (module.js:456:26),     at Object.Module._extensions..js (module.js:474:10),     at Module.load (module.js:356:32),     at Function.Module._load (module.js:312:12),     at Module.require (module.js:364:17),     at require (module.js:380:17),     at Object.&lt;anonymous&gt; (lib/proxy.js:2:42),     at Module._compile (module.js:456:26),     at Object.Module._extensions..js (module.js:474:10),     at Module.load (module.js:356:32),     at Function.Module._load (module.js:312:12),     at Module.require (module.js:364:17),     at require (module.js:380:17),     at Object.&lt;anonymous&gt; (/usr/local/lib/node_modules/appium/node_modules/appium-chromedriver/node_modules/appium-jsonwp-proxy/build/index.js:9:17),     at Module._compile (module.js:456:26),     at Object.Module._extensions..js (module.js:474:10),     at Module.load (module.js:356:32),     at Function.Module._load (module.js:312:12),     at Module.require (module.js:364:17),     at require (module.js:380:17),     at Object.&lt;anonymous&gt; (lib/chromedriver.js:3:28),     at Module._compile (module.js:456:26),     at Object.Module._extensions..js (module.js:474:10),     at Module.load (module.js:356:32)]&lt;/anonymous&gt;&lt;/anonymous&gt;&lt;/anonymous&gt;&lt;/anonymous&gt;&lt;/anonymous&gt;&lt;/anonymous&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;求大神给一个解答吧。&lt;/p&gt;
&lt;p&gt;翻墙工具正常了，我进入了命令行提示的错误网址&lt;br&gt;网址上显示的是这个&lt;br&gt;Error: fn must be a function&lt;/p&gt;
&lt;p&gt;This page is here for the sake of completeness. There really is nothing much to add on that error.&lt;br&gt;翻译过来就是：&lt;br&gt;错误： FN必须是一个函数&lt;/p&gt;
&lt;p&gt;这页是这里为了完整性。真的是没有什么补充该错误。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;折腾了一天，终于把问题搞定了，问题的原因是因为node的版本太旧了导致的，原因分析在&lt;a href=&quot;https://github.com/appium/appium/issues/5814&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;1楼回答的那个链接上&lt;/a&gt;，再说说今天自己折腾过程中遇到的问题吧，我在网上搜索帖子的时候说需要吧node卸载了才能升级（我真是天真）。于是按照步骤手贱删除了一些不应该删除的东西，结果搞的很乱，思路都乱了，不知道从何下手。于是我就去睡了一觉，醒来重新折腾，重新去官网下了一个node的安装包，把之前干掉的node环境重新部署好。再使用npm install -g appium的时候，一直会出现这个问题&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;SvenWengdeMBP:~ svenweng$ npm install -g appium&lt;br&gt;npm ERR! tar.unpack unzip error /var/folders/hm/04tcnt812v909nysd8jgl0100000gn/T/npm-10484-941ff227/registry.npmjs.org/appium-uiauto/-/appium-uiauto-1.10.10.tgz&lt;br&gt;npm ERR! tar.unpack unzip error /var/folders/hm/04tcnt812v909nysd8jgl0100000gn/T/npm-10484-941ff227/registry.npmjs.org/appium-instruments/-/appium-instruments-2.0.6.tgz&lt;br&gt;loadRequestedDeps → netwo ▐ ╢███████████████████████████████░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░╟&lt;br&gt;^C&lt;br&gt;SvenWengdeMBP:~ svenweng$ sudo chmod -r 777 /usr/local&lt;br&gt;Password:&lt;br&gt;chmod: 777: No such file or directory&lt;br&gt;SvenWengdeMBP:~ svenweng$ sudo chmod -R 777 /usr/local&lt;br&gt;SvenWengdeMBP:~ svenweng$ npm install -g appium&lt;br&gt;loadRequestedDeps → netwo ▄ ╢███████████████████████████████░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░╟&lt;br&gt;^C&lt;br&gt;SvenWengdeMBP:~ svenweng$ npm install -g appium&lt;br&gt;npm ERR! tar.unpack unzip error /var/folders/hm/04tcnt812v909nysd8jgl0100000gn/T/npm-13599-e762bf07/registry.npmjs.org/hoek/-/hoek-2.16.3.tgz&lt;br&gt;npm ERR! tar.unpack untar error /var/folders/hm/04tcnt812v909nysd8jgl0100000gn/T/npm-13599-e762bf07/registry.npmjs.org/hoek/-/hoek-2.16.3.tgz&lt;br&gt;npm ERR! tar.unpack unzip error /var/folders/hm/04tcnt812v909nysd8jgl0100000gn/T/npm-13599-e762bf07/registry.npmjs.org/iconv-lite/-/iconv-lite-0.4.8.tgz&lt;br&gt;npm ERR! tar.unpack untar error /var/folders/hm/04tcnt812v909nysd8jgl0100000gn/T/npm-13599-e762bf07/registry.npmjs.org/iconv-lite/-/iconv-lite-0.4.8.tgz&lt;br&gt;npm ERR! tar.unpack unzip error /var/folders/hm/04tcnt812v909nysd8jgl0100000gn/T/npm-13599-e762bf07/registry.npmjs.org/core-js/-/core-js-0.9.18.tgz&lt;br&gt;npm ERR! tar.unpack unzip error /var/folders/hm/04tcnt812v909nysd8jgl0100000gn/T/npm-13599-e762bf07/registry.npmjs.org/appium-adb/-/appium-adb-1.7.5.tgz&lt;br&gt;npm ERR! tar.unpack unzip error /var/folders/hm/04tcnt812v909nysd8jgl0100000gn/T/npm-13599-e762bf07/registry.npmjs.org/appium-instruments/-/appium-instruments-2.0.6.tgz&lt;br&gt;npm ERR! tar.unpack unzip error /var/folders/hm/04tcnt812v909nysd8jgl0100000gn/T/npm-13599-e762bf07/registry.npmjs.org/appium-uiauto/-/appium-uiauto-1.10.10.tgz&lt;br&gt;npm ERR! Darwin 15.0.0&lt;br&gt;npm ERR! argv “/usr/local/bin/node” “/usr/local/bin/npm” “install” “-g” “appium”&lt;br&gt;npm ERR! node v5.1.0&lt;br&gt;npm ERR! npm  v3.3.12&lt;br&gt;npm ERR! code Z_BUF_ERROR&lt;br&gt;npm ERR! errno -5&lt;/p&gt;
&lt;p&gt;npm ERR! unexpected end of file&lt;br&gt;npm ERR!&lt;br&gt;npm ERR! If you need help, you may report this error at:&lt;br&gt;npm ERR!     &lt;a href=&quot;https://github.com/npm/npm/issues&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/npm/npm/issues&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;npm ERR! Please include the following file with any support request:&lt;br&gt;npm ERR!     /Users/svenweng/npm-debug.log&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;每次安装到一半都安装不下去，我的电脑也是翻墙的，按道理应该也都能下载才对，具体详细的原因请恕我是小白，不太懂这个。不过我换了一个下载源就把这个问题搞定了，这里发出来，希望下次有遇到这种问题的朋友不会在这个地方浪费太多时间。命令是这个：npm -g –registry &lt;a href=&quot;http://registry.cnpmjs.org&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://registry.cnpmjs.org&lt;/a&gt;  install appium&lt;/p&gt;
&lt;p&gt;前前后后折腾了差不多一周的环境，终于把环境的问题搞定了，希望能够更深入的学习，也给自己一个勉励。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Appium学习之路—环境搭建&quot;&gt;&lt;a href=&quot;#Appium学习之路—环境搭建&quot; class=&quot;headerlink&quot; title=&quot;Appium学习之路—环境搭建&quot;&gt;&lt;/a&gt;Appium学习之路—环境搭建&lt;/h1&gt;&lt;p&gt;说实话，Appium第一次接触还是在testerhome看到的，介绍说这个框架可以测试安卓和IOS，并且只要写一个脚本，不需要做任何改动就可以直接在IOS和Android上运行，这真心是一个好消息，说干就干。先吧环境弄起来看看到底牛掰不牛掰。&lt;br&gt;&lt;strong&gt;PS：笔者使用的是Mac OS X系统。&lt;/strong&gt;&lt;br&gt;
    
    </summary>
    
      <category term="AboutTest" scheme="http://www.wengyb.com/categories/AboutTest/"/>
    
    
      <category term="Appium" scheme="http://www.wengyb.com/tags/Appium/"/>
    
      <category term="测试" scheme="http://www.wengyb.com/tags/%E6%B5%8B%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>Appium学习之路—驱动和常用功能的封装</title>
    <link href="http://www.wengyb.com/2016/03/24/Appium%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF%E2%80%94%E9%A9%B1%E5%8A%A8%E5%92%8C%E5%B8%B8%E7%94%A8%E5%8A%9F%E8%83%BD%E7%9A%84%E5%B0%81%E8%A3%85/"/>
    <id>http://www.wengyb.com/2016/03/24/Appium学习之路—驱动和常用功能的封装/</id>
    <published>2016-03-24T07:04:28.000Z</published>
    <updated>2016-03-31T07:06:37.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h2&gt;&lt;p&gt;初步了解Appium各个功能之后，应该把这些功能进行一些封装，否则整个代码会比较难看，可用性和重用性也会很差。本文是我这段时间使用Appium的一些想法，仅供参考。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;操作系统：Mac OS X EI Caption&lt;/p&gt;
&lt;p&gt;Appium: 1.4.16&lt;/p&gt;
&lt;p&gt;Java: java version “1.7.0_79”&lt;/p&gt;
&lt;p&gt;node.js: v5.3.0&lt;/p&gt;
&lt;p&gt;npm: 3.3.12&lt;/p&gt;
&lt;p&gt;手机：小米NOTE4&lt;/p&gt;
&lt;p&gt;待测应用： 微证券&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&quot;driver的封装&quot;&gt;&lt;a href=&quot;#driver的封装&quot; class=&quot;headerlink&quot; title=&quot;driver的封装&quot;&gt;&lt;/a&gt;driver的封装&lt;/h2&gt;&lt;p&gt;初始化的driver是Python操作Appium的核心，因此driver在整个代码中重用率是非常高的。&lt;/p&gt;
&lt;p&gt;新建一个driver.py文件，专门用来封装driver。代码如下：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;# ecoding=utf-8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;__author__ = &amp;quot;Sven_Weng&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;from appium import webdriver&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;class AppiumTest:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    def __init__(self):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        desired_caps = &amp;#123;&amp;apos;platformName&amp;apos;: &amp;apos;Android&amp;apos;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &amp;apos;platformVersion&amp;apos;: &amp;apos;5.0.2&amp;apos;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &amp;apos;deviceName&amp;apos;: &amp;apos;5136b01e&amp;apos;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &amp;apos;appPackage&amp;apos;: &amp;apos;com.weizq&amp;apos;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &amp;apos;appActivity&amp;apos;: &amp;apos;com.zztzt.android.simple.app.MainActivity&amp;apos;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.driver = webdriver.Remote(&amp;apos;http://localhost:4723/wd/hub&amp;apos;, desired_caps)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.driver.implicitly_wait(30)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    def get_driver(self):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        return self.driver&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;在AppiumTest这个类中，初始化函数包含了driver的信息，然后在get_driver函数中直接把这个driver返回回去，测试用例中只要在测试类的初始化中调用它，就能获取driver。&lt;/p&gt;
&lt;h2 id=&quot;按模块划分封装的方法&quot;&gt;&lt;a href=&quot;#按模块划分封装的方法&quot; class=&quot;headerlink&quot; title=&quot;按模块划分封装的方法&quot;&gt;&lt;/a&gt;按模块划分封装的方法&lt;/h2&gt;&lt;p&gt;我是这么划分模块的，一个Element，专门封装操作和对象有关的方法，把find_element_by_id这种很长很长的方法缩短一点，用一些比较简洁的名字封装一下，使用起来代码可读性也会比较强。一个common类，专门封装通用的方法，其他就是按照功能模块来划分，我测试的微证券有4个主要功能，所以会有财讯、行情、发现、我这些类模块。&lt;/p&gt;
&lt;h3 id=&quot;element对象封装&quot;&gt;&lt;a href=&quot;#element对象封装&quot; class=&quot;headerlink&quot; title=&quot;element对象封装&quot;&gt;&lt;/a&gt;element对象封装&lt;/h3&gt;&lt;p&gt;我自己的代码如下：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;68&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;class Element:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    封装Appium中关于元素对象的方法&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    def __init__(self):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        at = AppiumTest()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.driver = at.get_driver()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    def get_id(self, id):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        element = self.driver.find_element_by_id(id)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        return element&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    def get_name(self, name):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        element = self.driver.find_element_by_name(name)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        return element&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    def over(self):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        element = self.driver.quit()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        return element&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    def get_screen(self, path):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.driver.get_screenshot_as_file(path)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    def get_size(self):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        size = self.driver.get_window_size()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        return size&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    def swipe_to_up(self):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        window_size = self.get_size()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        width = window_size.get(&amp;quot;width&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        height = window_size.get(&amp;quot;height&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.driver.swipe(width / 2, height * 3 / 4, width / 2, height / 4, 500)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    def swipe_to_down(self):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        window_size = self.get_size()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        width = window_size.get(&amp;quot;width&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        height = window_size.get(&amp;quot;height&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.driver.swipe(width / 2, height / 4, width / 2, height * 3 / 4, 500)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    def swipe_to_left(self):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        window_size = self.get_size()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        width = window_size.get(&amp;quot;width&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        height = window_size.get(&amp;quot;height&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.driver.swipe(width / 4, height / 2, width * 3 / 4, height / 2, 500)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    def swipe_to_right(self):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        window_size = self.get_size()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        width = window_size.get(&amp;quot;width&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        height = window_size.get(&amp;quot;height&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.driver.swipe(width * 4 / 5, height / 2, width / 5, height / 2, 500)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    def back(self):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.driver.keyevent(4)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    def get_classes(self, classesname):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        elements = self.driver.find_elements_by_class_name(classesname)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        return elements&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    def get_ids(self, ids):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        elements = self.driver.find_elements_by_id(ids)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        return elements&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    def switch_h5(self):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.driver.execute(MobileCommand.SWITCH_TO_CONTEXT, &amp;#123;&amp;quot;name&amp;quot;: &amp;quot;WEBVIEW_com.weizq&amp;quot;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    def switch_app(self):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.driver.execute(MobileCommand.SWITCH_TO_CONTEXT, &amp;#123;&amp;quot;name&amp;quot;: &amp;quot;NATIVE_APP&amp;quot;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;上面封装的很简单，就是一些常用的方法，在初始化函数中初始化driver即可。&lt;/p&gt;
&lt;h3 id=&quot;common&quot;&gt;&lt;a href=&quot;#common&quot; class=&quot;headerlink&quot; title=&quot;common&quot;&gt;&lt;/a&gt;common&lt;/h3&gt;&lt;p&gt;common就是封装一些通用的方法，比如登录，比大小，获取股票代码，页面标题校验等等。以下是我的代码：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;91&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;92&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;93&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;94&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;95&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;96&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;97&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;98&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;99&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;100&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;101&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;102&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;103&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;104&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;105&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;106&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;107&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;108&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;109&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;110&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;111&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;112&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;113&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;114&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;115&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;116&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;117&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;118&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;119&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;120&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;121&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;122&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;123&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;124&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;125&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;126&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;127&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;128&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;129&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;130&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;131&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;132&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;133&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;134&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;135&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;136&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;137&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;138&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;139&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;140&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;141&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;142&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;143&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;144&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;145&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;146&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;147&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;148&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;149&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;150&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;151&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;152&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;153&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;154&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;155&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;156&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;157&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;158&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;159&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;160&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;161&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;162&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;class Common:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    封装通用的方法&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    def __init__(self):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.cf = ConfigParser.ConfigParser()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.cf.read(&amp;apos;enable_data.conf&amp;apos;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    def cycle_screen(self, section_name, num, driver):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        循环截图功能&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        从json文件中读取信息,用来定位点击的方位和保存截图的路径&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        执行成功则返回True,否则返回False&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        :param section_name: json文件中一级节点的名称&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        :param num: json文件中对应的列表序列位&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        :param driver: Appium的驱动&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        :return:True or False&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        try:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            with open(&amp;apos;get_screen.json&amp;apos;, &amp;apos;r&amp;apos;) as f:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                jsondata = f.read()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            cx_info = json.loads(jsondata)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            values = cx_info[section_name][num].values()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            for value in values:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                driver.get_name(value[&amp;apos;name&amp;apos;]).click()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                time.sleep(2)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                self.check_title(value[&amp;apos;name&amp;apos;], driver)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                driver.get_screen(value[&amp;apos;path&amp;apos;])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                logging.info(value[&amp;apos;log&amp;apos;])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            return True&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        except Exception as e:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            logging.warning(e)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            return False&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    def cycle_screen_and_back(self, section_name, num, driver):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        功能和上一个函数一样,在步骤最后加了一个返回事件,用来处理&amp;quot;行情&amp;quot;-&amp;quot;更多&amp;quot;页面的数据校验&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        :param section_name: conf配置文件的节点名称&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        try:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            with open(&amp;apos;get_screen.json&amp;apos;, &amp;apos;r&amp;apos;) as f:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                jsondata = f.read()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            cx_info = json.loads(jsondata)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            values = cx_info[section_name][num].values()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            for value in values:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                logging.info(value)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                driver.get_name(value[&amp;apos;name&amp;apos;]).click()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                time.sleep(2)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                self.check_title(value[&amp;apos;name&amp;apos;], driver)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                # title = driver.get_classes(&amp;apos;android.widget.TextView&amp;apos;)[0].text&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                # try:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                #     assert title == value[&amp;apos;name&amp;apos;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                #     logging.info(title + &amp;apos;页面显示正确&amp;apos;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                # except Exception as e:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                #     logging.warning(value[&amp;apos;name&amp;apos;])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                #     logging.warning(title + &amp;apos;页面显示不正确&amp;apos;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                driver.get_screen(value[&amp;apos;path&amp;apos;])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                driver.driver.keyevent(4)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                time.sleep(1)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                logging.info(value[&amp;apos;log&amp;apos;])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            return True&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        except Exception as e:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            logging.warning(e)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            return False&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    def check_title(self, title, driver):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        text = driver.get_classes(&amp;apos;android.widget.TextView&amp;apos;)[0].text&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        try:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            assert text == title&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            logging.info(&amp;quot;标题为: &amp;#123;&amp;#125; 校验通过&amp;quot;.format(title))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            return True&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        except Exception as e:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            logging.warning(e)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            logging.warning(&amp;quot;标题为: &amp;#123;&amp;#125; 校验不通过&amp;quot;.format(title))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            return False&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    def compare(self, ids, numstar, numend, driver):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        比较传入值得大小, 第一个数比第二个数大返回True,否则返回False&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        :param ids:传入的ID名&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        :param numstar:传入的开始序号&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        :param numend:传入的结束需要&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        :param driver:驱动&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        :return:True or False&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        try:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            startext = float(driver.get_ids(ids)[numstar].text)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            endtext = float(driver.get_ids(ids)[numend].text)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        except ValueError:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            starmark = driver.get_ids(ids)[numstar].text[:1]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            endmark = driver.get_ids(ids)[numend].text[:1]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            if starmark == endmark:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                startext = float(driver.get_ids(ids)[numstar].text.lstrip(starmark).rstrip(&amp;apos;%&amp;apos;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                endtext = float(driver.get_ids(ids)[numend].text.lstrip(endmark).rstrip(&amp;apos;%&amp;apos;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            elif starmark == &amp;quot;+&amp;quot;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                return True&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            elif starmark == &amp;quot;-&amp;quot;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                return False&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        if startext &amp;gt; endtext:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            return True&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        else:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            return False&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    def get_SotckCode(self, ids, driver):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        获取行情-自选页面中的所有股票代码,自选超过50支的时候请修改参数中的range(10)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        返回list&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        :param driver:驱动控件&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        :return:list, 自选股票代码&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        SotckCode = []&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        for x in driver.get_ids(ids):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            SotckCode.append(x.text)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        for x in range(5):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            driver.swipe_to_up()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            for x in driver.get_ids(ids):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                if x.text not in SotckCode:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    SotckCode.append(x.text)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        return SotckCode&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    def zjzh_login(self, driver):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        资金账号登录方法,传入appium-driver&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        APP启动时需要资金账号为登录状态时调用&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        :param driver: Appium驱动&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        :return: True&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        driver.get_name(&amp;apos;发现&amp;apos;).click()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        driver.switch_h5()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        driver.get_classes(&amp;apos;list-item&amp;apos;)[1].click()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        driver.switch_app()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        driver.get_name(&amp;apos;买入&amp;apos;).click()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        username = self.cf.get(&amp;apos;zjzh_login_info&amp;apos;, &amp;apos;username&amp;apos;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        password = self.cf.get(&amp;apos;zjzh_login_info&amp;apos;, &amp;apos;password&amp;apos;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        if self.tra_login(username, password, driver):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            self.check_title(u&amp;apos;委托买入&amp;apos;, driver)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            driver.back()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            driver.back()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            self.check_title(u&amp;apos;发现&amp;apos;, driver)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            logging.info(&amp;apos;资金账号登录成功&amp;apos;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            return True&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    def tra_login(self, username, password, driver):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        资金账号登录页面的登录方法&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        :param username:账号&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        :param password:密码&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        :param driver:Appium驱动&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        :return:True&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        driver.get_id(&amp;apos;com.weizq:id/edit_account&amp;apos;).clear()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        driver.get_id(&amp;apos;com.weizq:id/edit_account&amp;apos;).send_keys(username)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        logging.info(&amp;apos;输入的账号为: &amp;#123;&amp;#125;&amp;apos;.format(username))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        driver.get_id(&amp;apos;com.weizq:id/edit_password&amp;apos;).send_keys(password)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        logging.info(&amp;apos;输入的密码为: &amp;#123;&amp;#125;&amp;apos;.format(password))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        yzm = driver.get_id(&amp;apos;com.weizq:id/text_yanzhengma&amp;apos;).text&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        logging.info(&amp;apos;验证码为:&amp;#123;&amp;#125;&amp;apos;.format(yzm))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        driver.get_id(&amp;apos;com.weizq:id/edit_yanzhengma&amp;apos;).send_keys(yzm)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        driver.get_id(&amp;apos;com.weizq:id/login&amp;apos;).click()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        time.sleep(3)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        return True&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;其他功能模块&quot;&gt;&lt;a href=&quot;#其他功能模块&quot; class=&quot;headerlink&quot; title=&quot;其他功能模块&quot;&gt;&lt;/a&gt;其他功能模块&lt;/h3&gt;&lt;p&gt;其他功能模块也是同样的道理，不过其他模块封装的都是特定功能模块才会用到的方法，因为代码可能涉及公司的机密，所以功能模块的代码就暂不放出来，思想还是一样的。&lt;/p&gt;
&lt;h2 id=&quot;日志记录&quot;&gt;&lt;a href=&quot;#日志记录&quot; class=&quot;headerlink&quot; title=&quot;日志记录&quot;&gt;&lt;/a&gt;日志记录&lt;/h2&gt;&lt;p&gt;关于日志记录的原则，我觉得是这样的，写入日志的必须是一些关键的信息，把日志浏览一遍，基本上就能了解到整个脚本跑的流程，比如我调试一些功能的时候，基本上不用关注手机运行的页面，脚本到底做了什么，只要看日志就懂了。下面是一些我调试功能的时候打出来的日志：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Thu, 24 Mar 2016 14:26:35 test_weizq.py[line:437] INFO ==========结束测试我的内容==========&lt;/p&gt;
&lt;p&gt;Thu, 24 Mar 2016 14:26:37 test_weizq.py[line:429] INFO ==========开始测试我的内容==========&lt;/p&gt;
&lt;p&gt;Thu, 24 Mar 2016 14:26:55 test_weizq.py[line:429] INFO ==========开始测试我的内容==========&lt;/p&gt;
&lt;p&gt;Thu, 24 Mar 2016 14:27:23 test_weizq.py[line:429] INFO ==========开始测试我的内容==========&lt;/p&gt;
&lt;p&gt;Thu, 24 Mar 2016 14:27:32 test_weizq.py[line:448] INFO —–开始测试个人资料页面校验—–&lt;/p&gt;
&lt;p&gt;Thu, 24 Mar 2016 14:27:36 test_weizq.py[line:456] INFO 旧的昵称是: 6850252&lt;/p&gt;
&lt;p&gt;Thu, 24 Mar 2016 14:27:50 test_weizq.py[line:463] INFO 新的昵称是: 5030013&lt;/p&gt;
&lt;p&gt;Thu, 24 Mar 2016 14:27:50 test_weizq.py[line:437] INFO ==========结束测试我的内容==========&lt;/p&gt;
&lt;p&gt;Thu, 24 Mar 2016 14:31:55 test_weizq.py[line:429] INFO ==========开始测试我的内容==========&lt;/p&gt;
&lt;p&gt;Thu, 24 Mar 2016 14:32:06 test_weizq.py[line:448] INFO —–开始测试个人资料页面校验—–&lt;/p&gt;
&lt;p&gt;Thu, 24 Mar 2016 14:32:09 test_weizq.py[line:468] INFO 女&lt;/p&gt;
&lt;p&gt;Thu, 24 Mar 2016 14:32:09 test_weizq.py[line:437] INFO ==========结束测试我的内容==========&lt;/p&gt;
&lt;p&gt;Thu, 24 Mar 2016 14:34:38 test_weizq.py[line:429] INFO ==========开始测试我的内容==========&lt;/p&gt;
&lt;p&gt;Thu, 24 Mar 2016 14:34:50 test_weizq.py[line:448] INFO —–开始测试个人资料页面校验—–&lt;/p&gt;
&lt;p&gt;Thu, 24 Mar 2016 14:34:53 test_weizq.py[line:468] INFO 修改前的性别: 女&lt;/p&gt;
&lt;p&gt;Thu, 24 Mar 2016 14:34:58 test_weizq.py[line:472] INFO 性别修改为: 男&lt;/p&gt;
&lt;p&gt;Thu, 24 Mar 2016 14:34:58 test_weizq.py[line:437] INFO ==========结束测试我的内容==========&lt;/p&gt;
&lt;p&gt;Thu, 24 Mar 2016 14:35:14 test_weizq.py[line:429] INFO ==========开始测试我的内容==========&lt;/p&gt;
&lt;p&gt;Thu, 24 Mar 2016 14:35:35 test_weizq.py[line:429] INFO ==========开始测试我的内容==========&lt;/p&gt;
&lt;p&gt;Thu, 24 Mar 2016 14:35:47 test_weizq.py[line:429] INFO ==========开始测试我的内容==========&lt;/p&gt;
&lt;p&gt;Thu, 24 Mar 2016 14:36:01 test_weizq.py[line:429] INFO ==========开始测试我的内容==========&lt;/p&gt;
&lt;p&gt;Thu, 24 Mar 2016 14:36:12 test_weizq.py[line:448] INFO —–开始测试个人资料页面校验—–&lt;/p&gt;
&lt;p&gt;Thu, 24 Mar 2016 14:36:16 test_weizq.py[line:456] INFO 旧的昵称是: 5030013&lt;/p&gt;
&lt;p&gt;Thu, 24 Mar 2016 14:36:28 test_weizq.py[line:463] INFO 新的昵称是: 908602&lt;/p&gt;
&lt;p&gt;Thu, 24 Mar 2016 14:36:28 test_weizq.py[line:468] INFO 修改前的性别: 男&lt;/p&gt;
&lt;p&gt;Thu, 24 Mar 2016 14:36:33 test_weizq.py[line:475] INFO 性别修改为: 女&lt;/p&gt;
&lt;p&gt;Thu, 24 Mar 2016 14:36:33 test_weizq.py[line:437] INFO ==========结束测试我的内容==========&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;基本上看到这些日志就知道我到底在测试什么东西了。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h2&gt;&lt;p&gt;初步了解Appium各个功能之后，应该把这些功能进行一些封装，否则整个代码会比较难看，可用性和重用性也会很差。本文是我这段时间使用Appium的一些想法，仅供参考。&lt;br&gt;
    
    </summary>
    
      <category term="AboutTest" scheme="http://www.wengyb.com/categories/AboutTest/"/>
    
    
      <category term="Appium" scheme="http://www.wengyb.com/tags/Appium/"/>
    
      <category term="测试" scheme="http://www.wengyb.com/tags/%E6%B5%8B%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>Appium学习之路—无安卓源码的一些准备</title>
    <link href="http://www.wengyb.com/2016/03/18/Appium%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF%E2%80%94%E6%97%A0%E5%AE%89%E5%8D%93%E6%BA%90%E7%A0%81%E7%9A%84%E4%B8%80%E4%BA%9B%E5%87%86%E5%A4%87/"/>
    <id>http://www.wengyb.com/2016/03/18/Appium学习之路—无安卓源码的一些准备/</id>
    <published>2016-03-18T07:02:57.000Z</published>
    <updated>2016-03-31T07:06:50.000Z</updated>
    
    <content type="html">&lt;p&gt;准备工作其实是比较简单了，现阶段我测试的是安卓，所以就需要准备一台安卓手机了，在环境准备中已经把电脑的环境变量配置完毕了，所以现在需要的就是一些安卓测试的一些前奏知识。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;环境&quot;&gt;&lt;a href=&quot;#环境&quot; class=&quot;headerlink&quot; title=&quot;环境&quot;&gt;&lt;/a&gt;环境&lt;/h2&gt;&lt;hr&gt;
&lt;p&gt;操作系统：Mac OS X EI Caption &lt;/p&gt;
&lt;p&gt;Appium: 1.4.16&lt;/p&gt;
&lt;p&gt;Java: java version “1.7.0_79”&lt;/p&gt;
&lt;p&gt;node.js: v5.3.0&lt;/p&gt;
&lt;p&gt;npm: 3.3.12&lt;/p&gt;
&lt;p&gt;一切的前提，需要配置好环境&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&quot;获取包名&quot;&gt;&lt;a href=&quot;#获取包名&quot; class=&quot;headerlink&quot; title=&quot;获取包名&quot;&gt;&lt;/a&gt;获取包名&lt;/h2&gt;&lt;p&gt;我这里假设是我们都没有源码的情况下，有源码当然比较简单，如果只有一个apk文件，我们要获取包名的方式也一样很简单。在终端中输入下列命令：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;adb logcat ActivityManager:I *:s&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;然后打开需要测试的APP，找到topActivity.packageName，里面就是待测应用的包名了。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://ww3.sinaimg.cn/mw690/811987cbgw1f20rbgiuv4j20wi0kcqcu.jpg&quot; alt=&quot;示例&quot;&gt;&lt;/p&gt;
&lt;p&gt;这条命令的实质就是Android手机的日志打印之后，通过管道符过滤，LInux也同样有效，Windows可能就没办法使用这条命令了，当然，windows的朋友可以使用管道符之前的命令，然后找到topActivity.packageName。也同样可以获取到包名。&lt;/p&gt;
&lt;h2 id=&quot;当前Activity&quot;&gt;&lt;a href=&quot;#当前Activity&quot; class=&quot;headerlink&quot; title=&quot;当前Activity&quot;&gt;&lt;/a&gt;当前Activity&lt;/h2&gt;&lt;p&gt;同样是无源码，也可以通过命令来获取当前Activity。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Mac/Linux： adb shell dumpsys window windows | grep mFocusedApp&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Windows: adb shell dump sys window windows  并且手动查找mFocusedApp行&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;效果如下图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://ww1.sinaimg.cn/mw690/811987cbgw1f20ri5te6xj21kw11ok72.jpg&quot; alt=&quot;效果图&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;获取页面元素&quot;&gt;&lt;a href=&quot;#获取页面元素&quot; class=&quot;headerlink&quot; title=&quot;获取页面元素&quot;&gt;&lt;/a&gt;获取页面元素&lt;/h2&gt;&lt;p&gt;Appium和Selenium一样，需要通过一些元素来定位，达到自动化测试的目的，这里我使用的是Android Studio里面的一个工具：Android Device Monitor。&lt;/p&gt;
&lt;p&gt;这个工具可以获取屏幕快照，然后点击相关元素就可以获得上面的信息了，如下图所示：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://ww1.sinaimg.cn/mw690/811987cbgw1f20rlzwtwwj21kw103thr.jpg&quot; alt=&quot;示例图&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;最后&quot;&gt;&lt;a href=&quot;#最后&quot; class=&quot;headerlink&quot; title=&quot;最后&quot;&gt;&lt;/a&gt;最后&lt;/h2&gt;&lt;p&gt;熟悉使用这些东西，我们就可以开始Appium之旅了。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;准备工作其实是比较简单了，现阶段我测试的是安卓，所以就需要准备一台安卓手机了，在环境准备中已经把电脑的环境变量配置完毕了，所以现在需要的就是一些安卓测试的一些前奏知识。&lt;br&gt;
    
    </summary>
    
      <category term="AboutTest" scheme="http://www.wengyb.com/categories/AboutTest/"/>
    
    
      <category term="Appium" scheme="http://www.wengyb.com/tags/Appium/"/>
    
      <category term="测试" scheme="http://www.wengyb.com/tags/%E6%B5%8B%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>Python-MongoDB翻译</title>
    <link href="http://www.wengyb.com/2016/03/14/Python-MongoDB%E7%BF%BB%E8%AF%91/"/>
    <id>http://www.wengyb.com/2016/03/14/Python-MongoDB翻译/</id>
    <published>2016-03-14T02:41:06.000Z</published>
    <updated>2016-03-31T03:16:59.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;都说MongoDB这个NoSql数据库特别友好，使用起来也非常方便，今天稍微接触了一下，发现真的是非常非常简单，但是网上对这块内容涉及的很少，而且很多内容都是很老的版本使用的方法，我看了一下官方API文档中描述的内容也不多，顺手翻译一下吧，造福一下后来人。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;br&gt;&lt;strong&gt;注：我并不是逐字逐句的翻译，在某些地方我无法精确翻译的时候，我概括了大概的意思，有能力的可以直接看&lt;a href=&quot;http://api.mongodb.org/python/current/tutorial.html?_ga=1.218270941.558755682.1457943607#getting-a-single-document-with-find-one&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;官方文档&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&quot;前提条件&quot;&gt;&lt;a href=&quot;#前提条件&quot; class=&quot;headerlink&quot; title=&quot;前提条件&quot;&gt;&lt;/a&gt;前提条件&lt;/h2&gt;&lt;p&gt;首先，我们需要安装PyMongo模块，在PythonShell中下面的代码能正常运行且无报错。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; import pymongo&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;当然，你的MongoDB需要在默认地址和端口开启，你可以按照这个方法确认你是否安装了MongoDB：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ mongod&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;建立一个MongoClient&quot;&gt;&lt;a href=&quot;#建立一个MongoClient&quot; class=&quot;headerlink&quot; title=&quot;建立一个MongoClient&quot;&gt;&lt;/a&gt;建立一个MongoClient&lt;/h2&gt;&lt;p&gt;第一步我们需要建立一个MongoClient来运行MongoDB，这个做起来非常简单：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; from pymongo import MongoClient&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; client = MongoClient()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;上面的代码会连接默认的地址和端口，我们也可以自己指定地址和端口，像下面这样：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; client = MongoClient(&amp;apos;localhost&amp;apos;, 27017)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;或者使用MongoDB的URI连接：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; client = MongoClient(&amp;apos;mongodb://localhost:27017/&amp;apos;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;获取数据库&quot;&gt;&lt;a href=&quot;#获取数据库&quot; class=&quot;headerlink&quot; title=&quot;获取数据库&quot;&gt;&lt;/a&gt;获取数据库&lt;/h2&gt;&lt;p&gt;一个MongoDB可以提供多个数据库接口。当使用PyMongo的时候，你可以使用获取属性的方式建立MongoClient：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; db = client.test_database&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;如果你使用上面的方法无法获取数据库的时候，你可以使用字典的方式来获取数据库。&lt;/p&gt;
&lt;h2 id=&quot;获取连接&quot;&gt;&lt;a href=&quot;#获取连接&quot; class=&quot;headerlink&quot; title=&quot;获取连接&quot;&gt;&lt;/a&gt;获取连接&lt;/h2&gt;&lt;p&gt;获取连接的方式和获取数据库的方式一样，也可以使用获取属性的方式：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; collection = db.test_collection&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;或者使用字典的方式：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; collection = db[&amp;apos;test-collection&amp;apos;]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;注意：使用MongoDB建立连接非常容易，但是上面的所有操作都不是实实在在的操作了MongoDB，当第一次获取数据库和建立连接的时候，数据库和连接会被创建。&lt;/p&gt;
&lt;h2 id=&quot;文档&quot;&gt;&lt;a href=&quot;#文档&quot; class=&quot;headerlink&quot; title=&quot;文档&quot;&gt;&lt;/a&gt;文档&lt;/h2&gt;&lt;p&gt;MongoDB的数据格式存储使用的是JSON风格，在PyMongo中，我们使用的字典类型就相当于数据。比如下面的数据就类似博客中的post信息：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; import datetime&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; post = &amp;#123;&amp;quot;author&amp;quot;: &amp;quot;Mike&amp;quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...         &amp;quot;text&amp;quot;: &amp;quot;My first blog post!&amp;quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...         &amp;quot;tags&amp;quot;: [&amp;quot;mongodb&amp;quot;, &amp;quot;python&amp;quot;, &amp;quot;pymongo&amp;quot;],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...         &amp;quot;date&amp;quot;: datetime.datetime.utcnow()&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;数据格式可以容纳python的类型（就像datetime.datetime）&lt;/p&gt;
&lt;h2 id=&quot;插入数据&quot;&gt;&lt;a href=&quot;#插入数据&quot; class=&quot;headerlink&quot; title=&quot;插入数据&quot;&gt;&lt;/a&gt;插入数据&lt;/h2&gt;&lt;p&gt;往数据库插入一条数据我们使用insert_one()方法：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; posts = db.posts&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; post_id = posts.insert_one(post).inserted_id&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; post_id&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ObjectId(&amp;apos;...&amp;apos;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;当我们插入数据成功的时候，MongoDB会生成一个特殊的主键“_id”。这个主键“_id”的值是唯一的。insert_one()返回的值就是这个主键的值。&lt;/p&gt;
&lt;p&gt;插入第一条数据后，数据库、数据表和连接都建立了，我们可以查看列表中的所有信息：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; db.collection_names(include_system_collections=False)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[u&amp;apos;posts&amp;apos;]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;使用find-one-方法获取一条记录&quot;&gt;&lt;a href=&quot;#使用find-one-方法获取一条记录&quot; class=&quot;headerlink&quot; title=&quot;使用find_one()方法获取一条记录&quot;&gt;&lt;/a&gt;使用find_one()方法获取一条记录&lt;/h2&gt;&lt;p&gt;在MongoDB中最基本的方法就是find_one()。这个方法返回一条符合条件的记录（或者None）。当你知道某条信息只有一个的时候，这个方法非常有用，或者返回第一条数据，这里我们使用这个方法获取第一条数据：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; posts.find_one()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;u&amp;apos;date&amp;apos;: datetime.datetime(...), u&amp;apos;text&amp;apos;: u&amp;apos;My first blog post!&amp;apos;, u&amp;apos;_id&amp;apos;: ObjectId(&amp;apos;...&amp;apos;), u&amp;apos;author&amp;apos;: u&amp;apos;Mike&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;结果是我们之前插入的一条字典型的数据。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;注意：返回结果中的“_id”是插入数据时自动添加的。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;find_one()同时也提供了精确查找的功能，下面的示例是我们定位author为Mike的代码：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; posts.find_one(&amp;#123;&amp;quot;author&amp;quot;: &amp;quot;Mike&amp;quot;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;u&amp;apos;date&amp;apos;: datetime.datetime(...), u&amp;apos;text&amp;apos;: u&amp;apos;My first blog post!&amp;apos;, u&amp;apos;_id&amp;apos;: ObjectId(&amp;apos;...&amp;apos;), u&amp;apos;author&amp;apos;: u&amp;apos;Mike&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;如果我们把author换成另外一个，则不会返回结果：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; posts.find_one(&amp;#123;&amp;quot;author&amp;quot;: &amp;quot;Eliot&amp;quot;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;使用ObjectId查询&quot;&gt;&lt;a href=&quot;#使用ObjectId查询&quot; class=&quot;headerlink&quot; title=&quot;使用ObjectId查询&quot;&gt;&lt;/a&gt;使用ObjectId查询&lt;/h2&gt;&lt;p&gt;我们也可以用“_id”来查询，下面是我们的示例：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; post_id&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ObjectId(...)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; posts.find_one(&amp;#123;&amp;quot;_id&amp;quot;: post_id&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;u&amp;apos;date&amp;apos;: datetime.datetime(...), u&amp;apos;text&amp;apos;: u&amp;apos;My first blog post!&amp;apos;, u&amp;apos;_id&amp;apos;: ObjectId(&amp;apos;...&amp;apos;), u&amp;apos;author&amp;apos;: u&amp;apos;Mike&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;注意：ObjectId和转换为字符串的ObjectId是不一样的：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; post_id_as_str = str(post_id)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; posts.find_one(&amp;#123;&amp;quot;_id&amp;quot;: post_id_as_str&amp;#125;) # No result&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;在web应用中一个很常见的现象就是从URI中获取ObjectId来查询后台记录。在使用这个之前需要把str类型转换成ObjectId类型：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;from bson.objectid import ObjectId&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# The web framework gets post_id from the URL and passes it as a string&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;def get(post_id):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    # Convert from string to ObjectId:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    document = client.db.collection.find_one(&amp;#123;&amp;apos;_id&amp;apos;: ObjectId(post_id)&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;Unicode-Strings注意事项&quot;&gt;&lt;a href=&quot;#Unicode-Strings注意事项&quot; class=&quot;headerlink&quot; title=&quot;Unicode Strings注意事项&quot;&gt;&lt;/a&gt;Unicode Strings注意事项&lt;/h2&gt;&lt;p&gt;你可能会注意到我们的数据和存进去的数据有一些不一样，比如（ u’Mike’ 而不是‘Mike’）。&lt;/p&gt;
&lt;p&gt;MongoDB是使用BSON来存储数据。BSON是使用utf-8来编码的。所以PyMongo存储的str类型必须是utf-8的。（‘str’类型）也是要被支持的，因此Unicode类型(&amp;lt;‘unicode’类型&amp;gt;)需要先编码成utf-8，我们的示例中PythonShell显示的是u’Mike’而不是‘Mike’就是因为PyMongo解码了BSON的string变成Python的unicode string。&lt;/p&gt;
&lt;h2 id=&quot;大量的插入数据&quot;&gt;&lt;a href=&quot;#大量的插入数据&quot; class=&quot;headerlink&quot; title=&quot;大量的插入数据&quot;&gt;&lt;/a&gt;大量的插入数据&lt;/h2&gt;&lt;p&gt;为了让查询更有意思，我们需要插入多一些数据。能够新增一条记录，我们也可以做到新增多条记录。使用insert_many()方法插入由第一条数据组成的列表，只需要往服务端发送一条命令：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; new_posts = [&amp;#123;&amp;quot;author&amp;quot;: &amp;quot;Mike&amp;quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...               &amp;quot;text&amp;quot;: &amp;quot;Another post!&amp;quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...               &amp;quot;tags&amp;quot;: [&amp;quot;bulk&amp;quot;, &amp;quot;insert&amp;quot;],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...               &amp;quot;date&amp;quot;: datetime.datetime(2009, 11, 12, 11, 14)&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...              &amp;#123;&amp;quot;author&amp;quot;: &amp;quot;Eliot&amp;quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...               &amp;quot;title&amp;quot;: &amp;quot;MongoDB is fun&amp;quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...               &amp;quot;text&amp;quot;: &amp;quot;and pretty easy too!&amp;quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...               &amp;quot;date&amp;quot;: datetime.datetime(2009, 11, 10, 10, 45)&amp;#125;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; result = posts.insert_many(new_posts)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; result.inserted_ids&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[ObjectId(&amp;apos;...&amp;apos;), ObjectId(&amp;apos;...&amp;apos;)]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这个例子有几个有意思的地方：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;insert_many()返回了两个相互对应ObjectId&lt;/li&gt;
&lt;li&gt;new_post[1]有一个不同的地方，多了一个“tags”字段。而现在我们又多了一个字段，这就是我们说MongoDB非常&lt;em&gt;schema-free&lt;/em&gt;（开放？）&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;查询一条以上的记录&quot;&gt;&lt;a href=&quot;#查询一条以上的记录&quot; class=&quot;headerlink&quot; title=&quot;查询一条以上的记录&quot;&gt;&lt;/a&gt;查询一条以上的记录&lt;/h2&gt;&lt;p&gt;我们使用find()方法来获取一条以上的记录。find()返回一组符合条件的记录，并且允许我们通过迭代的方式获取它们。例如，在post中我们可以迭代的获取所有查询的数据：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; for post in posts.find():&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...   post&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;u&amp;apos;date&amp;apos;: datetime.datetime(...), u&amp;apos;text&amp;apos;: u&amp;apos;My first blog post!&amp;apos;, u&amp;apos;_id&amp;apos;: ObjectId(&amp;apos;...&amp;apos;), u&amp;apos;author&amp;apos;: u&amp;apos;Mike&amp;apos;, u&amp;apos;tags&amp;apos;: [u&amp;apos;mongodb&amp;apos;, u&amp;apos;python&amp;apos;, u&amp;apos;pymongo&amp;apos;]&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;u&amp;apos;date&amp;apos;: datetime.datetime(2009, 11, 12, 11, 14), u&amp;apos;text&amp;apos;: u&amp;apos;Another post!&amp;apos;, u&amp;apos;_id&amp;apos;: ObjectId(&amp;apos;...&amp;apos;), u&amp;apos;author&amp;apos;: u&amp;apos;Mike&amp;apos;, u&amp;apos;tags&amp;apos;: [u&amp;apos;bulk&amp;apos;, u&amp;apos;insert&amp;apos;]&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;u&amp;apos;date&amp;apos;: datetime.datetime(2009, 11, 10, 10, 45), u&amp;apos;text&amp;apos;: u&amp;apos;and pretty easy too!&amp;apos;, u&amp;apos;_id&amp;apos;: ObjectId(&amp;apos;...&amp;apos;), u&amp;apos;author&amp;apos;: u&amp;apos;Eliot&amp;apos;, u&amp;apos;title&amp;apos;: u&amp;apos;MongoDB is fun&amp;apos;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;就像我们使用find_one()一样，我们也可以在这里加上查询条件来获取符合条件的数据：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; for post in posts.find(&amp;#123;&amp;quot;author&amp;quot;: &amp;quot;Mike&amp;quot;&amp;#125;):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...   post&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;u&amp;apos;date&amp;apos;: datetime.datetime(...), u&amp;apos;text&amp;apos;: u&amp;apos;My first blog post!&amp;apos;, u&amp;apos;_id&amp;apos;: ObjectId(&amp;apos;...&amp;apos;), u&amp;apos;author&amp;apos;: u&amp;apos;Mike&amp;apos;, u&amp;apos;tags&amp;apos;: [u&amp;apos;mongodb&amp;apos;, u&amp;apos;python&amp;apos;, u&amp;apos;pymongo&amp;apos;]&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;u&amp;apos;date&amp;apos;: datetime.datetime(2009, 11, 12, 11, 14), u&amp;apos;text&amp;apos;: u&amp;apos;Another post!&amp;apos;, u&amp;apos;_id&amp;apos;: ObjectId(&amp;apos;...&amp;apos;), u&amp;apos;author&amp;apos;: u&amp;apos;Mike&amp;apos;, u&amp;apos;tags&amp;apos;: [u&amp;apos;bulk&amp;apos;, u&amp;apos;insert&amp;apos;]&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;计数&quot;&gt;&lt;a href=&quot;#计数&quot; class=&quot;headerlink&quot; title=&quot;计数&quot;&gt;&lt;/a&gt;计数&lt;/h2&gt;&lt;p&gt;如果我们只想获取数量，我们可以使用count()方法来代替全记录查询。我们可以获得查询的数量：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; posts.count()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;或者获得符合条件的数量：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; posts.find(&amp;#123;&amp;quot;author&amp;quot;: &amp;quot;Mike&amp;quot;&amp;#125;).count()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;不同种类的查询&quot;&gt;&lt;a href=&quot;#不同种类的查询&quot; class=&quot;headerlink&quot; title=&quot;不同种类的查询&quot;&gt;&lt;/a&gt;不同种类的查询&lt;/h2&gt;&lt;p&gt;MongoDB还提供了许多种类的查询方式。例如我们查询数据的日期小于某一个日期，且按照author字段来排序：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; d = datetime.datetime(2009, 11, 12, 12)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; for post in posts.find(&amp;#123;&amp;quot;date&amp;quot;: &amp;#123;&amp;quot;$lt&amp;quot;: d&amp;#125;&amp;#125;).sort(&amp;quot;author&amp;quot;):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...   print post&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;u&amp;apos;date&amp;apos;: datetime.datetime(2009, 11, 10, 10, 45), u&amp;apos;text&amp;apos;: u&amp;apos;and pretty easy too!&amp;apos;, u&amp;apos;_id&amp;apos;: ObjectId(&amp;apos;...&amp;apos;), u&amp;apos;author&amp;apos;: u&amp;apos;Eliot&amp;apos;, u&amp;apos;title&amp;apos;: u&amp;apos;MongoDB is fun&amp;apos;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;u&amp;apos;date&amp;apos;: datetime.datetime(2009, 11, 12, 11, 14), u&amp;apos;text&amp;apos;: u&amp;apos;Another post!&amp;apos;, u&amp;apos;_id&amp;apos;: ObjectId(&amp;apos;...&amp;apos;), u&amp;apos;author&amp;apos;: u&amp;apos;Mike&amp;apos;, u&amp;apos;tags&amp;apos;: [u&amp;apos;bulk&amp;apos;, u&amp;apos;insert&amp;apos;]&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这里我们使用“$lt”来做一个限制的查询，使用sort()来对author字段排序。&lt;/p&gt;
&lt;h2 id=&quot;主键&quot;&gt;&lt;a href=&quot;#主键&quot; class=&quot;headerlink&quot; title=&quot;主键&quot;&gt;&lt;/a&gt;主键&lt;/h2&gt;&lt;p&gt;增加一个主键能够帮助我们快速而准确的查询记录，也可以使我们存储的数据更加有用。在这个示例中，我们将会展示在一个已存在主键的表中新增一个主键：&lt;/p&gt;
&lt;p&gt;首先，我们要新增一个主键：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; result = db.profiles.create_index([(&amp;apos;user_id&amp;apos;, pymongo.ASCENDING)],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...                                   unique=True)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; list(db.profiles.index_information())&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[u&amp;apos;user_id_1&amp;apos;, u&amp;apos;_id_&amp;apos;]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;注意，我们现在有两个主键了，一个是MongoDB自带的”_id“，另一个是我们新增的”user_id“。&lt;/p&gt;
&lt;p&gt;现在，我们来新增一些用户信息：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; user_profiles = [&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...     &amp;#123;&amp;apos;user_id&amp;apos;: 211, &amp;apos;name&amp;apos;: &amp;apos;Luke&amp;apos;&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...     &amp;#123;&amp;apos;user_id&amp;apos;: 212, &amp;apos;name&amp;apos;: &amp;apos;Ziltoid&amp;apos;&amp;#125;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; result = db.profiles.insert_many(user_profiles)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;我们新增的主键阻止我们新增一条已存在这个主键的记录。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; new_profile = &amp;#123;&amp;apos;user_id&amp;apos;: 213, &amp;apos;name&amp;apos;: &amp;apos;Drew&amp;apos;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; duplicate_profile = &amp;#123;&amp;apos;user_id&amp;apos;: 212, &amp;apos;name&amp;apos;: &amp;apos;Tommy&amp;apos;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; result = db.profiles.insert_one(new_profile)  # This is fine.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; result = db.profiles.insert_one(duplicate_profile)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Traceback (most recent call last):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;pymongo.errors.DuplicateKeyError: E11000 duplicate key error index: test_database.profiles.$user_id_1 dup key: &amp;#123; : 212 &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;写在最后&quot;&gt;&lt;a href=&quot;#写在最后&quot; class=&quot;headerlink&quot; title=&quot;写在最后&quot;&gt;&lt;/a&gt;写在最后&lt;/h2&gt;&lt;p&gt;官方文档上并没有给出删除，修改记录的方法，或许是我目前还没看到吧，等看到了我会再补充上来的。文档比较短，翻译的过程中由于本人英语水平有限，并不能做到逐字逐句的翻译，也无法保证完全准确，并且会有一些地方的内容念起来并不是那么的顺口，但是官方文档想表达的大概意思应该是不会错的。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;都说MongoDB这个NoSql数据库特别友好，使用起来也非常方便，今天稍微接触了一下，发现真的是非常非常简单，但是网上对这块内容涉及的很少，而且很多内容都是很老的版本使用的方法，我看了一下官方API文档中描述的内容也不多，顺手翻译一下吧，造福一下后来人。&lt;br&gt;
    
    </summary>
    
      <category term="Python" scheme="http://www.wengyb.com/categories/Python/"/>
    
    
      <category term="python" scheme="http://www.wengyb.com/tags/python/"/>
    
      <category term="MongoDB" scheme="http://www.wengyb.com/tags/MongoDB/"/>
    
  </entry>
  
  <entry>
    <title>Django使用第三方接口（一）</title>
    <link href="http://www.wengyb.com/2016/03/12/Django%E4%BD%BF%E7%94%A8%E7%AC%AC%E4%B8%89%E6%96%B9%E6%8E%A5%E5%8F%A3%EF%BC%88%E4%B8%80%EF%BC%89/"/>
    <id>http://www.wengyb.com/2016/03/12/Django使用第三方接口（一）/</id>
    <published>2016-03-12T02:41:06.000Z</published>
    <updated>2016-03-31T03:08:03.000Z</updated>
    
    <content type="html">&lt;p&gt;文章首发：&lt;a href=&quot;http://wybblog.applinzi.com/blog/article/30/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;我的博客&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;好久没发文章了，最近我在学习使用第三方接口来优化我的网站，这篇文章介绍两个接口吧，都是从百度API商店折腾了之后使用的，一个是天气资讯，另一个是名人名言。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;思路&quot;&gt;&lt;a href=&quot;#思路&quot; class=&quot;headerlink&quot; title=&quot;思路&quot;&gt;&lt;/a&gt;思路&lt;/h2&gt;&lt;p&gt;其实调接口很简单，原理和使用数据库的数据差不多，我们使用本地数据库的时候是通过： 连接数据库——获取数据——返回前端——前端处理这么一个流程，调用接口其实也差不多是这样，发送请求——收到数据——数据处理——返回前端——前端处理。理清思路后我们就来处理处理这块的使用方法。&lt;/p&gt;
&lt;h2 id=&quot;名人名言&quot;&gt;&lt;a href=&quot;#名人名言&quot; class=&quot;headerlink&quot; title=&quot;名人名言&quot;&gt;&lt;/a&gt;名人名言&lt;/h2&gt;&lt;p&gt;关于名人名言，我是放在我博客的首页展示，效果图如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/1228386-4d9c798a9e456193.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;名人名言效果图&quot;&gt;&lt;/p&gt;
&lt;p&gt;整个调用流程和上文说的思路差不多，首先，进入百度API商店，传送门在这：&lt;a href=&quot;http://apistore.baidu.com/apiworks/servicedetail/1756.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://apistore.baidu.com/apiworks/servicedetail/1756.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;查看API后，只要请求的时候带上相关参数就行了，API文档比较简单，百度API商店也给了Python的示例，不过百度的示例使用的是urllib这个python自带的库，我用的是requests这个库，对比起来requests这个库使用起来更简单，我的前端使用的是jQuery调用ajax来从Django后台异步获取数据，所以打开网页的时候你会发现这一块一开始是没有的，过了一秒后才会出现数据。废话不多说，上代码。&lt;/p&gt;
&lt;h3 id=&quot;views-py&quot;&gt;&lt;a href=&quot;#views-py&quot; class=&quot;headerlink&quot; title=&quot;views.py&quot;&gt;&lt;/a&gt;views.py&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;def famous(request):   &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  famous_word = Mingrenmingyan()    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  return JsonResponse(famous_word.get_mrmy(), safe=False)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;师徒函数很简单，初始化这个类，然后返回一个json数据给前端。整个处理方法我单独写了一个common类来处理，所以还需要在views的开头引入这个方法。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;from common.common import Weather, Mingrenmingyan&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;common-py&quot;&gt;&lt;a href=&quot;#common-py&quot; class=&quot;headerlink&quot; title=&quot;common.py&quot;&gt;&lt;/a&gt;common.py&lt;/h3&gt;&lt;p&gt;这个方法我是专门来处理一些数据的，所以会写好几个类。代码如下：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;class Mingrenmingyan:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    处理名人名言接口返回的数据&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    def __init__(self):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        初始化相关数据,包括接口的url,headers和parm&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        :return: None&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.url = &amp;apos;http://apis.baidu.com/avatardata/mingrenmingyan/lookup&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.headers = &amp;#123;&amp;quot;apikey&amp;quot;: &amp;quot;your key&amp;quot;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.parm = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;quot;dtype&amp;quot;: &amp;quot;JSON&amp;quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;quot;keyword&amp;quot;: &amp;quot;人生&amp;quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;quot;page&amp;quot;: &amp;quot;1&amp;quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;quot;rows&amp;quot;: &amp;quot;20&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    def get_mrmy(self):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        从接口获取名人名言数据,随机选取一条返回,返回json数据.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        :return:json, 名人名言数据&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        wb_data = requests.get(self.url, headers=self.headers, params=self.parm)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        data = wb_data.json()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        if data[&amp;apos;error_code&amp;apos;] == 0:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            result = data[&amp;apos;result&amp;apos;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            random_num = random.randint(0, 19)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            return json.dumps(result[random_num])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        else:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            return json.dumps(data)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这个类是处理名人名言数据的，因为接口返回的是20条数据，因此我会随机选取一条返回给前端。&lt;/p&gt;
&lt;h3 id=&quot;前端&quot;&gt;&lt;a href=&quot;#前端&quot; class=&quot;headerlink&quot; title=&quot;前端&quot;&gt;&lt;/a&gt;前端&lt;/h3&gt;&lt;p&gt;在前端我是用js的ajax方法异步获取数据，所以这里我只贴js部分的代码，代码如下：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;function famous()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    $.getJSON(&amp;apos;/blog/get_famous/&amp;apos;, function(data)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        var famous_data = jQuery.parseJSON(data);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        console.log(famous_data);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        $(&amp;apos;#mrmy-body&amp;apos;).html(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;apos;&amp;lt;p&amp;gt;&amp;apos; + famous_data.famous_saying + &amp;apos;&amp;lt;/p&amp;gt;&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        $(&amp;apos;#mrmy-footer&amp;apos;).html(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;apos;&amp;lt;p&amp;gt;By--&amp;apos; + famous_data.famous_name + &amp;apos;&amp;lt;/p&amp;gt;&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        )&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;url-py&quot;&gt;&lt;a href=&quot;#url-py&quot; class=&quot;headerlink&quot; title=&quot;url.py&quot;&gt;&lt;/a&gt;url.py&lt;/h3&gt;&lt;p&gt;在url部分就为前后端通讯加一条路由就行了。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;url(r&amp;apos;^get_famous&amp;apos;, views.famous, name=&amp;apos;famous&amp;apos;),&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这样一个名人名言的接口调用就完成了。&lt;/p&gt;
&lt;h2 id=&quot;天气资讯&quot;&gt;&lt;a href=&quot;#天气资讯&quot; class=&quot;headerlink&quot; title=&quot;天气资讯&quot;&gt;&lt;/a&gt;天气资讯&lt;/h2&gt;&lt;p&gt;天气资讯接口的调用方式也非常简单，和这部分是一样的。我就不详细的贴了，就是一个页面一个搜索框一个展示，方法和上文说的是一样的，相信聪明的你自己就可以写出来。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;文章首发：&lt;a href=&quot;http://wybblog.applinzi.com/blog/article/30/&quot;&gt;我的博客&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;好久没发文章了，最近我在学习使用第三方接口来优化我的网站，这篇文章介绍两个接口吧，都是从百度API商店折腾了之后使用的，一个是天气资讯，另一个是名人名言。&lt;br&gt;
    
    </summary>
    
      <category term="Python" scheme="http://www.wengyb.com/categories/Python/"/>
    
    
      <category term="python" scheme="http://www.wengyb.com/tags/python/"/>
    
      <category term="Django" scheme="http://www.wengyb.com/tags/Django/"/>
    
  </entry>
  
  <entry>
    <title>Python小知识——深度剖析获取迭代序列</title>
    <link href="http://www.wengyb.com/2016/03/12/Python%E5%B0%8F%E7%9F%A5%E8%AF%86%E2%80%94%E2%80%94%E6%B7%B1%E5%BA%A6%E5%89%96%E6%9E%90%E8%8E%B7%E5%8F%96%E8%BF%AD%E4%BB%A3%E5%BA%8F%E5%88%97/"/>
    <id>http://www.wengyb.com/2016/03/12/Python小知识——深度剖析获取迭代序列/</id>
    <published>2016-03-12T02:41:06.000Z</published>
    <updated>2016-03-31T03:15:37.000Z</updated>
    
    <content type="html">&lt;p&gt;相信获取迭代序列是一个非常普遍的需求功能，基本上写代码都要考虑到这个东西，我自己写博客系统的时候也经常遇到这个问题，实现起来其实很简单，只要在for循环外加一个参数监听迭代就行了，比如下面这种方式&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;li = [&amp;apos;a&amp;apos;, &amp;apos;b&amp;apos;, &amp;apos;c&amp;apos;, &amp;apos;d&amp;apos;, &amp;apos;f&amp;apos;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;num = 0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;for i in li:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	print &amp;apos;index :&amp;apos; num, &amp;apos;element :&amp;apos;, i&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	num += 1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这种方式获取起来很容写，也比较好理解，但是这个运行过程中多声明了一个变量，性能上并不是最优的（当然基本上我们写的东西性能上不差这一点）。&lt;/p&gt;
&lt;p&gt;另一个替代方法是使用len（）和range（）的结合使用，这个方法用起来也是非常方便的，代码如下：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;li = [&amp;apos;a&amp;apos;, &amp;apos;b&amp;apos;, &amp;apos;c&amp;apos;, &amp;apos;d&amp;apos;, &amp;apos;f&amp;apos;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;for i in range(len(li)):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	print &amp;apos;index :&amp;apos; i, &amp;apos;element :&amp;apos;, li[i]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;类似的方法还有zip（）， while循环等等。&lt;/p&gt;
&lt;h2 id=&quot;enumerate&quot;&gt;&lt;a href=&quot;#enumerate&quot; class=&quot;headerlink&quot; title=&quot;enumerate&quot;&gt;&lt;/a&gt;enumerate&lt;/h2&gt;&lt;p&gt;今天在看书的时候突然看到这个函数，这个函数处理起来真的是非常巧妙，至少我感觉比上文提到的方法更简单，更粗暴。&lt;/p&gt;
&lt;p&gt;看下面的代码：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;li = [&amp;apos;a&amp;apos;, &amp;apos;b&amp;apos;, &amp;apos;c&amp;apos;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;for i, e in enumerate(li):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	print  i, e&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;======输出结果===========&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;0 a&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;1 b&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2 c&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[Finished in 0.1s]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这种实现方式代码简洁，可读性强。其函数签名如下：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;enumerate(sequence, start=0)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;其中的sequence可以为任意一个可迭代的对象，函数的本质上就是一个迭代器，可以使用next()方法获取下一个迭代元素，比如上面的代码我们做一下简单的修改。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;li = [&amp;apos;a&amp;apos;, &amp;apos;b&amp;apos;, &amp;apos;c&amp;apos;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print enumerate(li)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;e = enumerate(li)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print e.next()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print e.next()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;=======输出结果======&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;enumerate object at 0x1079faaa0&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(0, &amp;apos;a&amp;apos;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(1, &amp;apos;b&amp;apos;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;不适用于字典&quot;&gt;&lt;a href=&quot;#不适用于字典&quot; class=&quot;headerlink&quot; title=&quot;不适用于字典&quot;&gt;&lt;/a&gt;不适用于字典&lt;/h3&gt;&lt;p&gt;字典这个类型是无序的，所以无法使用enumerate来处理字典的迭代,当然，你如果使用了也不会报错。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;相信获取迭代序列是一个非常普遍的需求功能，基本上写代码都要考虑到这个东西，我自己写博客系统的时候也经常遇到这个问题，实现起来其实很简单，只要在for循环外加一个参数监听迭代就行了，比如下面这种方式&lt;br&gt;
    
    </summary>
    
      <category term="Python" scheme="http://www.wengyb.com/categories/Python/"/>
    
    
      <category term="python" scheme="http://www.wengyb.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>《心迷宫》影评</title>
    <link href="http://www.wengyb.com/2016/03/08/%E3%80%8A%E5%BF%83%E8%BF%B7%E5%AE%AB%E3%80%8B%E5%BD%B1%E8%AF%84/"/>
    <id>http://www.wengyb.com/2016/03/08/《心迷宫》影评/</id>
    <published>2016-03-08T06:37:51.000Z</published>
    <updated>2016-03-31T06:49:04.000Z</updated>
    
    <content type="html">&lt;p&gt;今天加班回来有点迟，什么事情都不想干，于是就打开电视看一看电影，翻到了《心迷宫》这部电影，我记得当时是看到了豆瓣电影里面的2015年度推荐电影的No.1。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;br&gt;故事描述的是一个村里的三段故事，一个很普通的三段故事。村长的儿子想要去大城市，而村长不允许儿子出去，但也不允许儿子找村里的姑娘结婚，两父子闹纠纷。王宝三背着妻子和初恋相好。陈自立在外面打工，找小三。就是这么简单的三段故事，通过各种不同的巧合连接到了一起。看似毫无关系，却紧紧相连，环环相扣，组织成了整部电影。&lt;/p&gt;
&lt;p&gt;电影的表现形式也比较多样化，倒叙、正叙、穿插想象的场景，各条线平行发展，整个剧本表现出来的样子让人惊叹。但是平心而论，整部电影的风格并不新颖，炫技般的连环叙事，阴差阳错的人物关系，错上加错的故事走向，多条线索连环交织。以前我在看《记忆碎片》的时候，也有这种惊艳的感觉。这种故事，对编剧的要求非常高，最关键的是，在今年的华语影坛，很少这样的电影出现。&lt;/p&gt;
&lt;p&gt;剧中的人物关系如下：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;村长与儿子宗耀不睦，村长希望儿子守在爹娘身边，宗耀希望去大城市，二人见面不说话。&lt;br&gt;宗耀与同村女孩黄欢是隐秘的情侣&lt;br&gt;黄欢甩了王宝山的弟弟，导致后者酗酒坠亡，王宝山扬言要黄欢抵命。&lt;br&gt;有妇之夫王宝山与有夫之妇丽琴有地下情&lt;br&gt;丽琴与瘸子陈自立是夫妻，后者经常酗酒打骂妻子&lt;br&gt;小卖铺老板大壮爱慕丽琴&lt;br&gt;闲人白虎嗜赌如命，欠了一屁股债&lt;br&gt;白国庆是白虎的哥哥，穷的叮当响&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;不做过多的剧透，故事通过多线并行、正叙倒叙后，又回到了原点，就像一个环状的结构。最后两父子在殡棺前对视的一幕给整个环画上了原点。&lt;/p&gt;
&lt;p&gt;电影原名是《殡棺》，也就是整部电影的线索，可能是过审的原因吧，需要把名字改为《心迷宫》，改完名字后，更有文艺气息了，更能发人深思，电影演绎的就是每个人内心的阴暗面，几个关键人物都有着自己的线索，电影最后除了两父子的线索，其他也都交代了结果，陈自立的拐杖，丽琴埋了。黄欢的勋章，埋了。大壮的手镯，自己留着。而两父子的殡棺，最后导演并没有给出结果，也是留给观影者自己想想的空间吧。&lt;/p&gt;
&lt;p&gt;就情感层面而言，电影带给观众的体验并不强烈，电影中没有任何的暴躁和煽情，感情戏处理的非常低调，故事就这么跟着线索推进，感受到强烈的反而是导演在细节和人物情绪上的刻画以及关于人性自我、无意识的冲动抑或压抑的刻画，更多的是窥探和揭示，棺木和枯树、胸章和电视机里的猩猩，这些象征符号都值得思考。&lt;/p&gt;
&lt;p&gt;整部电影有两处败笔，第一是最后阶段的自首的字幕，不过在大陆上映的电影，必须要带上这些东西，大家都懂。第二是演员水平低，整部电影包括导演在内，全都是新人，起码我看演员表的时候没有一个认识，看电影的时候就能发现，演员的表演很生硬，要么面瘫要么很假。&lt;/p&gt;
&lt;p&gt;不过话说回来，这部电影能上映已经很不错了，整部电影描述的中心都是人的阴暗面，假孕骗婚，背妻偷情，包养小三，赌博，家暴。用导演的话说：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;十年前，可能这个片子过不了审。五年前，可能要重新拍一个结局才能上。到今天，只需要加一行字幕。 可能再过十年，这个字幕是不是就没了呢？&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;没能去电影院支持这么好的电影真是有点可惜，虽然电影有一些小败笔，不过并不影响整部电影的质量，170W在大片中可能都不够一线明星的出场费，但是它却成就了这部2015年最佳的故事片。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;今天加班回来有点迟，什么事情都不想干，于是就打开电视看一看电影，翻到了《心迷宫》这部电影，我记得当时是看到了豆瓣电影里面的2015年度推荐电影的No.1。&lt;br&gt;
    
    </summary>
    
      <category term="MyTalk" scheme="http://www.wengyb.com/categories/MyTalk/"/>
    
    
      <category term="个人杂谈" scheme="http://www.wengyb.com/tags/%E4%B8%AA%E4%BA%BA%E6%9D%82%E8%B0%88/"/>
    
      <category term="影评" scheme="http://www.wengyb.com/tags/%E5%BD%B1%E8%AF%84/"/>
    
  </entry>
  
  <entry>
    <title>selenium2自动化测试实战书评</title>
    <link href="http://www.wengyb.com/2016/03/07/selenium2%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95%E5%AE%9E%E6%88%98%E4%B9%A6%E8%AF%84/"/>
    <id>http://www.wengyb.com/2016/03/07/selenium2自动化测试实战书评/</id>
    <published>2016-03-07T06:58:57.000Z</published>
    <updated>2016-03-31T07:03:09.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;1&quot;&gt;&lt;a href=&quot;#1&quot; class=&quot;headerlink&quot; title=&quot;1&quot;&gt;&lt;/a&gt;1&lt;/h2&gt;&lt;p&gt;《Selenium2自动化测试实战》这本书是今年刚刚出版的有关python-selenium的测试书，从市场上来看，应该是唯一的一本Python-Selenium的书籍。我看了一下出版信息，第一版只印了三千册，也许以后就是绝版咯！&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;br&gt;Selenium是现在比较流行的Web端的自动化测试工具，需要使用变成语言来驱动，因为我是看Python的，虽然Python也是可以驱动Selenium，但是市场上关于Python的资料几乎为0，从这点上来看，这本书目前应该是Python-Selenium最好的入门书籍。&lt;/p&gt;
&lt;p&gt;最初看到Selenium的时候，其实我并没有研究这块，当时我看的是Appium，因为驱动Appium也可以用Python，所以我才去学了Python，结果Appium的文档都是英文的，看起来心好累，于是通过Appium顺带了解了Selenium，起码这东西还有一些中文的资料参考，也就是那时候知道了虫师（本书的作者）&lt;/p&gt;
&lt;h2 id=&quot;2&quot;&gt;&lt;a href=&quot;#2&quot; class=&quot;headerlink&quot; title=&quot;2&quot;&gt;&lt;/a&gt;2&lt;/h2&gt;&lt;p&gt;书的内容大致分为三块，一是Python基础、二是Selenium基础、三是实战教程。对于初学者来说还是非常友好的，跟着一步一步走，大概能对Python-Selenium这块有了那么一些大概的了解，起码能够熟练敲一些简单的代码，通过这个找一份工作肯定不是什么难事。&lt;/p&gt;
&lt;h2 id=&quot;3&quot;&gt;&lt;a href=&quot;#3&quot; class=&quot;headerlink&quot; title=&quot;3&quot;&gt;&lt;/a&gt;3&lt;/h2&gt;&lt;p&gt;书中的Python基础说的比较简单，或者说只是非常非常简单的介绍，只是让你知道有这么个东西，具体要怎么去用，还是需要你自己去找一些Python的东西来看，比如《Python学习手册》、《Python核心编程》、《笨办法学Python》等书籍。要是想通过本书学习Python，那基本上是没戏的，所以我觉得这部分有点像筹字数的东西，Python基础和最前面的测试理论基本上我都觉得是用来筹字数的，加起来占了全书的三分之一。&lt;/p&gt;
&lt;h2 id=&quot;4&quot;&gt;&lt;a href=&quot;#4&quot; class=&quot;headerlink&quot; title=&quot;4&quot;&gt;&lt;/a&gt;4&lt;/h2&gt;&lt;p&gt;第二部分是Selenium基础，包括元素定位、测试模型、生成测试报告等内容，这部分内容基本上可以理解为官方文档的翻译加上一些作者工作中遇到的一些问题的解决方案。这部分内容接近占了全书的五分之三。是书中的大块内容，这部分的质量还是很好的。图文说明很清晰，最关键的是，每一种方法都带有示例。&lt;/p&gt;
&lt;p&gt;新手学东西，最怕的就是收乱七八糟的原因干扰，导致跟着敲代码无法实现书中描述的功能，如果是新手自己去网络上找相关Web控件元素，如果它对Web的知识（Html、Css、Js）不了解，很容易写着写着这个方法无法实现，而出现这种情况的原因就是网络上的页面比较复杂，是由于其他原因导致方法失败，而新手并不知道如何去排查这些问题。而书中不一样，相关的html代码都给你写好了，只要对着码，就能快速搭建某种方法的很干净的测试环境，让你能马上看到这个方法的实现，属于wysiwyg（所见即所得）。跟着敲代码，基本上能够有那么一些成就感。书中的代码排版也比较清晰，很容易就能看明白。&lt;/p&gt;
&lt;h2 id=&quot;5&quot;&gt;&lt;a href=&quot;#5&quot; class=&quot;headerlink&quot; title=&quot;5&quot;&gt;&lt;/a&gt;5&lt;/h2&gt;&lt;p&gt;最后一部分是实战部分，也是我买书的重要原因之一。前面部分其实我已经通过强大的互联网阅读过了，关于实战部分确实需要了解一下，不过可惜的是，书中对于实战部分介绍的非常少，仅仅是魅族社区的一个登陆功能，如果这部分作者能够多写一些内容，这本书就会比较完美。&lt;/p&gt;
&lt;h2 id=&quot;6&quot;&gt;&lt;a href=&quot;#6&quot; class=&quot;headerlink&quot; title=&quot;6&quot;&gt;&lt;/a&gt;6&lt;/h2&gt;&lt;p&gt;如果是一个大神，那么直接去读源码，这本书对你来说基本上是没有用的。如果是一个老鸟，可以直接去看Python-Selenium的官方文档，反正英文好就能读得懂。如果是新手，那么这本书还是值得一读的。乙醇（测试达人）在序言中也专门阐述了这个观点。&lt;/p&gt;
&lt;h2 id=&quot;7&quot;&gt;&lt;a href=&quot;#7&quot; class=&quot;headerlink&quot; title=&quot;7&quot;&gt;&lt;/a&gt;7&lt;/h2&gt;&lt;p&gt;最后一部分目录上写了，但是在书中却是没有涉及到这块，而是需要自己去重新下一个文件，不知道是作者偷懒了还是什么其他原因。图灵的书经常有这种情况，但是图灵的书那都是800多页啊！而这本书总共也才300页。&lt;/p&gt;
&lt;p&gt;其实从买来到读完，也就花了一天的时间，大半部分的内容我老早就看过了，一个原因上文说了，想看看实战相关的内容，另一个原因就是支持一下作者吧，毕竟就算这本书是翻译官方文档，那也是非常辛苦的一个工程，我自己翻译过，心里懂到底是多么苦，&lt;a href=&quot;http://python.usyiyi.cn/django/index.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;传送门点我&lt;/a&gt;。里面是Django的中文众人翻译的项目，我翻译了一篇，感觉整个人都不好了。。。。。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;----------写于很困很困的周日
&lt;/code&gt;&lt;/pre&gt;</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;1&quot;&gt;&lt;a href=&quot;#1&quot; class=&quot;headerlink&quot; title=&quot;1&quot;&gt;&lt;/a&gt;1&lt;/h2&gt;&lt;p&gt;《Selenium2自动化测试实战》这本书是今年刚刚出版的有关python-selenium的测试书，从市场上来看，应该是唯一的一本Python-Selenium的书籍。我看了一下出版信息，第一版只印了三千册，也许以后就是绝版咯！&lt;br&gt;
    
    </summary>
    
      <category term="MyTalk" scheme="http://www.wengyb.com/categories/MyTalk/"/>
    
    
      <category term="个人杂谈" scheme="http://www.wengyb.com/tags/%E4%B8%AA%E4%BA%BA%E6%9D%82%E8%B0%88/"/>
    
      <category term="书评" scheme="http://www.wengyb.com/tags/%E4%B9%A6%E8%AF%84/"/>
    
  </entry>
  
  <entry>
    <title>Django博客开发（九）—添加多说评论</title>
    <link href="http://www.wengyb.com/2016/03/01/Django%E5%8D%9A%E5%AE%A2%E5%BC%80%E5%8F%91%EF%BC%88%E4%B9%9D%EF%BC%89%E2%80%94%E6%B7%BB%E5%8A%A0%E5%A4%9A%E8%AF%B4%E8%AF%84%E8%AE%BA/"/>
    <id>http://www.wengyb.com/2016/03/01/Django博客开发（九）—添加多说评论/</id>
    <published>2016-03-01T03:08:18.000Z</published>
    <updated>2016-03-31T03:09:30.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h2&gt;&lt;p&gt;MacBook的数据被抹去之后，我又重写了一个博客，同样是用现成已有的前端模板写的。这次我只要一个简洁的功能就行了，太复杂很多功能用不到，毫无意义。这次的博客我多加了两个功能，一个是多说的评论框，另一个是日历。另外，我把自己的公众号的二维码也一起放上去了。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;版本相关&lt;br&gt;操作系统：Mac OS X EI Caption&lt;br&gt;Python版本：2.7&lt;br&gt;IDE：PyCharm&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&quot;为什么要评论框&quot;&gt;&lt;a href=&quot;#为什么要评论框&quot; class=&quot;headerlink&quot; title=&quot;为什么要评论框&quot;&gt;&lt;/a&gt;为什么要评论框&lt;/h2&gt;&lt;p&gt;其实我的博客PV很低，不过再怎样也应该有一个可以评论的地方，虽然没几个人会起来折腾。&lt;br&gt;评论框的用处有两个，一个在文章底部，另一个是留言板，所以这次的博客专门加了留言板的页面。&lt;/p&gt;
&lt;h2 id=&quot;多说&quot;&gt;&lt;a href=&quot;#多说&quot; class=&quot;headerlink&quot; title=&quot;多说&quot;&gt;&lt;/a&gt;多说&lt;/h2&gt;&lt;p&gt;首先必须要注册一个多说的账号，&lt;a href=&quot;http://duoshuo.com&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;点击这里&lt;/a&gt;，注册成功之后，在后台管理中的工具可以找到通用代码，这段代码就是一个js的代码，嵌入到你的文章就行了。当然，多说还专门为python做了一个SDK，两种方法都可以实现。&lt;/p&gt;
&lt;p&gt;##Js代码实现&lt;br&gt;公用代码如下：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;!-- 多说评论框 start --&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;lt;div class=&amp;quot;ds-thread&amp;quot; data-thread-key=&amp;quot;请将此处替换成文章在你的站点中的ID&amp;quot; data-title=&amp;quot;请替换成文章的标题&amp;quot; data-url=&amp;quot;请替换成文章的网址&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;!-- 多说评论框 end --&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;!-- 多说公共JS代码 start (一个网页只需插入一次) --&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;script type=&amp;quot;text/javascript&amp;quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;var duoshuoQuery = &amp;#123;short_name:&amp;quot;自动生成&amp;quot;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	(function() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		var ds = document.createElement(&amp;apos;script&amp;apos;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		ds.type = &amp;apos;text/javascript&amp;apos;;ds.async = true;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		ds.src = (document.location.protocol == &amp;apos;https:&amp;apos; ? &amp;apos;https:&amp;apos; : &amp;apos;http:&amp;apos;) + &amp;apos;//static.duoshuo.com/embed.js&amp;apos;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		ds.charset = &amp;apos;UTF-8&amp;apos;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		(document.getElementsByTagName(&amp;apos;head&amp;apos;)[0] &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		 || document.getElementsByTagName(&amp;apos;body&amp;apos;)[0]).appendChild(ds);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;)();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;!-- 多说公共JS代码 end --&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;其实代码里面说的也很详细的，你只要在文章的底部，在body标签内放上这段代码，然后把div中的几个东西改一下就可以了。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;div class=&amp;quot;ds-thread&amp;quot; data-thread-key=&amp;quot;lm&amp;quot; data-title=&amp;quot;留言板&amp;quot; data-url=&amp;quot;&amp;#123;% url &amp;apos;message&amp;apos; %&amp;#125;&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;我的留言板的代码，其实留言板你就当成是一篇文章就行了。文章内部的代码如下：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;div class=&amp;quot;ds-thread&amp;quot; data-thread-key=&amp;quot;&amp;#123;&amp;#123; article_view.id &amp;#125;&amp;#125;&amp;quot; data-title=&amp;quot;&amp;#123;&amp;#123; article_view.blog_title &amp;#125;&amp;#125;&amp;quot; data-url=&amp;quot;&amp;#123;% url &amp;apos;article&amp;apos; article_view.id %&amp;#125;&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;只要这样配置好之后，再重新打开网页，你就会发现网页下方多了一个多说评论框。&lt;/p&gt;
&lt;h2 id=&quot;多说SDK&quot;&gt;&lt;a href=&quot;#多说SDK&quot; class=&quot;headerlink&quot; title=&quot;多说SDK&quot;&gt;&lt;/a&gt;多说SDK&lt;/h2&gt;&lt;p&gt;SDK的原理其实就是在Django中多安装一个应用，&lt;a href=&quot;http://dev.duoshuo.com/python-sdk&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Python-SDK的说明文档&lt;/a&gt;已经把相关信息说的很清楚了。我没有使用这个方法，因为JS代码已经非常灵活了，没必要再单独使用SDK。&lt;/p&gt;
&lt;h2 id=&quot;多说后台&quot;&gt;&lt;a href=&quot;#多说后台&quot; class=&quot;headerlink&quot; title=&quot;多说后台&quot;&gt;&lt;/a&gt;多说后台&lt;/h2&gt;&lt;p&gt;在多说后台里面可以管理很多东西，包括评论过滤，评论框的主体，允许图片等等，还可以导出评论。当然，我的blog基本上没什么人关注，所以不会有太多人来留言。&lt;/p&gt;
&lt;h2 id=&quot;多说分享&quot;&gt;&lt;a href=&quot;#多说分享&quot; class=&quot;headerlink&quot; title=&quot;多说分享&quot;&gt;&lt;/a&gt;多说分享&lt;/h2&gt;&lt;p&gt;多说的后台里面多了一个分享的功能，代码如下：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;div class=&amp;quot;ds-share&amp;quot; data-thread-key=&amp;quot;此处请替换为当前文章的thread-key&amp;quot; data-title=&amp;quot;此处请替换为分享时显示的标题&amp;quot; data-images=&amp;quot;此处请替换为分享时显示的图片的链接地址&amp;quot; data-content=&amp;quot;此处请替换为分享时显示的内容&amp;quot; data-url=&amp;quot;此处请替换为分享时显示的链接地址&amp;quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;div class=&amp;quot;ds-share-inline&amp;quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;lt;ul  class=&amp;quot;ds-share-icons-16&amp;quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      	&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      	&amp;lt;li data-toggle=&amp;quot;ds-share-icons-more&amp;quot;&amp;gt;&amp;lt;a class=&amp;quot;ds-more&amp;quot; href=&amp;quot;javascript:void(0);&amp;quot;&amp;gt;分享到：&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;lt;li&amp;gt;&amp;lt;a class=&amp;quot;ds-weibo&amp;quot; href=&amp;quot;javascript:void(0);&amp;quot; data-service=&amp;quot;weibo&amp;quot;&amp;gt;微博&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;lt;li&amp;gt;&amp;lt;a class=&amp;quot;ds-qzone&amp;quot; href=&amp;quot;javascript:void(0);&amp;quot; data-service=&amp;quot;qzone&amp;quot;&amp;gt;QQ空间&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;lt;li&amp;gt;&amp;lt;a class=&amp;quot;ds-qqt&amp;quot; href=&amp;quot;javascript:void(0);&amp;quot; data-service=&amp;quot;qqt&amp;quot;&amp;gt;腾讯微博&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;lt;li&amp;gt;&amp;lt;a class=&amp;quot;ds-wechat&amp;quot; href=&amp;quot;javascript:void(0);&amp;quot; data-service=&amp;quot;wechat&amp;quot;&amp;gt;微信&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      	&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;lt;/ul&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;lt;div class=&amp;quot;ds-share-icons-more&amp;quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;lt;/div&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;/div&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &amp;lt;/div&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;我还没有使用，只是看到了，等有时间使用的时候再做一下相关分享吧。&lt;/p&gt;
&lt;h2 id=&quot;JS日历&quot;&gt;&lt;a href=&quot;#JS日历&quot; class=&quot;headerlink&quot; title=&quot;JS日历&quot;&gt;&lt;/a&gt;JS日历&lt;/h2&gt;&lt;p&gt;JS日历其实是一个很简单的东西，网络上现成的代码很多，翻一番拿来改一下就行了，下面是我copy的代码：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;75&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * Created by SvenWeng on 16/2/28.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;function montharr(m0, m1, m2, m3, m4, m5, m6, m7, m8, m9, m10, m11) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    this[0] = m0;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    this[1] = m1;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    this[2] = m2;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    this[3] = m3;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    this[4] = m4;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    this[5] = m5;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    this[6] = m6;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    this[7] = m7;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    this[8] = m8;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    this[9] = m9;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    this[10] = m10;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    this[11] = m11;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;function calendar() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    var monthNames = &amp;quot;JanFebMarAprMayJunJulAugSepOctNovDec&amp;quot;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    var today = new Date();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    var thisDay;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    var monthDays = new montharr(31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    year = today.getYear();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    thisDay = today.getDate();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    if (((year % 4 == 0) &amp;amp;&amp;amp; (year % 100 != 0)) || (year % 400 == 0)) monthDays[1] = 29;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    nDays = monthDays[today.getMonth()];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    firstDay = today;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    firstDay.setDate(1); // works fine for most systems&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    testMe = firstDay.getDate();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    if (testMe == 2) firstDay.setDate(0);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    startDay = firstDay.getDay();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    document.write(&amp;apos;&amp;lt;table border=&amp;quot;0&amp;quot; width=&amp;quot;100%&amp;quot; cellspacing=&amp;quot;0&amp;quot; cellpadding=&amp;quot;2&amp;quot; align=&amp;quot;CENTER&amp;quot; bgcolor=&amp;quot;#0080FF&amp;quot;&amp;gt;&amp;apos;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    document.write(&amp;apos;&amp;lt;TR&amp;gt;&amp;lt;TD align=&amp;quot;center&amp;quot;&amp;gt;&amp;apos;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    document.write(&amp;apos;&amp;lt;table border=&amp;quot;0&amp;quot; width=&amp;quot;100%&amp;quot; cellspacing=&amp;quot;1&amp;quot; cellpadding=&amp;quot;2&amp;quot; bgcolor=&amp;quot;Silver&amp;quot;&amp;gt;&amp;apos;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    document.write(&amp;apos;&amp;lt;tr&amp;gt;&amp;lt;th colspan=&amp;quot;7&amp;quot; bgcolor=&amp;quot;#C8E3FF&amp;quot;&amp;gt;&amp;apos;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    var dayNames = new Array(&amp;quot;星期日&amp;quot;, &amp;quot;星期一&amp;quot;, &amp;quot;星期二&amp;quot;, &amp;quot;星期三&amp;quot;, &amp;quot;星期四&amp;quot;, &amp;quot;星期五&amp;quot;, &amp;quot;星期六&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    var monthNames = new Array(&amp;quot;一月&amp;quot;, &amp;quot;二月&amp;quot;, &amp;quot;三月&amp;quot;, &amp;quot;四月&amp;quot;, &amp;quot;五月&amp;quot;, &amp;quot;六月&amp;quot;, &amp;quot;七月&amp;quot;, &amp;quot;八月&amp;quot;, &amp;quot;九月&amp;quot;, &amp;quot;十月&amp;quot;, &amp;quot;十一月&amp;quot;, &amp;quot;十二月&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    var now = new Date();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    document.write(&amp;apos;&amp;lt;font class=&amp;quot;today&amp;quot;&amp;gt;&amp;apos; + today.getFullYear() + &amp;quot;&amp;amp;nbsp;&amp;quot; + monthNames[now.getMonth()] + now.getDate() + &amp;quot;日&amp;amp;nbsp;&amp;quot; + dayNames[now.getDay()] + &amp;quot;&amp;lt;/FONT&amp;gt;&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    document.write(&amp;apos;&amp;lt;/TH&amp;gt;&amp;lt;/TR&amp;gt;&amp;lt;TR&amp;gt;&amp;lt;TH class=&amp;quot;thead&amp;quot;&amp;gt;日&amp;lt;/FONT&amp;gt;&amp;lt;/TH&amp;gt;&amp;apos;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    document.write(&amp;apos;&amp;lt;TH class=&amp;quot;thead&amp;quot;&amp;gt;一&amp;lt;/TH&amp;gt;&amp;apos;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    document.write(&amp;apos;&amp;lt;TH class=&amp;quot;thead&amp;quot;&amp;gt;二&amp;lt;/TH&amp;gt;&amp;apos;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    document.write(&amp;apos;&amp;lt;TH class=&amp;quot;thead&amp;quot;&amp;gt;三&amp;lt;/TH&amp;gt;&amp;apos;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    document.write(&amp;apos;&amp;lt;TH class=&amp;quot;thead&amp;quot;&amp;gt;四&amp;lt;/TH&amp;gt;&amp;apos;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    document.write(&amp;apos;&amp;lt;TH class=&amp;quot;thead&amp;quot;&amp;gt;五&amp;lt;/TH&amp;gt;&amp;apos;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    document.write(&amp;apos;&amp;lt;TH class=&amp;quot;thead&amp;quot;&amp;gt;六&amp;lt;/TH&amp;gt;&amp;apos;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    document.write(&amp;quot;&amp;lt;/TR&amp;gt;&amp;lt;TR&amp;gt;&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    column = 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    if (startDay &amp;gt; 0) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        document.write(&amp;apos;&amp;lt;td colspan=&amp;quot;&amp;apos; + startDay + &amp;apos;&amp;quot; bgcolor=&amp;quot;#ffffff&amp;quot;&amp;gt;&amp;lt;/td&amp;gt;&amp;apos;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    column += startDay;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    for (i = 1; i &amp;lt;= nDays; i++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        if (i == thisDay) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            document.write(&amp;apos;&amp;lt;/TD&amp;gt;&amp;lt;td align=&amp;quot;CENTER&amp;quot; bgcolor=&amp;quot;#76d2c5&amp;quot;&amp;gt;&amp;lt;FONT class=&amp;quot;whiteword&amp;quot;&amp;gt;&amp;lt;B&amp;gt;&amp;apos;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        else &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            document.write(&amp;apos;&amp;lt;/TD&amp;gt;&amp;lt;TD BGCOLOR=&amp;quot;#FFFFFF&amp;quot; ALIGN=&amp;quot;CENTER&amp;quot;&amp;gt;&amp;lt;FONT class=&amp;quot;nday&amp;quot;&amp;gt;&amp;apos;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        document.write(i);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        if (i == thisDay) document.write(&amp;quot;&amp;lt;/FONT&amp;gt;&amp;lt;/TD&amp;gt;&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        column++;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        if (column == 7) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            document.write(&amp;quot;&amp;lt;TR&amp;gt;&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            column = 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    if (column &amp;lt; 7) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        document.write(&amp;apos;&amp;lt;td colspan=&amp;quot;&amp;apos; + (7 - column) + &amp;apos;&amp;quot; bgcolor=&amp;quot;#ffffff&amp;quot;&amp;gt;&amp;lt;/td&amp;gt;&amp;apos;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    //document.write(&amp;apos;&amp;lt;TR&amp;gt;&amp;lt;td colspan=&amp;quot;3&amp;quot; align=&amp;quot;right&amp;quot; valign=&amp;quot;bottom&amp;quot;&amp;gt;&amp;apos;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    //document.write(&amp;apos;&amp;lt;font class=&amp;quot;whiteword&amp;quot;&amp;gt;&amp;lt;b&amp;gt;现在时间&amp;lt;/b&amp;gt;&amp;lt;/font&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td valign=&amp;quot;bottom&amp;quot; colspan=&amp;quot;4&amp;quot;&amp;gt;&amp;apos;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    document.write(&amp;apos;&amp;lt;div id=&amp;quot;clock&amp;quot; class=&amp;quot;clock&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;&amp;apos;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    document.write(&amp;apos;&amp;lt;/TD&amp;gt;&amp;lt;/TR&amp;gt;&amp;lt;/TABLE&amp;gt;&amp;lt;/TD&amp;gt;&amp;lt;/TR&amp;gt;&amp;lt;/TABLE&amp;gt;&amp;apos;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;在首页中引用一下就行了：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;div class=&amp;quot;box&amp;quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;lt;script language=&amp;quot;javascript&amp;quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		calendar();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		startclock();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h2&gt;&lt;p&gt;MacBook的数据被抹去之后，我又重写了一个博客，同样是用现成已有的前端模板写的。这次我只要一个简洁的功能就行了，太复杂很多功能用不到，毫无意义。这次的博客我多加了两个功能，一个是多说的评论框，另一个是日历。另外，我把自己的公众号的二维码也一起放上去了。&lt;br&gt;
    
    </summary>
    
      <category term="Python" scheme="http://www.wengyb.com/categories/Python/"/>
    
    
      <category term="python" scheme="http://www.wengyb.com/tags/python/"/>
    
      <category term="Django" scheme="http://www.wengyb.com/tags/Django/"/>
    
  </entry>
  
  <entry>
    <title>python生成二维码</title>
    <link href="http://www.wengyb.com/2016/03/01/python%E7%94%9F%E6%88%90%E4%BA%8C%E7%BB%B4%E7%A0%81/"/>
    <id>http://www.wengyb.com/2016/03/01/python生成二维码/</id>
    <published>2016-03-01T03:08:18.000Z</published>
    <updated>2016-03-31T03:14:29.000Z</updated>
    
    <content type="html">&lt;p&gt;版本相关&lt;br&gt;操作系统：Mac OS X EI Caption&lt;br&gt;Python版本：2.7&lt;br&gt;IDE：Sublime Text 3&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&quot;依赖库&quot;&gt;&lt;a href=&quot;#依赖库&quot; class=&quot;headerlink&quot; title=&quot;依赖库&quot;&gt;&lt;/a&gt;依赖库&lt;/h2&gt;&lt;p&gt;Python生成二维码需要的依赖库为PIL和QRcode。&lt;br&gt;坑爹的是，百度了好久都没有找到PIL，不知道是什么时候改名了，pillow就是传说中的PIL。&lt;br&gt;安装命令：sudo pip install pillow、sudo pip install qrcode&lt;br&gt;验证是否安装成功，使用命令from PIL import Image，就可以验证PIL是否安装成功，qrcode则使用import qrcode，两条命令不报错，就说明依赖的环境已经完毕了。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;使用qrcode&quot;&gt;&lt;a href=&quot;#使用qrcode&quot; class=&quot;headerlink&quot; title=&quot;使用qrcode&quot;&gt;&lt;/a&gt;使用qrcode&lt;/h2&gt;&lt;p&gt;qrcode使用起来也很简单，代码如下：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;import qrcode&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;qr = qrcode.QRCode(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    version=7,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    error_correction=qrcode.constants.ERROR_CORRECT_L,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    box_size=10,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    border=4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;qr.add_data(&amp;quot;Hello&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;qr.make(fit=True)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;img = qr.make_image()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;img.save(&amp;quot;test.png&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;参数 version 表示生成二维码的尺寸大小，取值范围是 1 至 40，最小尺寸 1 会生成 21 &lt;em&gt; 21 的二维码，version 每增加 1，生成的二维码就会添加 4 尺寸，例如 version 是 2，则生成 25 &lt;/em&gt; 25 的二维码。&lt;br&gt;参数 error_correction 指定二维码的容错系数，分别有以下4个系数：&lt;br&gt;1.ERROR_CORRECT_L: 7%的字码可被容错&lt;br&gt;2.ERROR_CORRECT_M: 15%的字码可被容错&lt;br&gt;3.ERROR_CORRECT_Q: 25%的字码可被容错&lt;br&gt;4.ERROR_CORRECT_H: 30%的字码可被容错&lt;br&gt;参数 box_size 表示二维码里每个格子的像素大小。&lt;br&gt;参数 border 表示边框的格子厚度是多少（默认是4）。&lt;br&gt;运行代码后，会在代码的当前目录下生成一个test.png的二维码，用手机扫一下就可以看到Hello了。&lt;/p&gt;
&lt;h2 id=&quot;带有logo的二维码&quot;&gt;&lt;a href=&quot;#带有logo的二维码&quot; class=&quot;headerlink&quot; title=&quot;带有logo的二维码&quot;&gt;&lt;/a&gt;带有logo的二维码&lt;/h2&gt;&lt;p&gt;生成这个二维码的原理就是利用PIL库操作icon，把icon放到二维码的正中间。PIL操作没有去了解，就直接使用脚本之家的代码来做事例。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;import Image&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import qrcode&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;qr = qrcode.QRCode(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    version=2,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    error_correction=qrcode.constants.ERROR_CORRECT_H,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    box_size=10,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    border=1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;qr.add_data(&amp;quot;http://jb51.net/&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;qr.make(fit=True)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;img = qr.make_image()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;img = img.convert(&amp;quot;RGBA&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;icon = Image.open(&amp;quot;favicon.png&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;img_w, img_h = img.size&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;factor = 4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;size_w = int(img_w / factor)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;size_h = int(img_h / factor)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;icon_w, icon_h = icon.size&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;if icon_w &amp;gt; size_w:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    icon_w = size_w&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;if icon_h &amp;gt; size_h:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    icon_h = size_h&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;icon = icon.resize((icon_w, icon_h), Image.ANTIALIAS)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;w = int((img_w - icon_w) / 2)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;h = int((img_h - icon_h) / 2)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;img.paste(icon, (w, h), icon)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;img.save(&amp;quot;dhqme_qrcode.png&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</content>
    
    <summary type="html">
    
      &lt;p&gt;版本相关&lt;br&gt;操作系统：Mac OS X EI Caption&lt;br&gt;Python版本：2.7&lt;br&gt;IDE：Sublime Text 3&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&quot;依赖库&quot;&gt;&lt;a href=&quot;#依赖库&quot; class=&quot;headerlink&quot; title=&quot;依赖库&quot;&gt;&lt;/a&gt;依赖库&lt;/h2&gt;&lt;p&gt;Python生成二维码需要的依赖库为PIL和QRcode。&lt;br&gt;坑爹的是，百度了好久都没有找到PIL，不知道是什么时候改名了，pillow就是传说中的PIL。&lt;br&gt;安装命令：sudo pip install pillow、sudo pip install qrcode&lt;br&gt;验证是否安装成功，使用命令from PIL import Image，就可以验证PIL是否安装成功，qrcode则使用import qrcode，两条命令不报错，就说明依赖的环境已经完毕了。&lt;br&gt;
    
    </summary>
    
      <category term="Python" scheme="http://www.wengyb.com/categories/Python/"/>
    
    
      <category term="python" scheme="http://www.wengyb.com/tags/python/"/>
    
      <category term="Django" scheme="http://www.wengyb.com/tags/Django/"/>
    
  </entry>
  
  <entry>
    <title>《卧虎藏龙—青冥宝剑》影评</title>
    <link href="http://www.wengyb.com/2016/02/28/%E3%80%8A%E5%8D%A7%E8%99%8E%E8%97%8F%E9%BE%99%E2%80%94%E9%9D%92%E5%86%A5%E5%AE%9D%E5%89%91%E3%80%8B%E5%BD%B1%E8%AF%84/"/>
    <id>http://www.wengyb.com/2016/02/28/《卧虎藏龙—青冥宝剑》影评/</id>
    <published>2016-02-28T06:34:21.000Z</published>
    <updated>2016-03-31T06:48:32.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;一&quot;&gt;&lt;a href=&quot;#一&quot; class=&quot;headerlink&quot; title=&quot;一&quot;&gt;&lt;/a&gt;一&lt;/h2&gt;&lt;p&gt;青冥宝剑是上周我去看的电影，自从住在电影院楼上之后，我发现我基本上不怎么去看电影了。&lt;br&gt;看完之后我其实就有想法要写一个影评的，但是生活嘛，总是会被各种琐碎的事情拖着。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;br&gt;上次MacBook的数据全部被抹去之后，连带着原来写的博客代码也全部没了。再加上第一次自己写博客前端，整个模板实在是太花哨了，现在想换一个简单的。今天花了一天的时间，总算折腾折腾这把前端写完了，正在思考着要怎么去设计数据库，好吧有时候我是有点强迫症，现成有的东西我不想用，只想自己设计。&lt;br&gt;逻辑想烦的时候来补一下耽搁了一周的影评。&lt;/p&gt;
&lt;h2 id=&quot;二&quot;&gt;&lt;a href=&quot;#二&quot; class=&quot;headerlink&quot; title=&quot;二&quot;&gt;&lt;/a&gt;二&lt;/h2&gt;&lt;p&gt;青冥宝剑虽然标题戴上了卧虎藏龙，但是实际上和卧虎藏龙并没有什么关系（除了俞秀莲还是杨紫琼演的）。一开始去看的时候我以为是李安导演的，结果电影开始的时候发现并不是那么回事，导演是原来的武术指导袁和平。其它地方你再也找不到和原来的卧虎藏龙有什么关系了。&lt;/p&gt;
&lt;h2 id=&quot;三&quot;&gt;&lt;a href=&quot;#三&quot; class=&quot;headerlink&quot; title=&quot;三&quot;&gt;&lt;/a&gt;三&lt;/h2&gt;&lt;p&gt;观看的时候起码我的感觉还是挺好的，导演毕竟是武术指导出身，整部电影的武打效果很赞，加上沿用了卧虎藏龙一的武打音效，整个中国武打style演绎的淋漓尽致，虽然甄子丹每次武打都显示的很装13。不过作为中国仅存的几位还在拍电影的打星，也不用计较这么多了。&lt;/p&gt;
&lt;h2 id=&quot;四&quot;&gt;&lt;a href=&quot;#四&quot; class=&quot;headerlink&quot; title=&quot;四&quot;&gt;&lt;/a&gt;四&lt;/h2&gt;&lt;p&gt;取景是在新西兰取景的，虽然取景在国外取景，但整部戏看下来都很有中国风。山顶练武、大雪纷飞，好汉聚会、酒铺相遇。大boss门派山门等取景效果看来，导演还是比较用心的，如果不是后续看影评看到是在新西兰取景的，我都不会有国外的感觉。&lt;/p&gt;
&lt;h2 id=&quot;五&quot;&gt;&lt;a href=&quot;#五&quot; class=&quot;headerlink&quot; title=&quot;五&quot;&gt;&lt;/a&gt;五&lt;/h2&gt;&lt;p&gt;剧情上整部剧并没有很突出的特点，可能由于编剧是老外的原因，整部剧的发展就是标准的美式剧情，简单概括来说就是出现了一个非常牛逼的宝贝，坏蛋的BOSS想要来夺取这个宝贝，然后正派实力不够保护宝贝，于是招募了一堆保镖来保护这个宝贝。通过不断的回忆历史来凸显了反派BOSS的强大，最后被正派人士KO的故事。&lt;br&gt;以上故事适用于绝大部分美剧。&lt;/p&gt;
&lt;h2 id=&quot;六&quot;&gt;&lt;a href=&quot;#六&quot; class=&quot;headerlink&quot; title=&quot;六&quot;&gt;&lt;/a&gt;六&lt;/h2&gt;&lt;p&gt;在观影的时候，当酒鬼和妹子挂掉之后，我的想法就是另外两个也肯定会挂掉，有这个想法并不是突然萌生出来的，在孤狼的临时团队中，孤狼作为头基本上不管事，那么团队发生矛盾的时候，就需要一个润滑剂来调剂，从影片的前半段上来看，酒鬼和妹子就是团队中的润滑剂，而另外两个男的更有本事（虽然后来证明本事也很水）。那么团队遇到危机（戴阎王来夺剑）的时候，最先死的肯定他们，同理，团队遇到危机需要裁员的时候，优先裁掉无法做实事的人。&lt;br&gt;以上纯粹观影时的想法。&lt;br&gt;还有一个小发现，整部片子原音应该是英文的，认证看口型的话，可以发现口型和字幕是对不上的。&lt;/p&gt;
&lt;h2 id=&quot;七&quot;&gt;&lt;a href=&quot;#七&quot; class=&quot;headerlink&quot; title=&quot;七&quot;&gt;&lt;/a&gt;七&lt;/h2&gt;&lt;p&gt;看完电影之后，我去看了一下豆瓣，结果大跌眼镜，当时豆瓣的评分是3.7分（现在是5.1）。起码在我心里这部电影不应该这么低，大概扫了一下影评，基本上都是拿这部电影来和李安的第一部相比，当然，李安拍的确实挺好的，第二部也确实有些差距，但是只因为第二部比第一部差就给这么低的评分是不公平的。&lt;/p&gt;
&lt;h2 id=&quot;八&quot;&gt;&lt;a href=&quot;#八&quot; class=&quot;headerlink&quot; title=&quot;八&quot;&gt;&lt;/a&gt;八&lt;/h2&gt;&lt;p&gt;吐槽开始。&lt;br&gt;卧虎藏龙，龙是皇帝的象征，虎是大王的象征，卧虎藏龙隐喻着强大而内敛，这点杨紫琼是做到了，而甄子丹，呵呵，在酒铺打都得那些鬼魅笑容，尼玛这确定是龙虎而不是哈士奇？&lt;br&gt;京城的贝勒啊，戴阎王就带了这么几个人就可以横行京城？轻松的扫荡贝勒府？贝勒死了俞秀莲就带走了青冥剑，贝勒府一个外人就能做主？戴阎王这么牛逼的人在自己的老家被五六个人就KO了？&lt;br&gt;风景确实不错，但是它并不属于“中国武林”，“中国武林”应该是竹林深处、小溪潺潺、夕阳西下、东方日出等场景，《青冥宝剑》场景虽然很美、也很大气，但是它并不是我们传统概念上的武林。&lt;br&gt;用英文的口型来作为一部东方的电影真的好吗？给外国人看？李安卧虎藏龙的成功已经告诉我们了，东方传统的武林世界完全能够征服全世界，为什么要拍一个披着武林外壳的外国片？人家早就审美疲劳了。&lt;br&gt;反派的boss前期被渲染的那么牛逼，最后几招被KO。虽然最后反派一定会被干掉，但是这个过程也太太太简短了。俞秀莲一剑KO小boss。&lt;br&gt;…………&lt;br&gt;好像可以吐槽的东西太多了，我的作文不应该变成一个吐槽文，想看的吐槽文的请上豆瓣，那里有很多高级吐槽文。&lt;br&gt;总而言之，你如果是在贺岁烂片三部曲中脱离出来，那么除去你的情怀，抱着看一下大片的心态去，还是可以一看的，你如果想要重温《卧虎藏龙》的感觉，那么我建议你还是再去看一遍《卧虎藏龙》吧！&lt;/p&gt;
&lt;h2 id=&quot;九&quot;&gt;&lt;a href=&quot;#九&quot; class=&quot;headerlink&quot; title=&quot;九&quot;&gt;&lt;/a&gt;九&lt;/h2&gt;&lt;p&gt;现在流传着这么一个故事：&lt;br&gt;俞秀莲想获得青冥宝剑，但是青冥宝剑在铁贝勒手里，于是俞秀莲让孟思昭去挑战戴阎王，假死隐姓埋名。唆使寒梅偷学武当绝学，而后在寒梅产子后，唆使宫娥偷龙转凤，带走寒梅的孩子后，透露消息给戴阎王的手下，让戴阎王来抢夺孩子，在多年后透露这个消息给寒梅，导致寒梅上门寻仇，被戴阎王杀死，给两个小孩种下仇恨的种子。在铁贝勒死后，欺骗瞎眼女，让她蛊惑戴阎王来夺剑，于是自己上门守护宝剑，借口人手不够，广招天下武林人士，于是孟思昭化名孤狼带队来保护青冥宝剑。在宝剑争夺中唆使瞎眼女杀了铁小贝勒。无意中被酒鬼和妹子发现了阴谋，于是酒鬼和妹子死了。铁小贝勒死了，剑也被偷了，戴阎王拿了宝剑，于是借口夺剑报仇，俞秀莲带着团队团灭戴阎王，因为没有利用价值了，孤狼团队中剩下的两汉子也被KO了。最终，俞秀莲和孟思昭获得了青冥宝剑外加两个死心塌地的打手。&lt;br&gt;以上故事纯属虚构，如有雷同，绝无可能，因为故事是我瞎编的。&lt;br&gt;如果袁和平导演看到这么一个版本会不会把最后的结尾改为俞秀莲向孟思昭团队的两个汉子陈述这个大阴谋？来个剧情大反转？我猜肯定不会，如果这样改，那肯定要文青骂到死。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;一&quot;&gt;&lt;a href=&quot;#一&quot; class=&quot;headerlink&quot; title=&quot;一&quot;&gt;&lt;/a&gt;一&lt;/h2&gt;&lt;p&gt;青冥宝剑是上周我去看的电影，自从住在电影院楼上之后，我发现我基本上不怎么去看电影了。&lt;br&gt;看完之后我其实就有想法要写一个影评的，但是生活嘛，总是会被各种琐碎的事情拖着。&lt;br&gt;
    
    </summary>
    
      <category term="MyTalk" scheme="http://www.wengyb.com/categories/MyTalk/"/>
    
    
      <category term="个人杂谈" scheme="http://www.wengyb.com/tags/%E4%B8%AA%E4%BA%BA%E6%9D%82%E8%B0%88/"/>
    
      <category term="影评" scheme="http://www.wengyb.com/tags/%E5%BD%B1%E8%AF%84/"/>
    
  </entry>
  
  <entry>
    <title>毫无意义的小区公开</title>
    <link href="http://www.wengyb.com/2016/02/23/%E6%AF%AB%E6%97%A0%E6%84%8F%E4%B9%89%E7%9A%84%E5%B0%8F%E5%8C%BA%E5%85%AC%E5%BC%80/"/>
    <id>http://www.wengyb.com/2016/02/23/毫无意义的小区公开/</id>
    <published>2016-02-23T06:43:03.000Z</published>
    <updated>2016-03-31T06:49:26.000Z</updated>
    
    <content type="html">&lt;p&gt;一&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;《中共中央国务院关于进一步加强城市规划建设管理工作的若干意见》出台。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;二&lt;br&gt;《意见》中有很多坑爹的地方，最坑的莫过于住宅内部公共化。目的是解决交通路网布局问题，节约利用土地。起码我不知道这些草拟意见的人是怎么想的，实现大同？&lt;/p&gt;
&lt;p&gt;三&lt;br&gt;小区封闭不封闭，对现有的交通影响很大吗？起码我不这样觉得。&lt;br&gt;以深圳为例，深圳的交通算是挺好的。非高峰时期，基本上不怎么拥堵，甚至可以说大部分地方是通畅的。最堵的时期就是上下班的高峰期了，南头关、布吉关、梅林关等地方赌的一塌糊涂。小区开放不开放，对这些地方并无影响。而非高峰期，交通已经足够通畅，为什么要通过小区开放来实现道路优化？&lt;/p&gt;
&lt;p&gt;四&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;城市“窄马路、密路网””、&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;这种想法人民日报称为新思路、新理念。砖家称：建窄马路有两大好处，一是可以减少对城市既有建筑的破坏，从而更大程度地保持城市特色和风貌；二是窄马路可以缩短城市道路间距，方便出行，同时临街的面积更大，逛街的地方就能更多，城市会更有活力。&lt;br&gt;呵呵。呵呵呵。这些砖家真的是拍着脑袋来说话，想方案。从深圳宝安往南山有这么几个方式：1、广深高速（收费）。2、宝安大道转深南大道。3、宝安大道转北环。4、107国道转北环。第一种收费方案收费，不做讨论。234三种方案，不论宝安大道、北环、107国道，都是大道。大道尚且拥堵，再把马路缩小？宝安的路网再密，上班的时候总要从宝安往南山走，即使宝安区的道路建设的再优化又有什么用？到了交汇口一定会堵死，那么优化的意义何在？&lt;/p&gt;
&lt;p&gt;五&lt;br&gt;开放小区的安全问题谁来负责？砖家说可以通过物业的精细化管理来保障这个问题。那么问题来了，本来不存在问题的情景，硬是要创造出这个问题，然后再强加上物业精细化管理来解决这个问题，这不是脱裤子放屁吗？&lt;/p&gt;
&lt;p&gt;六&lt;br&gt;换个角度看问题，假设能选择，我想大部分人都会愿意购买封闭的小区，毕竟买一个房子，尤其是在大城市买房子，那基本上是全家人的所有积蓄。买了一个小区房，就能解决很多烦恼，小孩上学的问题，小孩老人的安全问题，舒适安全的生活环境……&lt;/p&gt;
&lt;p&gt;七&lt;br&gt;再换一个角度，从城市的整体规划上来看，也许是一个不错的举动吧，毕竟道路变多了，也许能在某种程度上解决某些时间段某些路段的交通拥堵，不过这个角度确实没办法模拟，高度太低了，没办法想象出为什么会有这种意见出来，也许有什么数据支持也说不定&lt;/p&gt;
&lt;p&gt;八&lt;br&gt;意见中免费开放所有公园，这个还是一个不错的意见，虽然现在基本上公园都免费了。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;后记：本来是想在时下热门新闻发表一些评论，无奈平时对这方面确实不了解，很难有很独特的见解，有点烂文的味道，而且这次写的东西并没有事先的查阅一些资料，导致也没有什么论点。不过勉强算是一次尝试吧，谢了文章就能知道自己还有哪些地方欠缺，不过现在真的感觉需要学习的东西好多，时间不够用，完全不够用啊！！！！&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;一&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;《中共中央国务院关于进一步加强城市规划建设管理工作的若干意见》出台。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="MyTalk" scheme="http://www.wengyb.com/categories/MyTalk/"/>
    
    
      <category term="个人杂谈" scheme="http://www.wengyb.com/tags/%E4%B8%AA%E4%BA%BA%E6%9D%82%E8%B0%88/"/>
    
  </entry>
  
  <entry>
    <title>迟来的ApplePay</title>
    <link href="http://www.wengyb.com/2016/02/18/%E8%BF%9F%E6%9D%A5%E7%9A%84ApplePay/"/>
    <id>http://www.wengyb.com/2016/02/18/迟来的ApplePay/</id>
    <published>2016-02-18T06:40:19.000Z</published>
    <updated>2016-03-31T06:49:15.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;一&quot;&gt;&lt;a href=&quot;#一&quot; class=&quot;headerlink&quot; title=&quot;一&quot;&gt;&lt;/a&gt;一&lt;/h2&gt;&lt;p&gt;今天，苹果公司带着看似狂拽酷炫吊炸天的ApplePay进入大中华。看着支持的银行列表中有招行。带着脑残粉的心态打开了wallet。咦竟然看不到ApplePay，这不科学啊。随后掌上生活推送消息，告知了使用ApplePay的正确姿势。打开一看。。。。好吧我还是放弃尝鲜了，原来小招和ApplePay一起歧视我的5S了。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;二&quot;&gt;&lt;a href=&quot;#二&quot; class=&quot;headerlink&quot; title=&quot;二&quot;&gt;&lt;/a&gt;二&lt;/h2&gt;&lt;p&gt;ApplePay看似风光无限，有着颠覆现有支付场景的趋势。实际上并没有什么卵用，这一阵新鲜过后，还会有多少人用？&lt;/p&gt;
&lt;h2 id=&quot;三&quot;&gt;&lt;a href=&quot;#三&quot; class=&quot;headerlink&quot; title=&quot;三&quot;&gt;&lt;/a&gt;三&lt;/h2&gt;&lt;p&gt;ApplePay是什么？今天各大媒体的板块都在大肆报道ApplePay，说白了，&lt;br&gt;ApplePay就是把刷卡变成了刷指纹！&lt;br&gt;ApplePay就是把刷卡变成了刷指纹！&lt;br&gt;ApplePay就是把刷卡变成了刷指纹！&lt;br&gt;重要的事情说三遍。ApplePay其实就是把原有的刷卡变成了刷指纹。看起来很神奇，不用网络也能支付，不用sim卡也能支付。其实并没有那么牛逼。你去买东西的时候，刷卡要网络吗？刷卡要sim卡吗？那么，ApplePay是怎么一回事呢？&lt;/p&gt;
&lt;h2 id=&quot;四&quot;&gt;&lt;a href=&quot;#四&quot; class=&quot;headerlink&quot; title=&quot;四&quot;&gt;&lt;/a&gt;四&lt;/h2&gt;&lt;p&gt;一张图看懂ApplePay。&lt;br&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/1228386-ee69bf66a030a1e0.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;ApplePay原理.png&quot;&gt;&lt;br&gt;从图中就可以看出，ApplePay其实就是一个验证方式。&lt;br&gt;传统的刷卡支付流程如图所示。你要在商户的终端上刷卡或者验芯，然后你的卡信息就会被终端读取，之后你在终端上输入密码，这样终端获取你的信息之后，再加上一些参数，通过报文的形式传递给服务端，这个服务端可能通过银联转到你的发卡行或者直接发送给你的发卡行（取决于卡与终端是否同行）。服务端验证通过记账扣费后，再告诉商户的终端这笔消费成功了，最后你就可以拿着商品走人了。&lt;br&gt;ApplePay和传统的方式不同之处在于，你绑卡的时候就会和银行签订一个快捷支付的协议。苹果就会把你的信息和你的卡信息绑定。使用ApplePay支付的时候，你的手机接触到终端，就会自动启动ApplePay验证，你按指纹的过程就是ApplePay验证支付的发起者和手机上存储的人是否一致，如果一致则发送一个验证通过的信息给终端，终端再把收到的信息和金额等相关信息发送给服务端，服务端验证通过记账扣费后，再告诉商户这笔消费就成功了，最后你就可以拿着商品走人了。&lt;br&gt;所以整个过程来看，并没有需要用到网络的地方，验证你的信息是在苹果手机上，传递数据给终端是通过NFC。所以报道说的无需网络和sim卡，其实也没什么神奇的地方。&lt;/p&gt;
&lt;h2 id=&quot;五&quot;&gt;&lt;a href=&quot;#五&quot; class=&quot;headerlink&quot; title=&quot;五&quot;&gt;&lt;/a&gt;五&lt;/h2&gt;&lt;p&gt;ApplePay和银联合作真的是不尴不尬，中国的营收占苹果的收入越来越多，然而ApplePay迟迟没有入华。&lt;br&gt;现在线上支付，基本是支付宝一家独大，微信银联略有市场，通联勉勉强强，其他惨不忍睹的局面。线下支付，银联仍然是巨头，但是份额不断的被支付宝和微信蚕食。&lt;br&gt;银联老大哥线下支付的地位不断的被蚕食，然而银联并没有好的方案来解决这个问题。ApplePay入华需要经过严格的审批，双方一拍即合，银联想通过ApplePay来保住线下支付的老大哥地位。而苹果想通过银联来过审。于是ApplePay带着阉割的功能和银联合作了&lt;/p&gt;
&lt;h2 id=&quot;六&quot;&gt;&lt;a href=&quot;#六&quot; class=&quot;headerlink&quot; title=&quot;六&quot;&gt;&lt;/a&gt;六&lt;/h2&gt;&lt;p&gt;为什么说ApplePay是被阉割的呢？&lt;br&gt;与支付宝微信不同的是，ApplePay只是一个验证手段，而支付宝和微信有自己一整套的生态来支持，比如O2O商户，自己的清算系统，账务系统。&lt;br&gt;在美国，苹果也有自己一套完整的生态来支持ApplePay，但在中国，ApplePay就只是一个验证手段。其他的生态全靠银联和各大行来支撑。&lt;/p&gt;
&lt;h2 id=&quot;七&quot;&gt;&lt;a href=&quot;#七&quot; class=&quot;headerlink&quot; title=&quot;七&quot;&gt;&lt;/a&gt;七&lt;/h2&gt;&lt;p&gt;ApplePay目前的形态，注定了只是一个烟花，看上去很美好，新鲜过后，并不会对现有的支付格局产生变化。&lt;/p&gt;
&lt;h3 id=&quot;产品形态&quot;&gt;&lt;a href=&quot;#产品形态&quot; class=&quot;headerlink&quot; title=&quot;产品形态&quot;&gt;&lt;/a&gt;产品形态&lt;/h3&gt;&lt;p&gt;以产品形态而言，ApplePay是通过NFC来完成支付的，那么就必然会产生一个问题，商户必须要有这么一个终端来支持NFC。而支付宝和微信只要一个二维码就够了。从安全的角度来说，确实ApplePay安全，硬件的安全系数肯定高于软件。但是阿里和腾讯的强大技术实力和深入人心的口碑在很大程度上弥补了这一点。大家信赖他们的产品，那么推广起来就不是大问题。&lt;br&gt;推广最大的难题在于成本。ApplePay必须要终端的支持，银联推广NFC推广了几年都没有什么很好的效果，很大程度上就是这个成本问题。原有的设备就能够处理线下支付的场景了，为什么还要花钱去更换新的终端？免费送终端，这个成本就大了。ApplePay必然也会卡在这个瓶颈下。而支付宝微信则不同，他们的“终端”就是一个二维码，那么打印一个二维码能花多少钱？当然支付宝和微信也有POS机，但是那是给大企业的解决方案，小市民打印一个二维码，也能享受到支付宝和微信支付的便捷。&lt;br&gt;更何况，ApplePay只支持IOS设备。&lt;/p&gt;
&lt;h3 id=&quot;市场推广&quot;&gt;&lt;a href=&quot;#市场推广&quot; class=&quot;headerlink&quot; title=&quot;市场推广&quot;&gt;&lt;/a&gt;市场推广&lt;/h3&gt;&lt;p&gt;这点ApplePay几乎完败，支付宝是怎么做推广的？在大企业层面，有无数的BD在游说大企业使用支付宝，各种补贴。小企业，有无数的地推团队在不停的推广支付宝。逢年过节，在搞几场马云请大家吃东西看电影，沃尔玛满一百减五十这些活动。支付宝是用真金白银在教大家用支付宝啊！&lt;br&gt;ApplePay的推广呢？对于苹果而言，并不划算。&lt;br&gt;第一、你使用ApplePay苹果并不会获得什么手续费，也许银联会给一些，但是肯定不够补贴推广的成本。&lt;br&gt;第二、ApplePay只是银联的一个手段，还有刷卡和闪付可以使用，并不需要不遗余力的帮你推广。&lt;br&gt;第三、支持的银行也不会花大本钱帮你推广，毕竟整个支付流程下来，银行也是要付给银联手续费的。最多拿一点点小东西来让大家尝鲜（比如招行开通ApplePay给99信用卡积分）&lt;br&gt;第四、使用ApplePay的最大一个前提是，你要有一台iPhone6以上的设备。可怜我的5S都无法使用，iPhone6会降价么？&lt;br&gt;人家支付宝推广的是自家的东西，那可是玩命的推广。ApplePay涉及到多方利益，苹果补贴多了，对自己并没有特别大的好处，而且高贵的苹果会来补贴？各大银行肯定也不会花大代价推广，毕竟ApplePay可以支持多家银行并不是自己独家支持，帮你宣传开了，消费者使用的是其他银行，那不是亏死？银联倒是可以加大推广力度，但是NFC推广了这么多年还是这么一个半死不活的样子，多一个ApplePay也不会产生更大的影响。&lt;/p&gt;
&lt;h3 id=&quot;便捷程度&quot;&gt;&lt;a href=&quot;#便捷程度&quot; class=&quot;headerlink&quot; title=&quot;便捷程度&quot;&gt;&lt;/a&gt;便捷程度&lt;/h3&gt;&lt;p&gt;ApplePay确实挺方便的，手机靠近终端，指纹认证一下就行了。但是并不会快捷多少，能用ApplePay的iPhone，用3DTouch快捷打开支付宝或者微信的扫一扫，扫了二维码在执行TouchID的认证，并不会慢上多少。&lt;/p&gt;
&lt;h3 id=&quot;学习成本&quot;&gt;&lt;a href=&quot;#学习成本&quot; class=&quot;headerlink&quot; title=&quot;学习成本&quot;&gt;&lt;/a&gt;学习成本&lt;/h3&gt;&lt;p&gt;学习成本在哪？支持ApplePay的终端需要学习怎么使用啊！营业员需要经过学习才能够正确的使用终端啊！支付宝就不需要了，打印一张自己的二维码放出来给人扫就行了，简单粗暴，就像我在文章最后放的那样，哈哈哈！&lt;/p&gt;
&lt;h2 id=&quot;八&quot;&gt;&lt;a href=&quot;#八&quot; class=&quot;headerlink&quot; title=&quot;八&quot;&gt;&lt;/a&gt;八&lt;/h2&gt;&lt;p&gt;或许在这中间，银联才是闷声发大财的机构。身为亲儿子的银联，即使阿里腾讯投入了几十亿的资金推广自己的支付。线下银联仍然是老大哥。在ApplePay入华的前一段时间，银联主导的闪付已经开始逐渐发力，这些年推广的NFC虽然是半死不活，但是好歹数量越来越多了，慢慢有了厚积薄发的态势。ApplePay必然会和之前的AppleMusic一样灿烂一会儿，但是ApplePay&lt;strong&gt;可能&lt;/strong&gt;会引导这么一波潮流：MiPay，锤子Pay，华为Pay，SamSung Pay已经有了，高端有ApplePay、Samsung Pay、华为Pay、中低端有MiPay等小弟。那么在这些Pay小弟的推动下，银联老大哥又会焕发第二春么？&lt;/p&gt;
&lt;h2 id=&quot;九&quot;&gt;&lt;a href=&quot;#九&quot; class=&quot;headerlink&quot; title=&quot;九&quot;&gt;&lt;/a&gt;九&lt;/h2&gt;&lt;p&gt;好吧，这是我的支付宝，你要是愿意就把新年的开工利是分那么点给我咯！&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/1228386-2620368f276afd2d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;我的支付宝&quot;&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;一&quot;&gt;&lt;a href=&quot;#一&quot; class=&quot;headerlink&quot; title=&quot;一&quot;&gt;&lt;/a&gt;一&lt;/h2&gt;&lt;p&gt;今天，苹果公司带着看似狂拽酷炫吊炸天的ApplePay进入大中华。看着支持的银行列表中有招行。带着脑残粉的心态打开了wallet。咦竟然看不到ApplePay，这不科学啊。随后掌上生活推送消息，告知了使用ApplePay的正确姿势。打开一看。。。。好吧我还是放弃尝鲜了，原来小招和ApplePay一起歧视我的5S了。&lt;br&gt;
    
    </summary>
    
      <category term="MyTalk" scheme="http://www.wengyb.com/categories/MyTalk/"/>
    
    
      <category term="个人杂谈" scheme="http://www.wengyb.com/tags/%E4%B8%AA%E4%BA%BA%E6%9D%82%E8%B0%88/"/>
    
  </entry>
  
  <entry>
    <title>微信收费</title>
    <link href="http://www.wengyb.com/2016/02/16/%E5%BE%AE%E4%BF%A1%E6%94%B6%E8%B4%B9/"/>
    <id>http://www.wengyb.com/2016/02/16/微信收费/</id>
    <published>2016-02-16T06:54:47.000Z</published>
    <updated>2016-03-31T06:56:23.000Z</updated>
    
    <content type="html">&lt;p&gt;今天早上有一条新闻刷爆了朋友圈，微信提现收费了。公告的内容是这样的：&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;2月16日，微信支付团队发布公告，3月1日起，个人用户的微信零钱提现功能（从零钱到银行卡）开始对超额部分收取手续费，转账恢复免费。根据新的政策，从3月1日起计算，每位用户（身份证维度）有累计1000元免费提现额度，超出1000元部分按银行费率收取手续费，费率均为0.1%，每笔最少收0.1元。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;其实里面有许多可以挖掘的信息。&lt;/p&gt;
&lt;h3 id=&quot;额度1000&quot;&gt;&lt;a href=&quot;#额度1000&quot; class=&quot;headerlink&quot; title=&quot;额度1000&quot;&gt;&lt;/a&gt;额度1000&lt;/h3&gt;&lt;p&gt;对于这个额度1000，其实认真看可以发现，是每位微信用户一辈子的额度，免费的提现额度是1000。对！&lt;strong&gt;一辈子！&lt;/strong&gt;。&lt;br&gt;微信对于用户的区分是用身份证来区分的，那么也就是基本上你没有可以取巧的方式了。&lt;/p&gt;
&lt;h3 id=&quot;费率0-1&quot;&gt;&lt;a href=&quot;#费率0-1&quot; class=&quot;headerlink&quot; title=&quot;费率0.1%&quot;&gt;&lt;/a&gt;费率0.1%&lt;/h3&gt;&lt;p&gt;超出部分按银行费率收取，均为0.1%，这个数据其实是可商榷的。毕竟，不是所有银行都是这么个费率。&lt;/p&gt;
&lt;h3 id=&quot;官方回应&quot;&gt;&lt;a href=&quot;#官方回应&quot; class=&quot;headerlink&quot; title=&quot;官方回应&quot;&gt;&lt;/a&gt;官方回应&lt;/h3&gt;&lt;p&gt;微信官方是这么回复的：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;手续费并非微信收取，而是缴纳给了银行，微信称，“一直以来，基于微信支付的每一笔转账和提现交易，不论金额大小都要向银行缴纳手续费交易。对提现交易收费并不是微信支付追求营收之举，而是用于支付银行手续费。”同时，微信支付团队称正在积极与银行方面密切沟通，争取早日实现转账、提现交易完全免费。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;从官方的回复我们可以挖掘出这些信息：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;微信收费并不是为了赚钱，而是让用户自己付自己应该付给银行的钱，微信只是代收。&lt;/li&gt;
&lt;li&gt;微信被银行收费是按笔来收的&lt;/li&gt;
&lt;li&gt;微信正在和银行沟通，希望银行能够免了这笔手续费&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;纠结的微信&quot;&gt;&lt;a href=&quot;#纠结的微信&quot; class=&quot;headerlink&quot; title=&quot;纠结的微信&quot;&gt;&lt;/a&gt;纠结的微信&lt;/h3&gt;&lt;p&gt;微信所说的成本大致是这么些东西。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;成本产生来源于两方面：1.银行在第三方支付每次调用快捷支付接口时都会按金额收取手续费，2.部分银行在提现时会再次收取费用，在此次调整中，微信支付选择承担了所有转账的成本，而在提现时收取手续费成本。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;这么看来，其实微信收费并不太合理。涉及到银行的收费，只有调用银行快捷支付接口的时候，银行才会收取费用。&lt;br&gt;我们可以想象一下这样的场景，A打麻将输了100元给B。通过微信支付付款。A需要转账给B100元，A的零钱包没有钱，通过快捷支付从银行卡里转了100给B，最后B从微信钱包中提现到自己的银行卡中。资金流向就是从A的银行卡的活期户流到B的微信钱包，再从B的微信钱包提现到银行卡。&lt;br&gt;场景中的手续费发生是这样的：&lt;br&gt;1、A微信支付给B的过程，钱是先从A的银行卡到A的微信钱包，再从A的微信钱包转给B。这里银行收了手续费，因为A从银行充值到钱包的过程中调用了银行的接口，微信帮A垫付了这笔手续费。&lt;br&gt;2、B从微信钱包中提现到自己的银行卡，微信向B收了0.1%的手续费。&lt;br&gt;那么整个过程中，从理论上来看，微信应该向A收取手续费。但是向A收取手续费，虽然道理上说得通，但是用户体验会很差。&lt;/p&gt;
&lt;p&gt;微信纠结的地方不仅仅如此。这种场景公关处理一下，我相信大家也基本上能够理解。还有一个更厉害的地方。那里才是高成本的聚集地。&lt;/p&gt;
&lt;p&gt;我们再来看一个场景，ABC三个人斗地主，1毛钱一盘，A输了100盘，于是A向BC的钱包转100次1毛钱。由于A的钱包没有余额，于是100笔全部走银行的快捷支付。这100笔快捷支付，微信都得付钱给银行。&lt;/p&gt;
&lt;p&gt;类似场景中的零碎钱的支出，才是微信产生巨大成本的地方。这么看起来，微信确实帮我们承担了巨大的成本。&lt;/p&gt;
&lt;h3 id=&quot;值得商榷的成本&quot;&gt;&lt;a href=&quot;#值得商榷的成本&quot; class=&quot;headerlink&quot; title=&quot;值得商榷的成本&quot;&gt;&lt;/a&gt;值得商榷的成本&lt;/h3&gt;&lt;p&gt;不过巨大成本也是值得商榷的。零钱包有着巨大的余额，至少我是不相信腾讯不会利用这笔资金做些什么。虽然我没有什么理财经验，但是手上握着几十个E的资金，我也会去找银行做协定存款。这笔利息，是用户给微信带来的。也没见微信给个说法。&lt;/p&gt;
&lt;h3 id=&quot;用户资金导向？&quot;&gt;&lt;a href=&quot;#用户资金导向？&quot; class=&quot;headerlink&quot; title=&quot;用户资金导向？&quot;&gt;&lt;/a&gt;用户资金导向？&lt;/h3&gt;&lt;p&gt;这些年阿里有一件事一直没干成，那就是社交。同理、腾讯的金融一直做的很烂。好不容易微信支付在竞争中占了上风，但是对腾讯的金融梦一直没什么帮助。零钱包中的零钱总数巨大，但是似乎用来买理财产品的人并不多，起码从我个人来看，我更愿意去隔壁阿里买，他们做了这么多年，靠谱。&lt;br&gt;据说前阵子微信推出了零钱理财，很明显和支付宝余额、余额宝是一个道理。你的支付宝余额放在余额中没有收益，转到余额宝每天就能产生利息，恐怕现在没人的支付宝余额有钱吧。&lt;strong&gt;有理由相信，微信未来也会推出一个功能，零钱自动理财，点一下零钱自动转到零钱理财账户的余额中。&lt;/strong&gt;&lt;br&gt;既然提现收费了，那就买点理财产品吧，买我腾讯的产品免费，但是你要提现去买阿里的东西？不好意思，我要收点买路钱。&lt;/p&gt;
&lt;h3 id=&quot;一些遗漏&quot;&gt;&lt;a href=&quot;#一些遗漏&quot; class=&quot;headerlink&quot; title=&quot;一些遗漏&quot;&gt;&lt;/a&gt;一些遗漏&lt;/h3&gt;&lt;p&gt;还有这么些东西没说到，比如：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;2.部分银行在提现时会再次收取费用&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;既然是官方公告，那么应该不是空穴来风，但是这个&lt;strong&gt;“部分”&lt;/strong&gt;也是值得商榷的，从行为上来看。提现就是银行获得了存款，那么，哪有这么傻缺的银行你送他钱他还要收费？&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;微信正在和银行沟通，希望银行能够免了这笔手续费&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;这个文案厉害啊！银行免了手续费，微信就获得了好名声。银行不免，那也是银行的事，和我微信没什么关系。&lt;/p&gt;
&lt;h3 id=&quot;最后补一句&quot;&gt;&lt;a href=&quot;#最后补一句&quot; class=&quot;headerlink&quot; title=&quot;最后补一句&quot;&gt;&lt;/a&gt;最后补一句&lt;/h3&gt;&lt;p&gt;要是你们觉得微信收费很不爽，可以给我发红包，给我发红包不收费的。哈哈哈！！！&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;今天早上有一条新闻刷爆了朋友圈，微信提现收费了。公告的内容是这样的：&lt;br&gt;
    
    </summary>
    
      <category term="MyTalk" scheme="http://www.wengyb.com/categories/MyTalk/"/>
    
    
      <category term="个人杂谈" scheme="http://www.wengyb.com/tags/%E4%B8%AA%E4%BA%BA%E6%9D%82%E8%B0%88/"/>
    
  </entry>
  
  <entry>
    <title>2015年度总结</title>
    <link href="http://www.wengyb.com/2016/02/09/2015%E5%B9%B4%E5%BA%A6%E6%80%BB%E7%BB%93/"/>
    <id>http://www.wengyb.com/2016/02/09/2015年度总结/</id>
    <published>2016-02-09T06:38:54.000Z</published>
    <updated>2016-03-31T06:49:17.000Z</updated>
    
    <content type="html">&lt;p&gt;写在前面：本文属于作者个人总结，如有雷同，绝无可能。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h2&gt;&lt;p&gt;2015年是我工作以来变动最大的一年了，今年离开了工作了3年多的招行，又经历了微众银行3个月的时光。最终落位到华林证券。今年做了这么些事：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;读了一些书&lt;/li&gt;
&lt;li&gt;做了一些思想总结&lt;/li&gt;
&lt;li&gt;换了一些单位&lt;/li&gt;
&lt;li&gt;学了一门编程语言&lt;/li&gt;
&lt;li&gt;Linux了解了一些&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;读书，思想总结等内容，请移步&lt;a href=&quot;http://www.jianshu.com/p/3b0ee5d4b71c&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;《思想汇报（一）——有关读书》&lt;/a&gt;、&lt;a href=&quot;http://www.jianshu.com/p/a3d524118ffc&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;《思想汇报（二）——有关测试》&lt;/a&gt;、&lt;a href=&quot;http://www.jianshu.com/p/831087e3f846&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;《思想汇报（三）——有关互联网》&lt;/a&gt;。&lt;/p&gt;
&lt;h2 id=&quot;招行三年&quot;&gt;&lt;a href=&quot;#招行三年&quot; class=&quot;headerlink&quot; title=&quot;招行三年&quot;&gt;&lt;/a&gt;招行三年&lt;/h2&gt;&lt;p&gt;在招行混迹是毕业后的第一份工作，感觉真的是有那么些青涩，在大学学的是会计学专业，突然变成了一个软件测试人员，好像跨度有那么点大。不过其实做起来并没有感觉到很吃力。并不是我多牛多牛，而是做一个基础的手工测试，真的不怎么需要专业知识水平。&lt;br&gt;工作中遇到了好领导，真的要珍惜。我很幸运，真的遇到了，而且不止一个。&lt;br&gt;3G改造的时候，李玉姐让我独立负责VISA模块的测试。这真的让我觉得不可思议，那时我才刚刚度过自己的实习期，而且VISA相关的功能并没有完整的文档说明，也没有前辈指导，界面还是全英文的。我都不敢相信会让我一个人负责这样一个充满巨大挑战的任务。整个3G项目的领导层都顶着巨大的压力在推，做成了并不会有直接的收益，做砸了那将会是灭顶之灾。不论出于什么原因，我获得了李玉姐的信任，得到了这次锻炼成长的机会。&lt;br&gt;收单双活时期，承蒙盛哥的信任，带领一个8人团队参与双活项目的测试，期间还穿插了几个零碎的小项目。带团队测试和自己单干完全是两回事，考虑的事情比以前多了太多。不仅要协调外部的资源，对外的沟通，还要调解内部的矛盾，活跃内部的气氛，适当的收缩项目的压力，适当的释放项目的压力……&lt;br&gt;工作中遇到了好同事，真的要珍惜。我很幸运，真的遇到了，而且不止一个。&lt;br&gt;刚开始学习的时候有李玉姐的细心指导，后来又有盛哥、董欢、小强等大牛领路，再后来还有墨迹男、小红、花爷等帮忙排忧解难。&lt;br&gt;刚入职场能获得这么多，已是足够幸运。&lt;br&gt;离开收单后，有一次小夏和我说，在收单双活干活是工作以来最开心的日子。我瞬间就觉得，我这组长没白做啊！&lt;br&gt;我不止一次听到有人说，在招行干没前途啊，什么东西都学不到，完全就是打零工浪费时间，还不如早点辞职去学点有用的东西。&lt;strong&gt;学不到东西只是你不用心&lt;/strong&gt;。工作一段时间如果没收获，那真的只能怪自己了。起码我在招行学到了很多东西。一个人做项目，可以深入了解项目流程，可以了解项目的运作方式以及自己的角色定位。与他人协同做项目，能够学到协同办公的技巧、与不同人沟通的学问。带团队做项目，那学习的东西就更多了，如何协调资源、如何与开发PK、如何带新人、如何协调内部矛盾、如何激发组员的积极性、如何合理的分配工作、如何掌控进度……这些是需要一辈子时间去学习的知识。怎么能说什么都没学到？&lt;br&gt;LR、QTP等只能称之为工具、你要是想靠一个工具混一辈子，那还不如趁早回家考公务员，公务员是可以混一辈子的。包括某某语言、某某工具、某某框架，这些东西要学起来，最慢最慢自学3个月也都能搞定。衡量一个开发水平高不高，绝对不是看这个人会多少语言、而是看他用代码实现的功能是否完善、扩展性是否优秀、算法是否科学等因素。同理，工具的使用也是会过期的、以前自动化王者QTP，现在已经日薄西山，你很精通QTP？你靠这个吃饭？不好意思，现在已经没地方用这个了。LR现在还比较有市场，但是究其原理而言，并不是非常复杂、LR的优点是量大、可以弄出百万级的并发，可是有几家公司的产品需要承受这么高的并发？据我所知，某知名P2P平台（不提名，但是在行业内排名绝对靠前）的最高并发，不过3000。这个数字并不难实现，java、Python等语言的多进程带多线程就能实现这个量级的并发。&lt;br&gt;说了这么多其实就是想表达：在这个快速发展的社会，某一个工具的精通已经不再像以前那么重要了（不是不重要），学习的能力更为重要。社会的本质是人，学会那些看不见摸不着却存在且与人有关的技能能吃的更香。&lt;br&gt;离开收单之后，感觉事情做起来并不是那么顺心，到了UAT之后领导也并不信任我，总感觉做事放不开手脚。而且在招行混迹了三年，做久了都是例行公事，并没有很特别的亮点，给我的上升空间也很局限，So，是离开的时候了。&lt;/p&gt;
&lt;h2 id=&quot;微众一季&quot;&gt;&lt;a href=&quot;#微众一季&quot; class=&quot;headerlink&quot; title=&quot;微众一季&quot;&gt;&lt;/a&gt;微众一季&lt;/h2&gt;&lt;p&gt;离开招行之后，在微众晃了一个季度，在微众期间我参与了“火鸡”的账务测试以及核心系统的账务测试，在微众的日子可以用养生来形容了，工作上并没有很大的压力，事情做起来也很顺手。测试的都是账务系统，核对的是一些会计报表，看起来好像是和我的专业有关。可是在招行混了三年，会计的相关知识也基本上忘记的差不多了。与其说学习会计及知识，不如说了解了银行起步的一些过程。比如活期存款系统、定期存款系统、重要空白凭证入库出库等流程。&lt;br&gt;在微众领导也是信任我的，工作开展的也顺利，参与银行从无到有的发展过程可能一辈子都不会再遇到第二次了，可是我总感觉没有什么新鲜的地方，做的事甚至还不如招行。可能也是思想那段时间比较累，也厌烦了同样的工作。于是乎，在马上要转正的时候，我提了离职。&lt;/p&gt;
&lt;p&gt;##偶遇华林&lt;br&gt;能来华林真的是很偶然的事情，当时我还在思考离职的事情，并没有下定决心。当时是墨迹男在找工作，然后去招聘会的时候我顺路跟去的。一般来说招聘会的摊位人多，我和墨迹男都会绕开走，谈都懒得谈，就只有华林这里，我排了将近一小时的队，好像就有种我可能会上的感觉。果不其然，整个面试走下来，除了面试周期有点长，其他方面都很顺利。&lt;/p&gt;
&lt;h2 id=&quot;关于面试&quot;&gt;&lt;a href=&quot;#关于面试&quot; class=&quot;headerlink&quot; title=&quot;关于面试&quot;&gt;&lt;/a&gt;关于面试&lt;/h2&gt;&lt;p&gt;其实面试并没有想象中的那么可怕，很多时候面试官的水平还不如我。&lt;br&gt;一开始面试的时候总是会紧张，而且面试过后，特别容易被打击。包括身边的朋友，包括我自己都有这样的经历。比如去科技园某公司面试的时候，关于Linux的东西我都不懂，没学过，工作也没接触过，面试官就直接说，我面试过几百个人、你是第一个答不上来这个问题的人。我不知道读者能不能想象当时的场景，反正我当时是非常非常的尴尬。自信满满的去面试，被打击的体无完肤出来。所以今年做的事，就包含了解Linux。&lt;br&gt;后来面试多了，也就习惯了，&lt;strong&gt;面不上并不是你不行，而是你会的东西并不适合这个公司。&lt;/strong&gt;&lt;br&gt;再后来，面试面的不爽的时候，还可以去呛一下，比如某公司面试的时候，烦了面试官问这问那，不问重点，说我有问题就问，但是所有我想知道的他都给我打太极，推这推那，我就问了这么些问题：&lt;br&gt;1、我算了一下（计算过程忽略），你们公司获得的风投资金已经差不多快到了，那我过来万一公司发不出工资了怎么办？&lt;br&gt;2、我查了一下，你们公司CEO在美国涉嫌内幕交易被起诉了，对你们有什么影响？&lt;br&gt;乖乖，面试官脸都变成猪肝色了。&lt;br&gt;当然我并不建议大家这样做，毕竟找工作关系到生计。只是想告诉大家，面试失败不要气馁，总有一款适合你。面试官也是人，平常心对待就好了。&lt;/p&gt;
&lt;h2 id=&quot;关于管理&quot;&gt;&lt;a href=&quot;#关于管理&quot; class=&quot;headerlink&quot; title=&quot;关于管理&quot;&gt;&lt;/a&gt;关于管理&lt;/h2&gt;&lt;p&gt;再怎么说，在招行也是带过团队的，再再怎么说，当年考研管理学成绩也是出类拔萃的。&lt;br&gt;管理学涉及的智慧太多了，只能简单的总结一下自己的感觉。&lt;br&gt;不同等级的管理者应该管理的内容是不同的，基层的管理者，我感觉应该是要带着平常心，而不是以一种居高临下的姿态。在团队刚刚组建的时候，别人过来找我都喜欢问我，这里都是你的小弟吗？我都会义正言辞的反驳他，这些都是我的战友。能当组长，很多时候是因为在公司呆的久，业务比较熟悉，因此你才当上组长。同理，大家会听你的，也是因为信任你，相信一个组长不会坑队友。&lt;br&gt;待人以诚也是非常重要的，其实这点当时我当组长的时候并没有认真的考虑这点，当时我的想法很简单，各个功能的业务我把他们都教会了，我就可以学(wan)自己想学(wan)的东西了。所以双活初期累成狗，但是到了中后期，基本上上班除了开会就是玩手机，每周统计一下进度就行了。&lt;br&gt;最后的一点就是需要处理好工作环境，其实带团队，不会参与执行具体的事项，这个时候组长需要把各种杂事处理好，尽最大可能给组员一个纯粹的工作环境，组员只考虑做事，其他杂事不用分心处理。极大可能的杜绝组员碎片式工作。这样分工明确，团队的效率才能最大化。&lt;/p&gt;
&lt;h2 id=&quot;最后&quot;&gt;&lt;a href=&quot;#最后&quot; class=&quot;headerlink&quot; title=&quot;最后&quot;&gt;&lt;/a&gt;最后&lt;/h2&gt;&lt;p&gt;理论上在总结的最后应该给自己立一个Flag。不过鉴于以往立的Flag从来都没有兑现过。今年就不立了吧，一边走一边寻找终点。&lt;/p&gt;
&lt;p&gt;##失去的年味&lt;br&gt;文章写到这里应该结束了，不过大年初二才写出来这东西，就再加一点自己过年时看到的其他现象，比如：红包。&lt;br&gt;今年过年，又多了一个叫红包的东西，其实严格来说，应该是去年就出来的事情，去年过年的时候微信红包就风靡了全国。但是今年红包已经有点过分了，包括支付宝、微信、微博、QQ在内的所有社交渠道，对！是所有社交渠道都在派发红包。今年过年，全家都在看手机除了最老的不会玩手机没有抢红包，其他所有人都在对着手机看，应该有的年味荡然无存。从这个结果来看，各大公司赢了，他们成功的吸引了所有人的目光。&lt;br&gt;在微信力量的公开课上，张小龙先生阐述了一个他对于微信这款产品的看法：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;好的产品应该是用完即走的&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;第三个，我想跟大家分享微信的一个基本价值观，我们认为一个好的产品是一个用完即走的，就是用完了我就走了，&lt;/strong&gt;可能大家不是第一次听到这个词。一个好的产品不是黏住用户，而是尽量让这个用户离开你的产品，大家同意吗？说同意的都是没有认真思考的，因为我相信每个人做的工作都是围绕一点，怎么样黏住用户，怎么样让用户尽可能待在我的产品里头，不要离开产品。&lt;/p&gt;
&lt;p&gt;我们认为任何产品都只是一个工具，对工具来说，好的工具就是应该最高效率的完成用户的目的，然后尽快的离开。如果一个用户要沉浸在里面，离不开，就像你买一辆汽车，你开完了，你到了目的地，你说汽车里面的空调特别好，所以要待在里面，那不是它应该做的事情。所以业界很羡慕微信是用户的时间杀手，&lt;strong&gt;但是我们要考虑的则是怎么样更高效率帮助用户完成任务，而不是让用户在微信里面永远都有处理不完的事情，&lt;/strong&gt;所以大家会看到微信的朋友圈会限制很严，各种营销在朋友圈里面我们都会很严格的对待。我们刚开始看朋友圈里面都是一些朋友的动态，可是慢慢发现朋友圈里面有很多心灵鸡汤，被各种各样地诱导上来发了一些内容，如果这样的信息多了其实最终的结果未必好，最终的结果可能是用户觉得朋友圈里面的信息太水了、太杂了，慢慢他再看朋友圈的意愿越来越低，这会变得非常可怕。因为朋友圈的进入次数特别多，平均一个用户每天大概有30、40次进入朋友圈，这是一个反复的过程，我们希望每次进来用户都不是很快的刷屏，而是看到的都是他愿意看到的内容。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;张小龙先生的初衷是很好的，但是现状并不是这样，包括微信、支付宝、微博在内的各大社交产品，都在不停的增强用户黏性。也许微信初衷不想这样，但是从结果来看，他们是粘着用户的。所以不知道张小龙先生回家过年，他的亲人坐在一起低头摇一摇的时候，他的心里是什么感想。&lt;br&gt;在滴滴快滴打车补贴的时候马云先生的母亲打不到车，马云先生是这么说的：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;市场竞争的原则是要让市场受惠、让用户受益。不怕烧钱，更不怕竞争，但最怕伤害用户的利益，特别是老人孩子的利益。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;换到现在，马云现在回家过年，全家人只顾低头咻一咻，抢敬业福。那么他会作何感想呢？&lt;br&gt;做社交，应该是拉近人与人之间的距离，让外出打工的人们能够了解到千里之外的亲朋好友的近况。这点是好的，但是在过年的时候，我们面对面坐着，却都在低头玩手机，抢红包。社交软件赚到了眼球，赚到了钱，却丢失了大企业应该承担的社会责任（也许是我认为的大企业应该承担的社会责任）。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;写在前面：本文属于作者个人总结，如有雷同，绝无可能。&lt;br&gt;
    
    </summary>
    
      <category term="MyTalk" scheme="http://www.wengyb.com/categories/MyTalk/"/>
    
    
      <category term="思想汇报" scheme="http://www.wengyb.com/tags/%E6%80%9D%E6%83%B3%E6%B1%87%E6%8A%A5/"/>
    
      <category term="个人杂谈" scheme="http://www.wengyb.com/tags/%E4%B8%AA%E4%BA%BA%E6%9D%82%E8%B0%88/"/>
    
  </entry>
  
  <entry>
    <title>思想汇报（三）——有关互联网</title>
    <link href="http://www.wengyb.com/2016/02/07/%E6%80%9D%E6%83%B3%E6%B1%87%E6%8A%A5%EF%BC%88%E4%B8%89%EF%BC%89%E2%80%94%E2%80%94%E6%9C%89%E5%85%B3%E4%BA%92%E8%81%94%E7%BD%91/"/>
    <id>http://www.wengyb.com/2016/02/07/思想汇报（三）——有关互联网/</id>
    <published>2016-02-07T06:49:50.000Z</published>
    <updated>2016-03-31T06:56:05.000Z</updated>
    
    <content type="html">&lt;p&gt;写在前面：本文观点纯粹就是个人扯淡，如有雷同，绝无可能&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;在机场候机，时间有点多，来装一个大的逼。&lt;br&gt;这个逼装的好像是有那么点大了，互联网就是有这么个好处，我这种混子也一样可以随意说这么高大上的东西。反正逼都装了，就随便扯扯。&lt;/p&gt;
&lt;h2 id=&quot;互联网&quot;&gt;&lt;a href=&quot;#互联网&quot; class=&quot;headerlink&quot; title=&quot;互联网&quot;&gt;&lt;/a&gt;互联网&lt;/h2&gt;&lt;p&gt;互联网这个东西在近几年发展迅速，迅速的有点让人可怕。网速的提高，移动端的普及，都让互联网有了质的变化，尤其是移动端的互联网，现在移动端的流量已经超过PC端。&lt;/p&gt;
&lt;h2 id=&quot;连接&quot;&gt;&lt;a href=&quot;#连接&quot; class=&quot;headerlink&quot; title=&quot;连接&quot;&gt;&lt;/a&gt;连接&lt;/h2&gt;&lt;p&gt;互联网最大的特点就是连接了，公司年终总结的时候发言我就是用这个命题，不过很可惜，好久没有在这么多人面前发言了，之前其实我想过另外一个命题，准备也还相对充足，不过到发言前我突然想到这个命题，觉得这个更高端一点，临时改了这个。总而言之，并没有达到预期的水准。&lt;br&gt;连接这个特点真的是太伟大了，有了互联网，真的是能把资源做到接近100%的优化配置，这点在大城市尤其明显，大城市工作分工明细，细到可怕。连接就非常重要，怎样高效的实现分工后的重组，严重的关系到产品的质量。&lt;/p&gt;
&lt;h2 id=&quot;逃离北上广深？&quot;&gt;&lt;a href=&quot;#逃离北上广深？&quot; class=&quot;headerlink&quot; title=&quot;逃离北上广深？&quot;&gt;&lt;/a&gt;逃离北上广深？&lt;/h2&gt;&lt;p&gt;互联网连接的功能在大城市发挥的淋漓尽致，在这里，资源达到最大的优化配置。资源优化配置后的好处显而易见，为什么大家都喜欢到大城市打工？每年都有媒体文章喜欢说逃离北上广深，但是北上广深也不见得人口有减少的趋势。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;资源多&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;你不得不说大城市的资源真的是多，几大城市占有全国过半的资源，在这里你能找到的工作多，能接触的供应商经销商也多，更容易积蓄财富。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;条件好&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;为什么说条件好，在大城市的人享受着不一样的生活。每天你的周围有上百个各色菜系的厨师随时为你待命，你想吃什么，拿出手机一按，马上就有外卖小哥给你送上门。每天你周围有上百个司机随时为你待命，你想去哪里，拿出手机一按，马上就有专车到你楼下等你。搞卫生、洗衣服等等，衣食住行有关的东西，你只要拿出手机或者打开电脑，都有全套的服务在等着你，在大城市生活，你的生活质量堪比古代的帝王。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;节约&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;你没看错，在大城市生活的开销并不是想象中那么高，除开房子，在大城市生活成本甚至低于大多数小城市。比如在深圳，华强北可以买到任何廉价的电子产品，手机购物有各种补贴，尤其在补贴大战的时候，你能想象你下班打车回家，司机还倒贴钱给你的场景吗？去沃尔玛买东西，满200减50，你在老家能看到这种场景吗？然而大城市的工资比老家高的多。&lt;/p&gt;
&lt;h2 id=&quot;二次发展&quot;&gt;&lt;a href=&quot;#二次发展&quot; class=&quot;headerlink&quot; title=&quot;二次发展&quot;&gt;&lt;/a&gt;二次发展&lt;/h2&gt;&lt;p&gt;互联网发达后带来的机遇不可估量。依赖互联网这个平台起来的案例不胜枚举。小米、乐视等耳熟能详的品牌，都是在这一波中发展起来的。央视许多名嘴从央视出走，都开始了自己事业的第二春，比如罗辑思维的罗振宇，单靠买书月流水就能过亿。在央视当主持人可达不到这收入，&lt;br&gt;依托互联网的发展，许多手工艺人也获得了不菲的收入，以前帮人修指甲需要在街上摆个摊，或者租个店面什么的，现在只要找一个平台，上门服务，其中佼佼者，月收入比我等坐办公室的屌丝高多了。&lt;/p&gt;
&lt;h2 id=&quot;2个2&quot;&gt;&lt;a href=&quot;#2个2&quot; class=&quot;headerlink&quot; title=&quot;2个2&quot;&gt;&lt;/a&gt;2个2&lt;/h2&gt;&lt;p&gt;互联网发展这么迅猛，带动了2个2的飞速发展，各大公司都想在这一波冲击充获得一席之地，小公司希望逆袭，大公司希望拓展。&lt;/p&gt;
&lt;h3 id=&quot;O2O&quot;&gt;&lt;a href=&quot;#O2O&quot; class=&quot;headerlink&quot; title=&quot;O2O&quot;&gt;&lt;/a&gt;O2O&lt;/h3&gt;&lt;p&gt;O2O指的是online to offline。就是一种线上线下的平台。其实O2O的规模在PC时代就已经非常大了，但是在移动互联网时代，又有了一场质的飞跃。早期的大众点评、58同城、美团等平台已经是耳熟能详的平台了，在移动端又爆发了打车，外卖，支付等大战。&lt;/p&gt;
&lt;h3 id=&quot;P2P&quot;&gt;&lt;a href=&quot;#P2P&quot; class=&quot;headerlink&quot; title=&quot;P2P&quot;&gt;&lt;/a&gt;P2P&lt;/h3&gt;&lt;p&gt;我们的生活和互联网连接了，我们的钱也不例外，互联网金融这个行为也应运而生。各大金融公司都在瞄准这块大肥肉，即使非金融机构，也纷纷跨界来捞一笔，互联网金融最突出的就是P2P了。&lt;br&gt;P2P就是一个借贷的平台，其实从古至今都有类似的东西，比如传统的民间借贷就可以理解为不成平台的P2P，只是借助互联网这个平台，达到了一个爆发点。这个爆发点导致了P2P的野蛮发展，P2P管理细则2015年底才出来，而在此之前，P2P公司就如雨后春笋般生长。&lt;/p&gt;
&lt;h3 id=&quot;2个2的前景&quot;&gt;&lt;a href=&quot;#2个2的前景&quot; class=&quot;headerlink&quot; title=&quot;2个2的前景&quot;&gt;&lt;/a&gt;2个2的前景&lt;/h3&gt;&lt;p&gt;O2O是非常有前景的东西，不过能把这个东西做大，也需要一定的实力，经过这么长时间的优胜劣汰，O2O平台已经从军阀混战的局面过度到N足鼎立的情况了，各个行业的O2O也基本上角逐出了有实力的平台。未来发展前景不错，但是新入的平台，基本上很难与现有的平台进行竞争。&lt;br&gt;关于P2P，最近遇到好多人问，你怎么看P2P，虽然现在P2P发展火爆，，但是我的答案依然是不好看。从历史的角度看，P2P有点像以前的团购，那还是上大学的时候，搜索团购，能找到几千家团购网站，各种名字奇葩的团购网站充斥着互联网，过度快速发展产生的后果就是整体质量下降，导致行业整体混乱，从现在来看团购，活着的能盈利的就只有这么几家：美团、糯米、大众点评、聚划算。也许还有其他的团购，但是那都不重要，因为他们的份额已经低的可怜了。糯米背后是百度，大众点评背后是腾讯，聚划算背后是阿里，美团算是从几千家团购中脱引而出，成为行业中的佼佼者。再反过来看P2P，和几年前的团购是不是很像？15年E租宝的事情爆发以后，陆续又爆出了P2P公司倒闭的新闻，凡是涉及到钱的问题，一定都是高危高风险的问题。不出两年，整个P2P行业也会从军阀混战变成N足鼎立的格局。&lt;br&gt;著名的投资机构红杉资本在15年底就已经明确表态了，15年下半年起，他们没有投过任何一家O2O企业，P2P更是碰都没碰。这已经能够说明问题了。&lt;br&gt;再看看我们强大的AT（自从我在百度搜索证券从业考试，它展示给我的全部都是广告之后，在我心里百度已经不算巨头了）。几乎都不涉及P2P行业，阿里做贷款，腾讯做贷款，都是利用大数据进行精准分析贷款。&lt;br&gt;截止2015年5月，P2P平台已经有2K家了，但是有问题的就有奖金700家，而且这只是上半年的事，下半年号称互联网寒冬，出问题的只会越来越多。&lt;/p&gt;
&lt;h2 id=&quot;资本寒冬？&quot;&gt;&lt;a href=&quot;#资本寒冬？&quot; class=&quot;headerlink&quot; title=&quot;资本寒冬？&quot;&gt;&lt;/a&gt;资本寒冬？&lt;/h2&gt;&lt;p&gt;2015年下半年，各大媒体都在诉说资本寒冬这个东西，其实不外乎就是投资人的钱没那么好拿了。资本真的寒冬吗？我看不见得。&lt;br&gt;14年曾经有朋友说，只要一份PPT和一副好口才，随便都能从投资人那里拿到千万级别的风投资金。虽然我不太相信，不过那时候确实很容易融资。&lt;br&gt;其实看钱好不好拿，可以从地推送的东西来看，移动互联网的浪潮刚刚开始的时候，满大街都是求扫二维码送饮料，在研祥上班的我，只要想喝饮料，带着手机下楼扫一圈，就能拿好多饮料回来喝，科兴也是这么个节奏。赠品从饮料变成了杯子，U盘，充电宝，等级越来越高。反正钱是风投的，我只负责把它花掉，换成注册用户就行了。这种情况现在已经没有了，起码你拿着手机下楼扫一圈已经不像以前一样那么多东西送了。&lt;br&gt;2015年下半年的资本紧缩在我看来并不是什么寒冬，而是回归理性的一种表现。互联网，从其本质上说，是一个&lt;strong&gt;基础设施&lt;/strong&gt;，它的发展依靠了各大风投的钱，因为互联网能够带来巨大的利润，加上小米等互联网企业成功的案例，导致了巨量的资金涌入，各种资金涌入之后，慢慢的完善了互联网的建设，包括基于互联网的各种产品的&lt;strong&gt;产品定位&lt;/strong&gt;、&lt;strong&gt;营销模式&lt;/strong&gt;等。现在互联网逐渐成熟，投资人慢慢的也看清了，互联网其实并没有想象中那么赚钱，那么自然而然，就不会乱投钱了。&lt;/p&gt;
&lt;h2 id=&quot;机会&quot;&gt;&lt;a href=&quot;#机会&quot; class=&quot;headerlink&quot; title=&quot;机会&quot;&gt;&lt;/a&gt;机会&lt;/h2&gt;&lt;p&gt;互联网中的机会遍地都是，一个好的模式，一个好的营销方式，都有可能成为逆袭的典范，在互联网这个浪潮中，最怕的是大公司，他们的稍不留神，就可能被逆袭，比如中兴。&lt;/p&gt;
&lt;h2 id=&quot;红包&quot;&gt;&lt;a href=&quot;#红包&quot; class=&quot;headerlink&quot; title=&quot;红包&quot;&gt;&lt;/a&gt;红包&lt;/h2&gt;&lt;p&gt;红包可以说是微信和支付宝的大战，从产品体验来说，起码我感觉支付宝是完败，但是谁有能说他真的不行呢？&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;写在前面：本文观点纯粹就是个人扯淡，如有雷同，绝无可能&lt;br&gt;
    
    </summary>
    
      <category term="MyTalk" scheme="http://www.wengyb.com/categories/MyTalk/"/>
    
    
      <category term="思想汇报" scheme="http://www.wengyb.com/tags/%E6%80%9D%E6%83%B3%E6%B1%87%E6%8A%A5/"/>
    
      <category term="个人杂谈" scheme="http://www.wengyb.com/tags/%E4%B8%AA%E4%BA%BA%E6%9D%82%E8%B0%88/"/>
    
  </entry>
  
  <entry>
    <title>思想汇报（二）——有关测试</title>
    <link href="http://www.wengyb.com/2016/02/04/%E6%80%9D%E6%83%B3%E6%B1%87%E6%8A%A5%EF%BC%88%E4%BA%8C%EF%BC%89%E2%80%94%E2%80%94%E6%9C%89%E5%85%B3%E6%B5%8B%E8%AF%95/"/>
    <id>http://www.wengyb.com/2016/02/04/思想汇报（二）——有关测试/</id>
    <published>2016-02-04T06:44:18.000Z</published>
    <updated>2016-03-31T06:50:42.000Z</updated>
    
    <content type="html">&lt;p&gt;写在最前面：本文毫无文艺气息，更多的是吐槽。&lt;br&gt;写在前面：文章内容纯属个人观点，如有雷同，绝无可能。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;关于我&quot;&gt;&lt;a href=&quot;#关于我&quot; class=&quot;headerlink&quot; title=&quot;关于我&quot;&gt;&lt;/a&gt;关于我&lt;/h2&gt;&lt;p&gt;12年开始从事软件测试测试行业（以下简称测试），至今四个年头，先后混迹过好多大项目和小项目。&lt;/p&gt;
&lt;h2 id=&quot;测试、测试&quot;&gt;&lt;a href=&quot;#测试、测试&quot; class=&quot;headerlink&quot; title=&quot;测试、测试&quot;&gt;&lt;/a&gt;测试、测试&lt;/h2&gt;&lt;h3 id=&quot;测试是什么？&quot;&gt;&lt;a href=&quot;#测试是什么？&quot; class=&quot;headerlink&quot; title=&quot;测试是什么？&quot;&gt;&lt;/a&gt;测试是什么？&lt;/h3&gt;&lt;p&gt;测试就是质检。软件测试，说白了就是软件的质检，并不是什么高大上的职业。相反，测试总是和开发联系在一起，自称屌丝的，大多就是这么一类人了。&lt;/p&gt;
&lt;h3 id=&quot;测试的分类&quot;&gt;&lt;a href=&quot;#测试的分类&quot; class=&quot;headerlink&quot; title=&quot;测试的分类&quot;&gt;&lt;/a&gt;测试的分类&lt;/h3&gt;&lt;p&gt;现今测试的种类大致分为功能测试、性能测试、自动化测试、和专项测试招聘要求上写的测试种类大概也就是这么个样子了。&lt;/p&gt;
&lt;h2 id=&quot;测试行业&quot;&gt;&lt;a href=&quot;#测试行业&quot; class=&quot;headerlink&quot; title=&quot;测试行业&quot;&gt;&lt;/a&gt;测试行业&lt;/h2&gt;&lt;p&gt;怎么说呢，测试作为软件开发行业发展到一定阶段的衍生职业，目前来看正在逐步得到重视。但是，仍然不够，至少目前来看，还不够。&lt;/p&gt;
&lt;h3 id=&quot;测试的价值&quot;&gt;&lt;a href=&quot;#测试的价值&quot; class=&quot;headerlink&quot; title=&quot;测试的价值&quot;&gt;&lt;/a&gt;测试的价值&lt;/h3&gt;&lt;p&gt;测试的价值无法评估，这是测试行业发展的最大限制原因。而与测试相对应的开发，则有很明确的价值估量。一定的时间内，开发能写出什么东西，能够看得到，用得到。比如前端开发能写出靓丽炫酷吊炸天的界面，后台开发能写出复杂优雅的后台，软件写出来就能投入使用变现了，但是测试呢？&lt;br&gt;不好意思，完全看不出来，你测得bug能卖多少钱？你写的测试案例能卖多少钱？你说你的测试计划多少完美，多少合理，能卖钱吗？&lt;br&gt;从古至今，我们的社会一直都是结果导向，历史都是成功者书写的。同理，一款产品成功了，别人会说这个产品经理牛，产品设计的好。或是这些开发厉害，写出了这么牛的东西，好像还没听说有人称赞，这个产品那么成功，是测试的功劳啊！但是，如果一个产品失败了，马上就会有人说，测试到底是怎么测的，这么简单的问题都没测出来，这么简单的逻辑都没想到。&lt;/p&gt;
&lt;h3 id=&quot;万能的测试？&quot;&gt;&lt;a href=&quot;#万能的测试？&quot; class=&quot;headerlink&quot; title=&quot;万能的测试？&quot;&gt;&lt;/a&gt;万能的测试？&lt;/h3&gt;&lt;p&gt;说真的，测试真不是万能的，不论哪一款产品，都一定会有bug。不是找借口，而是真心话。微信牛吧？支付宝牛吧？苹果牛吧？微软牛吧？他们都这么牛，也都一样有bug。我们只能尽力的去减少bug，而无法做到完全没有bug。&lt;/p&gt;
&lt;h2 id=&quot;测试流程&quot;&gt;&lt;a href=&quot;#测试流程&quot; class=&quot;headerlink&quot; title=&quot;测试流程&quot;&gt;&lt;/a&gt;测试流程&lt;/h2&gt;&lt;p&gt;流程这个东西，在我看来真的很重要，有一个完善的流程，做起事来绝对是事半功倍。前几年流行CMMI，现在流行敏捷。但是目前大多数公司的情况是：流程乱或者没流程。&lt;br&gt;没流程很正常，现在是万众创业的时代，创业的时候钱都没赚到，谈什么流程，先吃饱了再说。&lt;br&gt;流程乱，这说来就话长了，有时间再写一篇文章阐述背景吧，简单来说就是跟风引起的。比如现在流行敏捷了，什么公司都是敏捷，一面试就问，你会不会敏捷？相信我，问你这个问题的面试官，很可能他也不知道敏捷是什么。现在社会发展太快，慢一步就会被淘汰，所以什么都是快，能省的东西都省了，反正越快越好。这种错误的思想导致了乱七八糟的流程，更导致了研发团队大量的重复工作。&lt;br&gt;怎么理解CMMI和敏捷呢。举个例子，一首无损音乐的大小大概在30M左右，一首MP3格式的音乐大概在5M左右，无损压缩到有损音乐的过程，就是CMMI过度到敏捷的过程。无损压缩到有损是根据一定的规则来减小音乐文件的大小，有损的音乐也依然是一段完整的音乐。同理，敏捷流程快，但是五脏俱全，该有的过程还是有，非必须的东西砍掉，但是它还是一个完整的流程。&lt;/p&gt;
&lt;h2 id=&quot;测试的技能&quot;&gt;&lt;a href=&quot;#测试的技能&quot; class=&quot;headerlink&quot; title=&quot;测试的技能&quot;&gt;&lt;/a&gt;测试的技能&lt;/h2&gt;&lt;p&gt;好像扯了太多没用的东西了，下面来点干货。我认为测试人员需要具备的技能有这么些：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;缜密的测试思想&lt;/li&gt;
&lt;li&gt;较好的文档能力&lt;/li&gt;
&lt;li&gt;较好的沟通能力&lt;/li&gt;
&lt;li&gt;较好的总结能力&lt;/li&gt;
&lt;li&gt;较好的业务能力&lt;/li&gt;
&lt;li&gt;较好的理解能力&lt;/li&gt;
&lt;li&gt;碎片化工作的能力&lt;/li&gt;
&lt;li&gt;一定的代码能力&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;具备了上述的能力，基本上可以成为一个比较合格的测试人员。&lt;br&gt;没错，我列出来的除了一定的代码能力可以称之为硬技能，测试思想为专业技能，其他的能力都是软技能，为什么这么列？&lt;br&gt;假设你在一个大的研发团队，那么你不会和开发人员直接接触，更多的方式是以IM或者Email的方式沟通，那么你发现的问题怎么告诉开发？你不知道怎么把发现的问题整理成文档你怎么发出去？&lt;br&gt;假设你在一个小团队，那么就是one man one team，你一定会直接和研发流程的各个人员打交道，那么你的沟通能力就更为凸显重要。通过IM交流你还能有时间思考，面对面交流就完全看你的能力了。同一个问题在不同的时间通过不同的方式告诉一个人，产生的结果可能会完全相反。这里不做过多拓展，因为涉及到了很多人性的方面了。&lt;br&gt;当初在招行，好多人说在招行做测试完全是浪费时间，真的浪费时间吗？只是你没有用心吧。&lt;strong&gt;不用心，在什么地方都是浪费时间，用心了，处处是学习的东西。&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&quot;一定的代码能力&quot;&gt;&lt;a href=&quot;#一定的代码能力&quot; class=&quot;headerlink&quot; title=&quot;一定的代码能力&quot;&gt;&lt;/a&gt;一定的代码能力&lt;/h3&gt;&lt;p&gt;这点我想抽出来专门说一下，不要认为写代码都是开发的事，有一定的代码能力，绝对是测试的好帮手。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;你能够以开发的思维思考问题&lt;/li&gt;
&lt;li&gt;你能够写脚本处理一些重复的东西&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;能够以开发思维思考问题，你就更能理解他们，有些问题在外行看来很简单，但是真正从程序实现角度来看，是比较复杂的。同理，你知道开发的过程了，那么换一个角度来看问题，也许能够发现更多的bug。&lt;br&gt;人喜欢新的东西，而程序喜欢旧的东西，所以，一些重复的杂事就丢给程序做吧，省下来的时间去走廊呼吸一下新鲜空气也好。&lt;/p&gt;
&lt;h3 id=&quot;测试的硬技能&quot;&gt;&lt;a href=&quot;#测试的硬技能&quot; class=&quot;headerlink&quot; title=&quot;测试的硬技能&quot;&gt;&lt;/a&gt;测试的硬技能&lt;/h3&gt;&lt;p&gt;性能测试和自动化测试，用的东西我称之为硬技能，为什么这么叫，因为他们的适用范围很小，比如性能测试你用LR，那么你就只能做性能测试，自动化测试同理。&lt;br&gt;支付宝钱包的测试负责人陈晔列了一些移动测试工程师需要会的技能——&lt;a href=&quot;https://testerhome.com/topics/3858&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;《移动无限测试技能树》&lt;/a&gt;，高能、慎点。&lt;br&gt;反正比起这个技能树来说，我觉得还是学一门脚本语言来的实在，人生苦短、我用Python。简单粗暴，两三个月就能速成，作品在这：&lt;a href=&quot;http://www.ddhbblog.sinaapp.com&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;《点点寒彬的博客》&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;最后的吐槽&quot;&gt;&lt;a href=&quot;#最后的吐槽&quot; class=&quot;headerlink&quot; title=&quot;最后的吐槽&quot;&gt;&lt;/a&gt;最后的吐槽&lt;/h2&gt;&lt;p&gt;一开始我想研究一下自动化测试，这样能让我的测试档次显得不那么low，于是我去了解QTP。&lt;br&gt;了解后发现，QTP已经过时了，现在都是找开源框架自己二次开发，于是我放弃了QTP，找到了一个叫selenium的东西。&lt;br&gt;看了selenium后我发现，原来这东西需要会一门编程语言，于是我去看了Python。&lt;br&gt;selenium是web端的自动化测试，所以我在看Python的同时顺带看了一下web的框架Django，然后顺手写了一个&lt;a href=&quot;http://www.ddhbblog.sinaapp.com&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;博客&lt;/a&gt;。&lt;br&gt;在写&lt;a href=&quot;http://www.ddhbblog.sinaapp.com&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;博客&lt;/a&gt;的过程中，我需要了解一些基础的http的知识，于是我又顺带看了一点这一块的知识。&lt;br&gt;看完Python的基础语法之后，我发现要用selenium，我还要学会html的知识，于是我又去看了html。&lt;br&gt;看完html之后，我发现只会html是不行的，还要了解css，于是我又去看了css。&lt;br&gt;看完css之后，我发现现在的网页都是动态的，我还需要会js的知识，然后我又去看了js。&lt;br&gt;现在我都快忘了我应该要会什么了，我的专业是会计啊！坑爹啊！有没有公司需要不会记账不会报账不会看报表不会出报表不会装订凭证不会入库不会清算，但是会聊天会吹牛会耍宝会卖萌会逗逼会写代码的会计？&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;写在最前面：本文毫无文艺气息，更多的是吐槽。&lt;br&gt;写在前面：文章内容纯属个人观点，如有雷同，绝无可能。&lt;br&gt;
    
    </summary>
    
      <category term="MyTalk" scheme="http://www.wengyb.com/categories/MyTalk/"/>
    
    
      <category term="思想汇报" scheme="http://www.wengyb.com/tags/%E6%80%9D%E6%83%B3%E6%B1%87%E6%8A%A5/"/>
    
      <category term="个人杂谈" scheme="http://www.wengyb.com/tags/%E4%B8%AA%E4%BA%BA%E6%9D%82%E8%B0%88/"/>
    
  </entry>
  
  <entry>
    <title>思想汇报（一）——有关读书</title>
    <link href="http://www.wengyb.com/2016/01/31/%E6%80%9D%E6%83%B3%E6%B1%87%E6%8A%A5%EF%BC%88%E4%B8%80%EF%BC%89%E2%80%94%E2%80%94%E6%9C%89%E5%85%B3%E8%AF%BB%E4%B9%A6/"/>
    <id>http://www.wengyb.com/2016/01/31/思想汇报（一）——有关读书/</id>
    <published>2016-01-31T06:50:53.000Z</published>
    <updated>2016-03-31T06:56:03.000Z</updated>
    
    <content type="html">&lt;p&gt;很悲催很悲催，今天电脑莫名其妙的就坏了，好多数据都没办法恢复了，哀叹了一下，毕竟好多资料再也找不回来了，关键时候就算是牛逼的Time Machine也没办法拯救我的资料，只能随风而去吧。重装系统的同时，总算也有时间来写一下思想汇报了，据说成功人士都会定时写写自己的思想报告，咱也装一回成功人士吧。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;今年书单&quot;&gt;&lt;a href=&quot;#今年书单&quot; class=&quot;headerlink&quot; title=&quot;今年书单&quot;&gt;&lt;/a&gt;今年书单&lt;/h2&gt;&lt;p&gt;今年其实是动荡的一年，从招行到微众再到华林，我一直都觉得我今年都在飘，没有读什么书，不过今天稍微做了一下回顾，发现今年还是读了很多书的。书单如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;《时间的朋友》（电子版）&lt;/li&gt;
&lt;li&gt;《品三国》&lt;/li&gt;
&lt;li&gt;《诸王的游戏》（电子版）&lt;/li&gt;
&lt;li&gt;《雍正皇帝》（电子版）&lt;/li&gt;
&lt;li&gt;《帝国之殇-晚清三十年的金融战争》（电子版）&lt;/li&gt;
&lt;li&gt;《和珅贪婪笔记》&lt;/li&gt;
&lt;li&gt;《斩春》&lt;/li&gt;
&lt;li&gt;《易中天中华史—从春秋到战国》&lt;/li&gt;
&lt;li&gt;《帝国的惆怅》&lt;/li&gt;
&lt;li&gt;《软件测试》&lt;/li&gt;
&lt;li&gt;《大话移动测试》&lt;/li&gt;
&lt;li&gt;《探索吧-深入理解探索式软件测试》&lt;/li&gt;
&lt;li&gt;《Python学习手册第四版》（一半）&lt;/li&gt;
&lt;li&gt;《Python Web开发测试驱动方法》&lt;/li&gt;
&lt;li&gt;《鸟哥的Linux私房菜》（电子版）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;垃圾小说就不列了，秀一张我的书架&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/1228386-ff3dbca1b5bee463.JPG?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;我的书架&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;读书的态度&quot;&gt;&lt;a href=&quot;#读书的态度&quot; class=&quot;headerlink&quot; title=&quot;读书的态度&quot;&gt;&lt;/a&gt;读书的态度&lt;/h2&gt;&lt;p&gt;吃了读书少的亏，现在再来恶补，也算是亡羊补牢吧，也不是不读书，而是不爱读教科书。&lt;br&gt;我还是很赞同多读书的，从各个方面填充自己的知识，绝对能让自己的气质提升一大截。&lt;br&gt;今年接触了一些会读书的人，给我的感触还是很大的，读书是非常能够培养自己的气质的途径。&lt;br&gt;网上流传的所谓“读书无用论”，纯粹是扯淡，走上社会了就会发现，一个好学历可以给自己带来很好好的敲门砖。当然，我不太建议去看那些网络文学，基本都是浪费时间的垃圾。&lt;/p&gt;
&lt;h2 id=&quot;简单的书评&quot;&gt;&lt;a href=&quot;#简单的书评&quot; class=&quot;headerlink&quot; title=&quot;简单的书评&quot;&gt;&lt;/a&gt;简单的书评&lt;/h2&gt;&lt;p&gt;简单的做一下总结吧，毕竟读了这么些书，其实看起来更像是推荐阅读。&lt;/p&gt;
&lt;p&gt;###时间的朋友&lt;br&gt;这本书其实严格意义上来说不是书，是一份演讲稿，看视频的同学可以去优酷搜索“罗辑思维”，这个是他们跨年演讲的稿子，和视频上的内容略有一点点小出入。&lt;br&gt;这本书应该是我今年看的最细的一本书的，如果你在微信读书上也买了这本书，应该可以看到很多我的评论，虽然书中有很多观点引用的论证很扯，但是很大一部分的内容还是很有营养的，说的内容大多都是互联网相关的信息，以及对未来的一些理解。比较推荐去看，只不过微信读书卖的略贵，10大洋一本。&lt;/p&gt;
&lt;h3 id=&quot;品三国&quot;&gt;&lt;a href=&quot;#品三国&quot; class=&quot;headerlink&quot; title=&quot;品三国&quot;&gt;&lt;/a&gt;品三国&lt;/h3&gt;&lt;p&gt;《品三国》我在高中还是大学的时候就已经全部读完了，和大多数男生一样，三国也是我最喜欢的一段历史，易中天老师讲解的也算比较客观，不过书中是倾向曹魏为正统的，虽然正史也是以曹魏为正统的，但是让我这个蜀国粉读起来总是有那么些别扭。&lt;/p&gt;
&lt;h3 id=&quot;诸王的游戏&quot;&gt;&lt;a href=&quot;#诸王的游戏&quot; class=&quot;headerlink&quot; title=&quot;诸王的游戏&quot;&gt;&lt;/a&gt;诸王的游戏&lt;/h3&gt;&lt;p&gt;这本书写的真是不咋地。是我下载微信读书后读的一本书，书中的内容很像我以前读的《风起陇西》，都是以历史事件为引，在历史事件的框架下写了自己的东西，但是《诸王的游戏》写出来的内容并不精彩，几个王子的斗争写的很普通，相比起这本书，如果你对这种题材的小说感兴趣，我更推荐《风起陇西》&lt;/p&gt;
&lt;h3 id=&quot;雍正皇帝&quot;&gt;&lt;a href=&quot;#雍正皇帝&quot; class=&quot;headerlink&quot; title=&quot;雍正皇帝&quot;&gt;&lt;/a&gt;雍正皇帝&lt;/h3&gt;&lt;p&gt;没有错，就是电视上拍的雍正王朝的原书，二月河老师写的。了解我的人都知道，除了三国，我最喜欢的就是这段历史，这几年电视剧很喜欢播这段历史的故事，不过都喜欢播放后宫的宫斗，其实这段历史最精彩的部分是九龙夺嫡。这才是中国历史上绝无仅有精彩绝伦的政治斗争，斗争主角康熙的各皇子的年龄都在30~40左右的年龄段，正是每个人精力最旺盛，事业能力最强的时候，这样的斗争才是充满了暗流涌动，激情澎湃。&lt;br&gt;虽然这本书写的不是正史，比如书中的邬思道，是堪比诸葛亮的神级人物，其实在正史中只不过是一个幕僚而已，不过并不妨碍这本书的精彩，强烈推荐阅读前55章，前55章作者把整个斗争描写的精彩绝伦，绝对是一部很棒的小说。&lt;/p&gt;
&lt;h3 id=&quot;帝国之殇-晚清三十年的金融战争&quot;&gt;&lt;a href=&quot;#帝国之殇-晚清三十年的金融战争&quot; class=&quot;headerlink&quot; title=&quot;帝国之殇-晚清三十年的金融战争&quot;&gt;&lt;/a&gt;帝国之殇-晚清三十年的金融战争&lt;/h3&gt;&lt;p&gt;作者以小说的形式来描写了晚清三十年的金融战争，人物重点主要描写的还是李鸿章，在学历史的时候我们都觉得李鸿章是一个坏人，各种签订不平等条约，其实李鸿章、曾国藩等人确实是晚清时期清朝的栋梁之臣，书中涉及到的几个人物都是非常有影响力的，不过可惜了，小说中针对晚晴著名的红顶商人胡雪岩描述的东西太少。不过整个战争格局描写的不错，值得一看。&lt;/p&gt;
&lt;h3 id=&quot;和珅贪婪笔记&quot;&gt;&lt;a href=&quot;#和珅贪婪笔记&quot; class=&quot;headerlink&quot; title=&quot;和珅贪婪笔记&quot;&gt;&lt;/a&gt;和珅贪婪笔记&lt;/h3&gt;&lt;p&gt;和珅是中国最大的贪官，书中描写了和珅的一生，不过文笔比较一般，写的内容也比较low，不推荐看。&lt;/p&gt;
&lt;h3 id=&quot;斩春&quot;&gt;&lt;a href=&quot;#斩春&quot; class=&quot;headerlink&quot; title=&quot;斩春&quot;&gt;&lt;/a&gt;斩春&lt;/h3&gt;&lt;p&gt;好吧，这纯粹就是垃圾小说，在当当的尾品会处理的时候买的，果然便宜并没有好货&lt;/p&gt;
&lt;h3 id=&quot;易中天中华史—从春秋到战国&quot;&gt;&lt;a href=&quot;#易中天中华史—从春秋到战国&quot; class=&quot;headerlink&quot; title=&quot;易中天中华史—从春秋到战国&quot;&gt;&lt;/a&gt;易中天中华史—从春秋到战国&lt;/h3&gt;&lt;p&gt;易中天先生的中华史的开端，不过内容略显粗略，用来了解这一段历史显然还是不够的，不过如果对这段历史一无所知的朋友，不妨阅读阅读，毕竟中国的历史真的是非常的精彩。&lt;/p&gt;
&lt;h3 id=&quot;帝国的惆怅&quot;&gt;&lt;a href=&quot;#帝国的惆怅&quot; class=&quot;headerlink&quot; title=&quot;帝国的惆怅&quot;&gt;&lt;/a&gt;帝国的惆怅&lt;/h3&gt;&lt;p&gt;这本书应该是比较老的了，我在高中的时候就买了，不过当时知识有限，能够理解的内涵比较少，一本好书就是这样，不同的时间，带着不同的阅历去读，都能有不同的收获。易中天先生的分析确实是有非常多的可取之处，值得我们学习，这本书把一些特殊的人物或者历史事件作为一个入口，深入分析了中国两千年的帝制文化，强烈推荐阅读。&lt;/p&gt;
&lt;h3 id=&quot;软件测试&quot;&gt;&lt;a href=&quot;#软件测试&quot; class=&quot;headerlink&quot; title=&quot;软件测试&quot;&gt;&lt;/a&gt;软件测试&lt;/h3&gt;&lt;p&gt;这本书是我从招行离职的那段时间阅读的，可以说是为了面试读的，如果你是软件测试的从业人员，但是没有了解过相关理论知识的话，可以看一看，你会发现很多工作中我们使用的分析的方法是有那么一个理论来解释和分析的。面试的时候可以拿来吹水。&lt;/p&gt;
&lt;h3 id=&quot;大话移动测试&quot;&gt;&lt;a href=&quot;#大话移动测试&quot; class=&quot;headerlink&quot; title=&quot;大话移动测试&quot;&gt;&lt;/a&gt;大话移动测试&lt;/h3&gt;&lt;p&gt;这本书是我从为重离职的那段时间阅读的，也是为了下一份工作读的。这本书的作者是TesterHome创始人之一、阿里钱包的测试总监、号称测试行业唯一说真话的Monkey陈晔写的，看起来很响亮，不过从我的角度来看，也就是一个移动测试理论知识和工具名称的科普。书中说的东西看起来高大上，实际上并没有什么卵用，和《软件测试》不一样的是，如果你没有接触过移动测试，可以读一读来了解移动测试，如果你了解移动测试，这本书并不值得阅读，还不如去看看移动测试的具体实施方式来的划算。&lt;/p&gt;
&lt;h3 id=&quot;探索吧-深入理解探索式软件测试&quot;&gt;&lt;a href=&quot;#探索吧-深入理解探索式软件测试&quot; class=&quot;headerlink&quot; title=&quot;探索吧-深入理解探索式软件测试&quot;&gt;&lt;/a&gt;探索吧-深入理解探索式软件测试&lt;/h3&gt;&lt;p&gt;这本书是TesterHome论坛推荐阅读测试人员必读的书单中的一本书。虽然是读完了，不过说实话，我并不是非常推荐去看，理论太多，不够实战，而且书中的很多理论也就那样，很多时候我们都知道，只是没有去整理一个理论而已。&lt;/p&gt;
&lt;h3 id=&quot;Python学习手册第四版&quot;&gt;&lt;a href=&quot;#Python学习手册第四版&quot; class=&quot;headerlink&quot; title=&quot;Python学习手册第四版&quot;&gt;&lt;/a&gt;Python学习手册第四版&lt;/h3&gt;&lt;p&gt;这本书我在上面也写了，我只看了一半，而且也是硬着头皮去看完这一半的。并不是说书不好，说句心里话，书很好，只是写的太细了，读起来非常枯燥无味，要是码代码的时候没有涉及到这块，真的看不下去，只能说，这样的书我只能把它当成字典来看。&lt;/p&gt;
&lt;h3 id=&quot;Python-Web开发测试驱动方法&quot;&gt;&lt;a href=&quot;#Python-Web开发测试驱动方法&quot; class=&quot;headerlink&quot; title=&quot;Python Web开发测试驱动方法&quot;&gt;&lt;/a&gt;Python Web开发测试驱动方法&lt;/h3&gt;&lt;p&gt;今年出来的新书，我给好评，书中涉及到很多实用的东西，比如Python语法、Django web框架、包括selenium的简单使用、单元测试、自动化测试等知识。大概了解完Python的基础知识后，如果想往web方向发展，我比较推荐看这本书，而且建议多次阅读，第一遍照着书中的代码一个一个的敲，第二遍按照自己的理解来写。第三遍就可以一点一点的分析了。&lt;/p&gt;
&lt;h3 id=&quot;鸟哥的Linux私房菜&quot;&gt;&lt;a href=&quot;#鸟哥的Linux私房菜&quot; class=&quot;headerlink&quot; title=&quot;鸟哥的Linux私房菜&quot;&gt;&lt;/a&gt;鸟哥的Linux私房菜&lt;/h3&gt;&lt;p&gt;这本书是业界公认的Linux好书，我也承认。这本书我只是很粗糙的读完了，不过和之前的《Python学习手册》一样，太细了，比较适合当字典来查。&lt;/p&gt;
&lt;h2 id=&quot;2016书单&quot;&gt;&lt;a href=&quot;#2016书单&quot; class=&quot;headerlink&quot; title=&quot;2016书单&quot;&gt;&lt;/a&gt;2016书单&lt;/h2&gt;&lt;p&gt;2016年也不能放弃读书啊！书架上还有好些书我都没有读，希望今年能够把书架上的书扫一遍，再看看读一些其他的，有营养的书。一步一步丰富自己的知识。年初给自己立一个Flag，今年的心愿书单如下&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;《最有本事的皇帝》（一、二、三）&lt;/li&gt;
&lt;li&gt;《冰屋》&lt;/li&gt;
&lt;li&gt;《雅尔塔—决定世界格局和历史进程的八天》&lt;/li&gt;
&lt;li&gt;《民主的奇迹—美国宪法制定的127天》&lt;/li&gt;
&lt;li&gt;《第三帝国的兴亡》&lt;/li&gt;
&lt;li&gt;《Google软件测试之道》&lt;/li&gt;
&lt;li&gt;《高级软件测试》&lt;/li&gt;
&lt;li&gt;《Python Cookbook》&lt;/li&gt;
&lt;li&gt;《图解HTTP》&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;很悲催很悲催，今天电脑莫名其妙的就坏了，好多数据都没办法恢复了，哀叹了一下，毕竟好多资料再也找不回来了，关键时候就算是牛逼的Time Machine也没办法拯救我的资料，只能随风而去吧。重装系统的同时，总算也有时间来写一下思想汇报了，据说成功人士都会定时写写自己的思想报告，咱也装一回成功人士吧。&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
</feed>
