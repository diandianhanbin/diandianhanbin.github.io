<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>点点寒彬</title>
  <subtitle>www.wengyb.com</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.wengyb.com/"/>
  <updated>2016-05-11T15:48:50.000Z</updated>
  <id>http://www.wengyb.com/</id>
  
  <author>
    <name>点点寒彬 | SvenWeng</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Django开发博客（十）—添加分页</title>
    <link href="http://www.wengyb.com/2016/05/11/Django%E5%BC%80%E5%8F%91%E5%8D%9A%E5%AE%A2%EF%BC%88%E5%8D%81%EF%BC%89%E2%80%94%E6%B7%BB%E5%8A%A0%E5%88%86%E9%A1%B5/"/>
    <id>http://www.wengyb.com/2016/05/11/Django开发博客（十）—添加分页/</id>
    <published>2016-05-11T15:47:57.000Z</published>
    <updated>2016-05-11T15:48:50.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h2&gt;&lt;p&gt;我的博客上线也有一段时间了，非常稳定的运行了那么久，我也写了挺多文章。&lt;/p&gt;
&lt;p&gt;那么问题来了，文章多了，我们并没有做分页，随着文章越来越多，整个页面看起来就不是那么舒服了，所以现在我需要给我的博客做一个分页。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;版本相关 &lt;/p&gt;
&lt;p&gt;操作系统：Mac OS X EI Caption &lt;/p&gt;
&lt;p&gt;Python版本：2.7 &lt;/p&gt;
&lt;p&gt;IDE：PyCharm&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&quot;分页的原理&quot;&gt;&lt;a href=&quot;#分页的原理&quot; class=&quot;headerlink&quot; title=&quot;分页的原理&quot;&gt;&lt;/a&gt;分页的原理&lt;/h2&gt;&lt;p&gt;Django是一个非常全面的Web框架，也预置了分页的功能，&lt;a href=&quot;http://python.usyiyi.cn/django/topics/pagination.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;《Django中文文档-分页》&lt;/a&gt;比较详细的介绍了Django的分页功能。&lt;/p&gt;
&lt;p&gt;然而，我并不想按照Django给的分页功能来做。学习一个东西最好学习它的本质。&lt;/p&gt;
&lt;p&gt;分页的原理其实很简单，就是&lt;strong&gt;根据你传入的参数从数据库获取一部分的数据来展示&lt;/strong&gt;。比如按照5篇文章来分页，每次就从数据库取5条数据，然后返回给前端展示即可。&lt;/p&gt;
&lt;h2 id=&quot;url的修改&quot;&gt;&lt;a href=&quot;#url的修改&quot; class=&quot;headerlink&quot; title=&quot;url的修改&quot;&gt;&lt;/a&gt;url的修改&lt;/h2&gt;&lt;p&gt;我们要对原有的url进行一个简单的修改。修改后的url是这样的：&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;url(&lt;span class=&quot;string&quot;&gt;r&#39;^list/(?P&amp;lt;list_type&amp;gt;\S+)/(?P&amp;lt;page&amp;gt;[0-9]+)/$&#39;&lt;/span&gt;, views.article_list, name=&lt;span class=&quot;string&quot;&gt;&#39;article_list&#39;&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;比起原来的url，这里多传了一个参数page。这个page就是用来标记我们的页码，比如第一页数据，这个page就填1，然后后台接受这个page后从数据库去第一条至第五条数据返回给前端。第二页就传2，以此类推。&lt;/p&gt;
&lt;h2 id=&quot;views的修改&quot;&gt;&lt;a href=&quot;#views的修改&quot; class=&quot;headerlink&quot; title=&quot;views的修改&quot;&gt;&lt;/a&gt;views的修改&lt;/h2&gt;&lt;p&gt;url做了修改，那么views也要做一些修改来接收这个page。&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;article_list&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(request, list_type, page)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    page = int(page)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    pages = [x &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; x &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; range(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, get_pages(list_type) + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    end = pages[&lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    content_list = BlogBody.objects.filter(blog_type=list_type).order_by(&lt;span class=&quot;string&quot;&gt;&#39;-blog_timestamp&#39;&lt;/span&gt;)[(page - &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;) * &lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;: page * &lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; page&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; get_pages(list_type) &amp;gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; render(request, &lt;span class=&quot;string&quot;&gt;&#39;blog/article_list.html&#39;&lt;/span&gt;, &amp;#123;&lt;span class=&quot;string&quot;&gt;&#39;content_list&#39;&lt;/span&gt;: content_list,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                          &lt;span class=&quot;string&quot;&gt;&#39;list_type&#39;&lt;/span&gt;: list_type,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                          &lt;span class=&quot;string&quot;&gt;&#39;pages&#39;&lt;/span&gt;: pages,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                          &lt;span class=&quot;string&quot;&gt;&#39;end&#39;&lt;/span&gt;: end,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                          &lt;span class=&quot;string&quot;&gt;&#39;page&#39;&lt;/span&gt;: page,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                          &lt;span class=&quot;string&quot;&gt;&#39;errmsg&#39;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&#39;OK&#39;&lt;/span&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; render(request, &lt;span class=&quot;string&quot;&gt;&#39;blog/article_list.html&#39;&lt;/span&gt;, &amp;#123;&lt;span class=&quot;string&quot;&gt;&#39;content_list&#39;&lt;/span&gt;: content_list,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                          &lt;span class=&quot;string&quot;&gt;&#39;list_type&#39;&lt;/span&gt;: list_type,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                          &lt;span class=&quot;string&quot;&gt;&#39;pages&#39;&lt;/span&gt;: pages,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                          &lt;span class=&quot;string&quot;&gt;&#39;end&#39;&lt;/span&gt;: end,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                          &lt;span class=&quot;string&quot;&gt;&#39;errmsg&#39;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&#39;faile&#39;&lt;/span&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;views的修改基本上是整个分页的核心。我详细的说明一下。&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;page = int(page)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;先把传入的page转换成int类型，方便后续做数学计算。如果不做转换，在python2.7中是unicode类型，无法执行计算。&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;pages = [x &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; x &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; range(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, get_pages(list_type) + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这里专门做一个pages的列表，是用来给前端迭代生成分页页码的，当然Django也可以用loop的方式来生成，我觉得在后台能处理的就一起处理了，前端只负责展示，不进行不必要的计算。&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;end = pages[&lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这个赋值是吧最后一页的页码返回给前端。&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;content_list = BlogBody.objects.filter(blog_type=list_type).order_by(&lt;span class=&quot;string&quot;&gt;&#39;-blog_timestamp&#39;&lt;/span&gt;)[(page - &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;) * &lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;: page * &lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这句就是一个查询的逻辑，也是分页的重点，前面是筛选和按时间戳排序，重点关注最后一个。我这里是按每页8篇文章来分页，那么传入的page为1的时候，我就要取【0：8】的数据来展示，传入2的时候，我就要取【8：16】的数据来展示，这个计算方式就确保了每次传入的page都会去后台取对应的记录。&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; get_pages(list_type) &amp;gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; render(request, &lt;span class=&quot;string&quot;&gt;&#39;blog/article_list.html&#39;&lt;/span&gt;, &amp;#123;&lt;span class=&quot;string&quot;&gt;&#39;content_list&#39;&lt;/span&gt;: content_list,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                          &lt;span class=&quot;string&quot;&gt;&#39;list_type&#39;&lt;/span&gt;: list_type,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                          &lt;span class=&quot;string&quot;&gt;&#39;pages&#39;&lt;/span&gt;: pages,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                          &lt;span class=&quot;string&quot;&gt;&#39;end&#39;&lt;/span&gt;: end,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                          &lt;span class=&quot;string&quot;&gt;&#39;page&#39;&lt;/span&gt;: page,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                          &lt;span class=&quot;string&quot;&gt;&#39;errmsg&#39;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&#39;OK&#39;&lt;/span&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; render(request, &lt;span class=&quot;string&quot;&gt;&#39;blog/article_list.html&#39;&lt;/span&gt;, &amp;#123;&lt;span class=&quot;string&quot;&gt;&#39;content_list&#39;&lt;/span&gt;: content_list,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                          &lt;span class=&quot;string&quot;&gt;&#39;list_type&#39;&lt;/span&gt;: list_type,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                          &lt;span class=&quot;string&quot;&gt;&#39;pages&#39;&lt;/span&gt;: pages,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                          &lt;span class=&quot;string&quot;&gt;&#39;errmsg&#39;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&#39;faile&#39;&lt;/span&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                          &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;get_pages&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(list_type)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    num = divmod(BlogBody.objects.filter(blog_type=list_type).count(), &lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; num[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;] != &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        pages = num[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;] + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        pages = num[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; pages&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这段逻辑就判断是做一个简单的处理，首先通过查询逻辑确定一共有几页，如果只有一页，那么前端就不展示分页的数据，如果大于1页，那么就把分页的页码展示出来。&lt;/p&gt;
&lt;h2 id=&quot;前端修改&quot;&gt;&lt;a href=&quot;#前端修改&quot; class=&quot;headerlink&quot; title=&quot;前端修改&quot;&gt;&lt;/a&gt;前端修改&lt;/h2&gt;&lt;p&gt;前端要针对后台的修改做一些针对性的修改.&lt;/p&gt;
&lt;h3 id=&quot;base-html&quot;&gt;&lt;a href=&quot;#base-html&quot; class=&quot;headerlink&quot; title=&quot;base.html&quot;&gt;&lt;/a&gt;base.html&lt;/h3&gt;&lt;p&gt;base.html文件里面的很多url跳转，由于url新增了一个参数，那么也要对应的加上这个参数。&lt;/p&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;collapse navbar-collapse&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;bs-example-navbar-collapse-1&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;ul&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;nav navbar-nav&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;li&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;href&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;&amp;#123;% url &#39;article_list&#39; &#39;python&#39; &#39;1&#39;%&amp;#125;&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;Python&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;a&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;li&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		 &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;li&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;href&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;&amp;#123;% url &#39;article_list&#39; &#39;test&#39; &#39;1&#39;%&amp;#125;&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;有关测试&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;a&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;li&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		 &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;li&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;href&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;&amp;#123;% url &#39;article_list&#39; &#39;mytalk&#39; &#39;1&#39;%&amp;#125;&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;个人杂谈&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;a&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;li&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;li&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;href&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;&amp;#123;% url &#39;article_list&#39; &#39;diary&#39; &#39;1&#39;%&amp;#125;&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;日记&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;a&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;li&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;li&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;href&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;&amp;#123;% url &#39;message&#39; %&amp;#125;&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;留言板&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;a&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;li&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;li&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;role&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;presentation&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;dropdown&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;dropdown-toggle&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;data-toggle&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;dropdown&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;href&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;#&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;role&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;button&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                       &lt;span class=&quot;attr&quot;&gt;aria-haspopup&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;true&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;aria-expanded&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;false&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                        寒彬小数据 &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;span&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;caret&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;span&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		  &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;a&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;ul&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;dropdown-menu&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;li&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;href&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;&amp;#123;% url &#39;film&#39; %&amp;#125;&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;实时票房&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;a&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;li&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;li&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;href&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;&amp;#123;% url &#39;weather&#39; %&amp;#125;&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;天气资讯&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;a&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;li&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;ul&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;li&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;ul&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;form&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;navbar-form navbar-right&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;role&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;search&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;form-group&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;text&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;form-control&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;placeholder&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;Search&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;button&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;submit&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;btn btn-default&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;搜索&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;button&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;form&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;为page参数默认赋值为1的逻辑是因为点击某个分类后，肯定是进入这个分类的第一页。&lt;/p&gt;
&lt;h3 id=&quot;article-list-html&quot;&gt;&lt;a href=&quot;#article-list-html&quot; class=&quot;headerlink&quot; title=&quot;article_list.html&quot;&gt;&lt;/a&gt;article_list.html&lt;/h3&gt;&lt;p&gt;这个文件的修改同样是最重要的部分。代码如下：&lt;/p&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;% if errmsg == &#39;OK&#39; %&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;nav&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;ul&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;pagination pagination-lg&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;li&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;href&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;&amp;#123;% url &#39;article_list&#39; list_type &#39;1&#39; %&amp;#125;&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;aria-label&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;Previous&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;span&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;aria-hidden&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;true&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&amp;amp;laquo;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;span&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;a&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;li&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;#123;% for p in pages %&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &amp;#123;% if page == p %&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;li&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;active&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;href&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;&amp;#123;% url &#39;article_list&#39; list_type p %&amp;#125;&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&amp;#123;&amp;#123; p &amp;#125;&amp;#125;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;a&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;li&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &amp;#123;% else %&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;li&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;href&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;&amp;#123;% url &#39;article_list&#39; list_type p %&amp;#125;&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&amp;#123;&amp;#123; p &amp;#125;&amp;#125;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;a&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;li&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &amp;#123;% endif %&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;#123;% endfor %&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;li&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;end&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;href&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;&amp;#123;% url &#39;article_list&#39; list_type end %&amp;#125;&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;aria-label&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;Next&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;span&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;aria-hidden&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;true&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&amp;amp;raquo;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;span&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;a&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;li&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;ul&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;nav&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;% endif %&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;首先判断errmsg。如果页码大于2，那么后台传的errmsg的值就是OK。这个时候我们才需要进行分页，否则不显示分页。&lt;/p&gt;
&lt;p&gt;获取到OK之后，我们要在前端展示页码。分页信息一般由这么几部分组成：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;第一页和最后一页&lt;/li&gt;
&lt;li&gt;中间的页码&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;li&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;href&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;&amp;#123;% url &#39;article_list&#39; list_type &#39;1&#39; %&amp;#125;&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;aria-label&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;Previous&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;span&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;aria-hidden&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;true&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&amp;amp;laquo;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;span&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;a&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;li&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;上面的代码就是处理第一页的逻辑。代码是直接从bootstrap的官网copy下来的，使用的是首页的默认图标，当然也可以自行修改文字。&lt;/p&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;li&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;end&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;href&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;&amp;#123;% url &#39;article_list&#39; list_type end %&amp;#125;&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;aria-label&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;Next&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;span&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;aria-hidden&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;true&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&amp;amp;raquo;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;span&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;a&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;li&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;之前在views文件中我返了一个end字段。就用来填到最后一页的地方。&lt;/p&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;% for p in pages %&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	 &amp;#123;% if page == p %&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;li&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;active&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;href&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;&amp;#123;% url &#39;article_list&#39; list_type p %&amp;#125;&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&amp;#123;&amp;#123; p &amp;#125;&amp;#125;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;a&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;li&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	 &amp;#123;% else %&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;li&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;href&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;&amp;#123;% url &#39;article_list&#39; list_type p %&amp;#125;&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&amp;#123;&amp;#123; p &amp;#125;&amp;#125;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;a&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;li&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	 &amp;#123;% endif %&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &amp;#123;% endfor %&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;上面代码就是生成中间页码部分的代码。有几个地方要注意的。&lt;/p&gt;
&lt;p&gt;迭代获取数据，然后生成页码，这个没有上面大问题。&lt;/p&gt;
&lt;p&gt;我们必须告诉浏览网页的人当前页是第几页，当然url中有，但是在页面中有的话更好咯。所以在views中我专门把url中的页码返回给前端，当然用js也是可以处理的，我整了一遍，发现用Django直接处理更方便。if的逻辑就是当迭代的页码等于当前页码的时候，给当前的li标签加上一个active的class。&lt;/p&gt;
&lt;h2 id=&quot;最后&quot;&gt;&lt;a href=&quot;#最后&quot; class=&quot;headerlink&quot; title=&quot;最后&quot;&gt;&lt;/a&gt;最后&lt;/h2&gt;&lt;p&gt;我只记录了一些功能的流程，还有很多异常的处理读者可以自行脑补，比如访问者手工输入了不存在的页码要怎么处理。&lt;/p&gt;
&lt;p&gt;最后放上效果图&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xsgl3.com1.z0.glb.clouddn.com/5ECFE4A9-BC77-45E6-99AB-D8BAD99F45C5.png&quot; alt=&quot;效果图&quot;&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h2&gt;&lt;p&gt;我的博客上线也有一段时间了，非常稳定的运行了那么久，我也写了挺多文章。&lt;/p&gt;
&lt;p&gt;那么问题来了，文章多了，我们并没有做分页，随着文章越来越多，整个页面看起来就不是那么舒服了，所以现在我需要给我的博客做一个分页。&lt;br&gt;
    
    </summary>
    
      <category term="Python" scheme="http://www.wengyb.com/categories/Python/"/>
    
    
      <category term="python" scheme="http://www.wengyb.com/tags/python/"/>
    
      <category term="Django" scheme="http://www.wengyb.com/tags/Django/"/>
    
  </entry>
  
  <entry>
    <title>Appium学习-关于Inspector</title>
    <link href="http://www.wengyb.com/2016/05/11/Appium%E5%AD%A6%E4%B9%A0-%E5%85%B3%E4%BA%8EInspector/"/>
    <id>http://www.wengyb.com/2016/05/11/Appium学习-关于Inspector/</id>
    <published>2016-05-11T14:01:46.000Z</published>
    <updated>2016-05-11T14:04:16.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h2&gt;&lt;p&gt;既然开始折腾IOS了，那么第一步是把Demo跑起来看效果，&lt;a href=&quot;http://wybblog.applinzi.com/blog/article/46/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;《Appium学习-初窥》&lt;/a&gt;文中已经把官方的Demo跑起来了。现在要接下来做其他的事&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;Inspector问题&quot;&gt;&lt;a href=&quot;#Inspector问题&quot; class=&quot;headerlink&quot; title=&quot;Inspector问题&quot;&gt;&lt;/a&gt;Inspector问题&lt;/h2&gt;&lt;p&gt;Inspector是Appium客户端给的一个工具，用来探测IOS的元素布局。当然Android也是可以用的，不过Android一般使用uiautomatorviewer。&lt;/p&gt;
&lt;p&gt;不过我在使用的时候遇到了这么一个问题：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Could not start a new session&lt;/p&gt;
&lt;p&gt;Be sure the Appium server is running with an application opened by using the “App Path” parameter in Appium.app (along with package and activity for Android) or by connecting with selenium client and supplying this in the desired capabilities object.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;挺奇怪的，我的Appium是最新版的，Xcode是最新的，包括模拟器也都是最新的，为什么会报这个奇怪的错。看这个报错的意思，是因为我没有在App Path上配置我的App，但是我已经做了相关配置，而且在跑Demo的时候也没有遇到这样的问题。&lt;/p&gt;
&lt;h2 id=&quot;解决方案&quot;&gt;&lt;a href=&quot;#解决方案&quot; class=&quot;headerlink&quot; title=&quot;解决方案&quot;&gt;&lt;/a&gt;解决方案&lt;/h2&gt;&lt;p&gt;有问题当然是找万能的Google。不过在搜的过程中，虽然有很多人遇到类似的问题，不过基本上都是端口没有配置对。基本上找不到可以解决问题的方案。&lt;/p&gt;
&lt;p&gt;最后没办法，只能自己硬着头皮去看日志了。日志很长，我就不全部贴了，贴一个关键的地方。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;[MJSONWP] Calling AppiumDriver.createSession() with args: [{“platformName”:”iOS”,”platformVersion”:”8.4”,”app”:”/Users/SvenWeng/Library/Developer/Xcode/DerivedData/HLSC_iOS-bdhwxwdycvlcikacthovhpujxicb/Bui…&lt;br&gt;[Appium] Creating new IosDriver session&lt;br&gt;[Appium] Capabilities:&lt;br&gt;[Appium]   platformName: ‘iOS’&lt;br&gt;[Appium]   platformVersion: ‘8.4’&lt;br&gt;[Appium]   app: ‘/Users/SvenWeng/Library/Developer/Xcode/DerivedData/HLSC_iOS-bdhwxwdycvlcikacthovhpujxicb/Build/Products/Debug-iphonesimulator/HLSC_iOS.app’&lt;br&gt;[Appium]   automationName: ‘Appium’&lt;br&gt;[Appium]   deviceName: ‘iPhone 5s’&lt;br&gt;[Appium]   showIOSLog: true&lt;/p&gt;
&lt;p&gt;[debug] [iOS] Not auto-detecting udid.&lt;br&gt;[BaseDriver] Using local app ‘/Users/SvenWeng/Library/Developer/Xcode/DerivedData/HLSC_iOS-bdhwxwdycvlcikacthovhpujxicb/Build/Products/Debug-iphonesimulator/HLSC_iOS.app’&lt;/p&gt;
&lt;p&gt;[debug] [Instruments] Available devices: Apple TV 1080p (9.2) [44F8DE38-FF72-45B7-9ACA-3F672B6379F1] (Simulator),iPad 2 (9.3) [816AE53B-02BA-4DE2-9BB3-55DDAF2783B1] (Simulator),iPad Air (9.3) [CD83EDC1-16EE-46A0-BC05-2AF844F9021D] (Simulator),iPad Air 2 (9.3) [F830CC23-169D-4785-9867-EFE168E91FCD] (Simulator),iPad Pro (9.3) [1376C2E1-A56F-4E43-AF59-A4EEB981DC63] (Simulator),iPad Retina (9.3) [926EEE63-64C6-4C82-ADE4-E0A3E6E87D0D] (Simulator),iPhone 4s (9.3) [0A818680-510E-4971-A61C-6959AA8257C1] (Simulator),iPhone 5 (9.3) [663A8C62-2E93-438F-970C-FFB4BF7D549B] (Simulator),iPhone 5s (9.3) [39D1C620-D85C-4DC7-9F52-6E765A5CD764] (Simulator),iPhone 6 (9.3) [AF7A72E9-E886-438E-80D7-BAF53AEDFFD5] (Simulator),iPhone 6 Plus (9.3) [E23435AA-1E56-4503-A3D8-C8E313412EB7] (Simulator),iPhone 6s (9.3) [0DFB756B-A5A0-48AE-BB02-6A5BAF32BA89] (Simulator),iPhone 6s (9.3) + Apple Watch - 38mm (2.2) [8F013A8C-94B3-4A86-8573-FDE9D36A1DEC] (Simulator),iPhone 6s Plus (9.3) [126374FA-1277-4CCE-9AA0-3255E9D5C378] (Simulator),iPhone 6s Plus (9.3) + Apple Watch - 42mm (2.2) [DA74EE00-66F5-41F8-B659-995D49354E8F] (Simulator)&lt;/p&gt;
&lt;p&gt;[iOS] Error: Could not find a device to launch. You requested ‘iPhone 5s (8.4)’, but the available devices were: [“Apple TV 1080p (9.2) [44F8DE38-FF72-45B7-9ACA-3F672B6379F1] (Simulator)”,”iPad 2 (9.3) [816AE53B-02BA-4DE2-9BB3-55DDAF2783B1] (Simulator)”,”iPad Air (9.3) [CD83EDC1-16EE-46A0-BC05-2AF844F9021D] (Simulator)”,”iPad Air 2 (9.3) [F830CC23-169D-4785-9867-EFE168E91FCD] (Simulator)”,”iPad Pro (9.3) [1376C2E1-A56F-4E43-AF59-A4EEB981DC63] (Simulator)”,”iPad Retina (9.3) [926EEE63-64C6-4C82-ADE4-E0A3E6E87D0D] (Simulator)”,”iPhone 4s (9.3) [0A818680-510E-4971-A61C-6959AA8257C1] (Simulator)”,”iPhone 5 (9.3) [663A8C62-2E93-438F-970C-FFB4BF7D549B] (Simulator)”,”iPhone 5s (9.3) [39D1C620-D85C-4DC7-9F52-6E765A5CD764] (Simulator)”,”iPhone 6 (9.3) [AF7A72E9-E886-438E-80D7-BAF53AEDFFD5] (Simulator)”,”iPhone 6 Plus (9.3) [E23435AA-1E56-4503-A3D8-C8E313412EB7] (Simulator)”,”iPhone 6s (9.3) [0DFB756B-A5A0-48AE-BB02-6A5BAF32BA89] (Simulator)”,”iPhone 6s (9.3) + Apple Watch - 38mm (2.2) [8F013A8C-94B3-4A86-8573-FDE9D36A1DEC] (Simulator)”,”iPhone 6s Plus (9.3) [126374FA-1277-4CCE-9AA0-3255E9D5C378] (Simulator)”,”iPhone 6s Plus (9.3) + Apple Watch - 42mm (2.2) [DA74EE00-66F5-41F8-B659-995D49354E8F] (Simulator)”]&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;自己看日志来解决问题是最好的了。以上日志能很清楚的说明问题。&lt;/p&gt;
&lt;p&gt;第一段说明了启动Inspector的配置，其中的关键就是版本给的是8.4.&lt;/p&gt;
&lt;p&gt;第二段日志说明了没有指定udid，也就是说我们用的是模拟器来测试，给了一段模拟器app的地址&lt;/p&gt;
&lt;p&gt;第三段日志列出了我的mac上所有的可用的模拟器。&lt;/p&gt;
&lt;p&gt;第四段给了一个报错。找不到对应的设备启动，设备信息在第一段指定的，版本号是8.4的iphone5s模拟器，但是我的设备只有9.3版本。&lt;/p&gt;
&lt;p&gt;看到这里，基本上问题就明朗了。版本不对导致的问题。Appium客户端的Inspector最高只支持8.4的版本。那么只要去Xcode下载8.4版本模拟器就行了。成功的效果图如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xsgl3.com1.z0.glb.clouddn.com/184D0687-858D-4AEE-A4BC-1806409DD81F.png&quot; alt=&quot;效果图&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;最后&quot;&gt;&lt;a href=&quot;#最后&quot; class=&quot;headerlink&quot; title=&quot;最后&quot;&gt;&lt;/a&gt;最后&lt;/h2&gt;&lt;p&gt;总结一下，遇到问题还是先看日志比较靠谱，虽然日志看起来东西很多，很繁琐，但是往往能帮助你解决问题的地方，还是这些日志。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h2&gt;&lt;p&gt;既然开始折腾IOS了，那么第一步是把Demo跑起来看效果，&lt;a href=&quot;http://wybblog.applinzi.com/blog/article/46/&quot;&gt;《Appium学习-初窥》&lt;/a&gt;文中已经把官方的Demo跑起来了。现在要接下来做其他的事&lt;br&gt;
    
    </summary>
    
      <category term="AboutTest" scheme="http://www.wengyb.com/categories/AboutTest/"/>
    
    
      <category term="Appium" scheme="http://www.wengyb.com/tags/Appium/"/>
    
      <category term="测试" scheme="http://www.wengyb.com/tags/%E6%B5%8B%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>Appium学习-IOS初窥</title>
    <link href="http://www.wengyb.com/2016/05/09/Appium%E5%AD%A6%E4%B9%A0-IOS%E5%88%9D%E7%AA%A5/"/>
    <id>http://www.wengyb.com/2016/05/09/Appium学习-IOS初窥/</id>
    <published>2016-05-09T14:17:54.000Z</published>
    <updated>2016-05-10T01:07:34.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h2&gt;&lt;p&gt;最近安卓那边做起来有点烦躁，主要还是我们的安卓第三方包用多了，导致超过了谷歌的上限，打不出包了，很多H5部分不好测试，我们的安卓开发总是习惯的禁掉webview句柄，给Activity加权限，导致跑出来的结果各种报错，换一个口味，玩玩IOS的自动化。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;条件&quot;&gt;&lt;a href=&quot;#条件&quot; class=&quot;headerlink&quot; title=&quot;条件&quot;&gt;&lt;/a&gt;条件&lt;/h2&gt;&lt;p&gt;测试IOS必须要&lt;strong&gt;Mac OS X系统&lt;/strong&gt;，请不要问可不可以用Windows来测试IOS这种问题。&lt;/p&gt;
&lt;p&gt;我电脑都是最新的版本，比如系统、比如xcode、比如Appium。&lt;/p&gt;
&lt;h2 id=&quot;初衷&quot;&gt;&lt;a href=&quot;#初衷&quot; class=&quot;headerlink&quot; title=&quot;初衷&quot;&gt;&lt;/a&gt;初衷&lt;/h2&gt;&lt;p&gt;我是比较懒，不太想自己去看那些英文，结果搜索出来的结果，基本上都不是我想要的东西，好像整个网络上都是大神，并没有人来写这么一个手把手指导怎么跑官方demo的教程，只好自己去跑一下感觉感觉。&lt;/p&gt;
&lt;h2 id=&quot;官方Demo&quot;&gt;&lt;a href=&quot;#官方Demo&quot; class=&quot;headerlink&quot; title=&quot;官方Demo&quot;&gt;&lt;/a&gt;官方Demo&lt;/h2&gt;&lt;p&gt;官方Demo当然是最好的一个东西，无奈官方的介绍也很短，还都是英文的。Github上有完整的&lt;a href=&quot;https://github.com/appium/sample-code&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;官方Demo源码&lt;/a&gt;。全部一次性Down下来。在apps里面就能找到IOS的测试包了。就是下图这个东西了。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xsgl3.com1.z0.glb.clouddn.com/769279FC-0D81-4CDD-A691-8CD5C9DFEF13.png&quot; alt=&quot;app启动地址&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;跑起来&quot;&gt;&lt;a href=&quot;#跑起来&quot; class=&quot;headerlink&quot; title=&quot;跑起来&quot;&gt;&lt;/a&gt;跑起来&lt;/h2&gt;&lt;p&gt;跑起来很简单，如果Appium的环境是正常的，那么只要启动Appium的服务，然后执行Python的demo代码就行了。&lt;/p&gt;
&lt;p&gt;官方的说明是这样的：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;These are simple samples of how to use Python to run Appium tests. It is suggested that you use a test runner such as pytest or nose.&lt;/p&gt;
&lt;p&gt;Sauce Labs examples require at least version 0.12 of the Appium Python Client, which includes the appium.SauceTestCase base class.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Usage:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;py.test ios_simple.py&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;py.test -n2 --boxed ios_simple.py&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;成功执行后结果长这个样子。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xsgl3.com1.z0.glb.clouddn.com/57E02A75-FA1D-4529-AF54-F820C50A5FB9.png&quot; alt=&quot;执行结果&quot;&gt;&lt;/p&gt;
&lt;p&gt;不同的bash展示的是不一样的，在执行过程中你可以看到在IOS模拟器启动，然后启动官方demo，执行这两条用例的整个过程&lt;/p&gt;
&lt;h2 id=&quot;Demo的说明&quot;&gt;&lt;a href=&quot;#Demo的说明&quot; class=&quot;headerlink&quot; title=&quot;Demo的说明&quot;&gt;&lt;/a&gt;Demo的说明&lt;/h2&gt;&lt;p&gt;其实官方的Demo是非常简单的，你不需要知道IOS的代码是怎么跑起来的。demo是基于unittest测试框架写的。不懂的请在&lt;a href=&quot;http://blog.csdn.net/wyb199026&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;我的博客&lt;/a&gt;翻翻他们是如何运行的。&lt;/p&gt;
&lt;h3 id=&quot;初始化驱动&quot;&gt;&lt;a href=&quot;#初始化驱动&quot; class=&quot;headerlink&quot; title=&quot;初始化驱动&quot;&gt;&lt;/a&gt;初始化驱动&lt;/h3&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;SimpleIOSTests&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(unittest.TestCase)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;setUp&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(self)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;# set up appium&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        app = os.path.abspath(&lt;span class=&quot;string&quot;&gt;&#39;../../apps/TestApp/build/release-iphonesimulator/TestApp.app&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.driver = webdriver.Remote(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            command_executor=&lt;span class=&quot;string&quot;&gt;&#39;http://127.0.0.1:4723/wd/hub&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            desired_capabilities=&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;string&quot;&gt;&#39;app&#39;&lt;/span&gt;: app,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;string&quot;&gt;&#39;platformName&#39;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&#39;iOS&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;string&quot;&gt;&#39;platformVersion&#39;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&#39;9.3&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;string&quot;&gt;&#39;deviceName&#39;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&#39;iPhone 6&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;可以看到在初始化中比较重要的几个参数，app路径、系统名称、系统版本、设备名称。&lt;/p&gt;
&lt;p&gt;从这些参数来看，&lt;strong&gt;用模拟器测试IOS就必须要有源码&lt;/strong&gt;，如果没有源码你第一个app路径也都没办法填写。&lt;/p&gt;
&lt;h3 id=&quot;第一条测试用例&quot;&gt;&lt;a href=&quot;#第一条测试用例&quot; class=&quot;headerlink&quot; title=&quot;第一条测试用例&quot;&gt;&lt;/a&gt;第一条测试用例&lt;/h3&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;test_scroll&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(self)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        els = self.driver.find_elements_by_class_name(&lt;span class=&quot;string&quot;&gt;&#39;UIAButton&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        els[&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;].click()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        sleep(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            el = self.driver.find_element_by_accessibility_id(&lt;span class=&quot;string&quot;&gt;&#39;OK&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            el.click()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            sleep(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;except&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;pass&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        el = self.driver.find_element_by_xpath(&lt;span class=&quot;string&quot;&gt;&#39;//UIAMapView[1]&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        location = el.location&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.driver.swipe(start_x=location[&lt;span class=&quot;string&quot;&gt;&#39;x&#39;&lt;/span&gt;], start_y=location[&lt;span class=&quot;string&quot;&gt;&#39;y&#39;&lt;/span&gt;], end_x=&lt;span class=&quot;number&quot;&gt;0.5&lt;/span&gt;, end_y=location[&lt;span class=&quot;string&quot;&gt;&#39;y&#39;&lt;/span&gt;], duration=&lt;span class=&quot;number&quot;&gt;800&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这条用例就没什么好解释的了，和安卓上使用Appium基本上是一致的使用方式。首先找到classname是UIAButton的元素点击。然后再做一个滑动的操作。&lt;/p&gt;
&lt;h3 id=&quot;第二条测试用例&quot;&gt;&lt;a href=&quot;#第二条测试用例&quot; class=&quot;headerlink&quot; title=&quot;第二条测试用例&quot;&gt;&lt;/a&gt;第二条测试用例&lt;/h3&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;_populate&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(self)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;# populate text fields with two random numbers&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        els = [self.driver.find_element_by_name(&lt;span class=&quot;string&quot;&gt;&#39;TextField1&#39;&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               self.driver.find_element_by_name(&lt;span class=&quot;string&quot;&gt;&#39;TextField2&#39;&lt;/span&gt;)]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self._sum = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; range(&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            rnd = randint(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            els[i].send_keys(rnd)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            self._sum += rnd&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;test_ui_computation&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(self)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;# populate text fields with values&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self._populate()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;# trigger computation by using the button&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.driver.find_element_by_accessibility_id(&lt;span class=&quot;string&quot;&gt;&#39;ComputeSumButton&#39;&lt;/span&gt;).click()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;# is sum equal ?&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;# sauce does not handle class name, so get fourth element&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        sum = self.driver.find_element_by_name(&lt;span class=&quot;string&quot;&gt;&#39;Answer&#39;&lt;/span&gt;).text&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.assertEqual(int(sum), self._sum)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;简单来说就是两个输入框随机输入10以内的数字，求和，然后下一个断言。代码看起来还是比较简单的，难怪没人会愿意写这么一个教程，因为这基本上就是Down下来直接跑就行了。。。。。。&lt;/p&gt;
&lt;h2 id=&quot;最后&quot;&gt;&lt;a href=&quot;#最后&quot; class=&quot;headerlink&quot; title=&quot;最后&quot;&gt;&lt;/a&gt;最后&lt;/h2&gt;&lt;p&gt;Appium无论执行Android还是IOS都有一个通病。效率很低。官方的两个Demo这么简单的例子，执行起来需要1分半，要是测试案例多了，一跑就是一整天啦！&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h2&gt;&lt;p&gt;最近安卓那边做起来有点烦躁，主要还是我们的安卓第三方包用多了，导致超过了谷歌的上限，打不出包了，很多H5部分不好测试，我们的安卓开发总是习惯的禁掉webview句柄，给Activity加权限，导致跑出来的结果各种报错，换一个口味，玩玩IOS的自动化。&lt;br&gt;
    
    </summary>
    
      <category term="AboutTest" scheme="http://www.wengyb.com/categories/AboutTest/"/>
    
    
      <category term="Appium" scheme="http://www.wengyb.com/tags/Appium/"/>
    
      <category term="测试" scheme="http://www.wengyb.com/tags/%E6%B5%8B%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>官方Demo</title>
    <link href="http://www.wengyb.com/2016/05/09/%E5%AE%98%E6%96%B9Demo/"/>
    <id>http://www.wengyb.com/2016/05/09/官方Demo/</id>
    <published>2016-05-09T14:17:39.000Z</published>
    <updated>2016-05-09T14:17:39.000Z</updated>
    
    <content type="html"></content>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>守护童心OR随波逐流</title>
    <link href="http://www.wengyb.com/2016/05/09/%E5%AE%88%E6%8A%A4%E7%AB%A5%E5%BF%83OR%E9%9A%8F%E6%B3%A2%E9%80%90%E6%B5%81/"/>
    <id>http://www.wengyb.com/2016/05/09/守护童心OR随波逐流/</id>
    <published>2016-05-08T16:12:32.000Z</published>
    <updated>2016-05-08T16:15:03.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;一&quot;&gt;&lt;a href=&quot;#一&quot; class=&quot;headerlink&quot; title=&quot;一&quot;&gt;&lt;/a&gt;一&lt;/h2&gt;&lt;p&gt;今天和某人一起吃了顿饭，某人说，我的心态太年轻了，当然这是委婉的说法，直接点说，像个孩子。&lt;/p&gt;
&lt;p&gt;上次陪蔡经理去参加某某活动，别人对我的评价也大致如此。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;二&quot;&gt;&lt;a href=&quot;#二&quot; class=&quot;headerlink&quot; title=&quot;二&quot;&gt;&lt;/a&gt;二&lt;/h2&gt;&lt;p&gt;话说回来，在招行的时候，玉姐、盛哥、包括一些其他同事都说我的思想就像30岁一样。&lt;/p&gt;
&lt;p&gt;那么问题来了，我精神分裂了？&lt;/p&gt;
&lt;h2 id=&quot;三&quot;&gt;&lt;a href=&quot;#三&quot; class=&quot;headerlink&quot; title=&quot;三&quot;&gt;&lt;/a&gt;三&lt;/h2&gt;&lt;p&gt;其实我觉得吧，应该分别看待这两个东西，工作中我更倾向于用理性的眼光看待问题，比如问题的处理，人员的调配，任务的安排，等等。开个会我可以从头讲到尾，也可以因为某个问题和开发争执、和同事争执。&lt;/p&gt;
&lt;p&gt;但是在生活上，我更愿意用一个孩子的心态来处理事。&lt;/p&gt;
&lt;h2 id=&quot;四&quot;&gt;&lt;a href=&quot;#四&quot; class=&quot;headerlink&quot; title=&quot;四&quot;&gt;&lt;/a&gt;四&lt;/h2&gt;&lt;p&gt;所以在办公室，笑的最大声的那个肯定是我，评论某件事最大声的肯定也是我。我更愿意把我的快乐分享给大家。开心的时候大笑，不爽的时候拉上几个朋友去KTV喝酒狂吼。工作本就压抑，工作之余，何必再压着自己。不累么？&lt;/p&gt;
&lt;h2 id=&quot;五&quot;&gt;&lt;a href=&quot;#五&quot; class=&quot;headerlink&quot; title=&quot;五&quot;&gt;&lt;/a&gt;五&lt;/h2&gt;&lt;p&gt;至于其他方面，我觉得取决于人生阅历吧。毕竟年纪不大，生活也没多大挫折，很多方面肯定也是欠缺的，再加上深入骨髓的懒，说不成熟倒也没错。&lt;/p&gt;
&lt;h2 id=&quot;六&quot;&gt;&lt;a href=&quot;#六&quot; class=&quot;headerlink&quot; title=&quot;六&quot;&gt;&lt;/a&gt;六&lt;/h2&gt;&lt;p&gt;不过话说回来，很多东西并不是不懂，道理我都懂，但是改不改又是另一回事了，我并不想这些所谓的“成熟”来破坏我内心的纯粹。&lt;/p&gt;
&lt;h2 id=&quot;七&quot;&gt;&lt;a href=&quot;#七&quot; class=&quot;headerlink&quot; title=&quot;七&quot;&gt;&lt;/a&gt;七&lt;/h2&gt;&lt;p&gt;最近练琴的时候就感觉特别明显。以前虽然是压迫式的练琴，但是心里是很干净的，一心就是弹琴，最近重新弹琴，最大的感触就是没有以前那么平静了，比较容易走神，犯低级错误。&lt;/p&gt;
&lt;h2 id=&quot;八&quot;&gt;&lt;a href=&quot;#八&quot; class=&quot;headerlink&quot; title=&quot;八&quot;&gt;&lt;/a&gt;八&lt;/h2&gt;&lt;p&gt;现在想想，自己的几个爱好其实是有共同之处的，弹琴、看书、游泳，都能或多或少的排除心里的杂质。&lt;/p&gt;
&lt;h2 id=&quot;九&quot;&gt;&lt;a href=&quot;#九&quot; class=&quot;headerlink&quot; title=&quot;九&quot;&gt;&lt;/a&gt;九&lt;/h2&gt;&lt;p&gt;进入社会这个大染缸，当然是无法避免越来越“那个啥”，只是我希望这天不要这么快到来。&lt;/p&gt;
&lt;h2 id=&quot;十&quot;&gt;&lt;a href=&quot;#十&quot; class=&quot;headerlink&quot; title=&quot;十&quot;&gt;&lt;/a&gt;十&lt;/h2&gt;&lt;p&gt;最后：王品台塑虽然环境很好，但是味道一般，性价比比较低。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;一&quot;&gt;&lt;a href=&quot;#一&quot; class=&quot;headerlink&quot; title=&quot;一&quot;&gt;&lt;/a&gt;一&lt;/h2&gt;&lt;p&gt;今天和某人一起吃了顿饭，某人说，我的心态太年轻了，当然这是委婉的说法，直接点说，像个孩子。&lt;/p&gt;
&lt;p&gt;上次陪蔡经理去参加某某活动，别人对我的评价也大致如此。&lt;br&gt;
    
    </summary>
    
      <category term="MyTalk" scheme="http://www.wengyb.com/categories/MyTalk/"/>
    
    
      <category term="思想汇报" scheme="http://www.wengyb.com/tags/%E6%80%9D%E6%83%B3%E6%B1%87%E6%8A%A5/"/>
    
      <category term="个人杂谈" scheme="http://www.wengyb.com/tags/%E4%B8%AA%E4%BA%BA%E6%9D%82%E8%B0%88/"/>
    
  </entry>
  
  <entry>
    <title>浅谈碎片化阅读</title>
    <link href="http://www.wengyb.com/2016/04/28/%E6%B5%85%E8%B0%88%E7%A2%8E%E7%89%87%E5%8C%96%E9%98%85%E8%AF%BB/"/>
    <id>http://www.wengyb.com/2016/04/28/浅谈碎片化阅读/</id>
    <published>2016-04-28T05:23:52.000Z</published>
    <updated>2016-04-28T05:27:11.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;一&quot;&gt;&lt;a href=&quot;#一&quot; class=&quot;headerlink&quot; title=&quot;一&quot;&gt;&lt;/a&gt;一&lt;/h2&gt;&lt;p&gt;今天在找Mac软件的时候，无意中玩了一下上古神器RSS。在搜索RSS源的时候突然就想到了前几天在刷朋友圈鸡汤的时候刷到了这个东西。&lt;/p&gt;
&lt;h2 id=&quot;二&quot;&gt;&lt;a href=&quot;#二&quot; class=&quot;headerlink&quot; title=&quot;二&quot;&gt;&lt;/a&gt;二&lt;/h2&gt;&lt;p&gt;碎片化阅读简单来说就是利用碎片化时间去获取一些知识，比如我上高中的时候很流行的李阳疯狂英语就很主张碎片化学习英语，利用碎片时间背单词，读句子。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;br&gt;随着移动设备的普及，移动社交的发展，碎片化学习在这些年越来越流行，而各大机构又特别亲民的推出了很多诸如“一张图让你看懂XXX”、“一篇文章告诉你XXX”等等所谓的“干货”，更让大家觉得知识并不是那么的遥不可及。&lt;/p&gt;
&lt;h2 id=&quot;三&quot;&gt;&lt;a href=&quot;#三&quot; class=&quot;headerlink&quot; title=&quot;三&quot;&gt;&lt;/a&gt;三&lt;/h2&gt;&lt;p&gt;块状阅读这个名词我是在知乎上看到的，觉得特别贴切。块状阅读和碎片化阅读的区别就是块状阅读是把一整部分的知识分成一块一块的阅读，而碎片化阅读很大程度上是阅读一些杂乱无章的知识体系的总结内容。知乎上这位大神的看法是支持块状阅读而反对碎片化阅读。&lt;/p&gt;
&lt;h2 id=&quot;四&quot;&gt;&lt;a href=&quot;#四&quot; class=&quot;headerlink&quot; title=&quot;四&quot;&gt;&lt;/a&gt;四&lt;/h2&gt;&lt;p&gt;从上文的行文方式来看，也基本能看出我的一些观点，我并不太支持碎片化阅读。&lt;/p&gt;
&lt;p&gt;最初我是很喜欢碎片化阅读的，尤其是一天看了非常多高聚合的文章，我感觉自己好像读懂了全世界。不过慢慢的我发现这些东西我都忘光了。相信很多人都有这种感觉，今天早上读的东西，50%下午就忘记了，40%的东西睡一觉就忘了，10%的东西过一周就忘了，基本上能记得住的东西，基本都是本来对这个领域有一定的理解。&lt;/p&gt;
&lt;p&gt;前天看到的一篇报道，是一位投资者说创业者在拉风投的故事，里面提到的一点很有意思，他说很大一部分创业者很大程度上对自己的行业都不了解，表面上可以侃大山一样侃上几小时，但是基本上都停留在表面层，一旦做了一些深入的问询，就经常会答非所问。这其实就指出了一个很关键的点，&lt;strong&gt;很多人的知识都不成体系&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&quot;五&quot;&gt;&lt;a href=&quot;#五&quot; class=&quot;headerlink&quot; title=&quot;五&quot;&gt;&lt;/a&gt;五&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;知识体系&lt;/strong&gt;就是某一方面的知识树。我们从小到大接受的教育，都是成体系的，比如语文、数学等，都是按照一定的阶梯，由浅入深的学习，慢慢的构建知识树。没有一定程度的积累，单凭几篇文章就想了解，无异于痴人说梦。&lt;/p&gt;
&lt;h2 id=&quot;六&quot;&gt;&lt;a href=&quot;#六&quot; class=&quot;headerlink&quot; title=&quot;六&quot;&gt;&lt;/a&gt;六&lt;/h2&gt;&lt;p&gt;我曾经花了大概小半年的时间，相对深入的研究了《管理学》（其实是考研考的管理学），管理学的一些分类比如企业行为学模块，人力资源管理模块，有效决策学模块，供应链管理模块，运营管理模块，策略管理模块等等，每一块单独拿出来都可以让人研究很久很久。而现在网络上把很多管理学的内容单独抽出来，作为一些成功学，心灵鸡汤来传递知识，其实很大程度上都是断章取义，很多知识点都是依赖于特定的环境特定的人才能发挥比较好的效果，如果知识体系不完备，这些以偏概全的所谓知识，很可能会误导你。&lt;/p&gt;
&lt;h2 id=&quot;七&quot;&gt;&lt;a href=&quot;#七&quot; class=&quot;headerlink&quot; title=&quot;七&quot;&gt;&lt;/a&gt;七&lt;/h2&gt;&lt;p&gt;当然，碎片化阅读并不是一无是处，如果把碎片化阅读当成一种信息获取渠道，挑选出感兴趣的知识点，慢慢的对这些知识进行补充总结，不断的加深自己的理解。构建自己的知识体系，利用它来寻找自己的兴趣点，那么又何尝不是一个好东西呢？&lt;/p&gt;
&lt;h2 id=&quot;八&quot;&gt;&lt;a href=&quot;#八&quot; class=&quot;headerlink&quot; title=&quot;八&quot;&gt;&lt;/a&gt;八&lt;/h2&gt;&lt;p&gt;社会日趋浮躁，尤其在快节奏的大城市更加如此。闲暇时间的减少和对知识的渴求催生了碎片化阅读这一高需求的获取知识方式。在我的观点里，过度追求碎片化阅读获取知识，表面上看起来什么都懂，实际上花了碎片时间，依然一无所有。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;让人变得低效的不是碎片化阅读，而是以为通过碎片化阅读可以高效学习的想法本身。它会让人陷入一种找到捷径的浮躁心理，就好比练功求捷径，那么，等待它的只能是走火入魔。&lt;/strong&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;一&quot;&gt;&lt;a href=&quot;#一&quot; class=&quot;headerlink&quot; title=&quot;一&quot;&gt;&lt;/a&gt;一&lt;/h2&gt;&lt;p&gt;今天在找Mac软件的时候，无意中玩了一下上古神器RSS。在搜索RSS源的时候突然就想到了前几天在刷朋友圈鸡汤的时候刷到了这个东西。&lt;/p&gt;
&lt;h2 id=&quot;二&quot;&gt;&lt;a href=&quot;#二&quot; class=&quot;headerlink&quot; title=&quot;二&quot;&gt;&lt;/a&gt;二&lt;/h2&gt;&lt;p&gt;碎片化阅读简单来说就是利用碎片化时间去获取一些知识，比如我上高中的时候很流行的李阳疯狂英语就很主张碎片化学习英语，利用碎片时间背单词，读句子。&lt;br&gt;
    
    </summary>
    
      <category term="MyTalk" scheme="http://www.wengyb.com/categories/MyTalk/"/>
    
    
      <category term="个人杂谈" scheme="http://www.wengyb.com/tags/%E4%B8%AA%E4%BA%BA%E6%9D%82%E8%B0%88/"/>
    
  </entry>
  
  <entry>
    <title>Appium实战-基类的构建</title>
    <link href="http://www.wengyb.com/2016/04/26/Appium%E5%AE%9E%E6%88%98-%E5%9F%BA%E7%B1%BB%E7%9A%84%E6%9E%84%E5%BB%BA/"/>
    <id>http://www.wengyb.com/2016/04/26/Appium实战-基类的构建/</id>
    <published>2016-04-26T15:11:08.000Z</published>
    <updated>2016-04-26T15:20:01.000Z</updated>
    
    <content type="html">&lt;p&gt;接上文&lt;a href=&quot;http://wybblog.applinzi.com/blog/article/41/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;《Appium实战-开始》&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;文章来源：&lt;a href=&quot;http://wybblog.applinzi.com/blog/article/42/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;《Appium实战-基类的构建》&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;套用UnitTest构建测试&quot;&gt;&lt;a href=&quot;#套用UnitTest构建测试&quot; class=&quot;headerlink&quot; title=&quot;套用UnitTest构建测试&quot;&gt;&lt;/a&gt;套用UnitTest构建测试&lt;/h2&gt;&lt;p&gt;UnitTest是Python的测试框架，我们这次的实战就是基于这个测试框架来构建的，所以就把基类用UnitTest构建起来。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;br&gt;扫盲，什么是UnitTest？怎么用UnitTest？&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;http://blog.csdn.net/wyb199026/article/details/50129361&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;《Hello PyUnitTest》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://blog.csdn.net/wyb199026/article/details/50130133&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;《为你的测试结果打印案例名称》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://blog.csdn.net/wyb199026/article/details/50134631&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;《测试多个类》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://blog.csdn.net/wyb199026/article/details/50147529&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;《测试用例的初始化和结束函数》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://blog.csdn.net/wyb199026/article/details/50147571&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;《引入其他类》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://blog.csdn.net/wyb199026/article/details/50157897&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;《第一个web自动化》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://blog.csdn.net/wyb199026/article/details/50159449&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;《加上测试报告》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://blog.csdn.net/wyb199026/article/details/50160673&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;《测试多个文件》&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;以上是我自己在学习UnitTest过程中做的一些记录。&lt;/p&gt;
&lt;p&gt;测试案例的颗粒度必须要细，而且测试一个点之后最好进行环境的还原，因此我的基类是这么写的。&lt;/p&gt;
&lt;p&gt;新建一个文件叫BestTestCase，然后输入下面的代码：&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; unittest&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; appium &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; webdriver&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; config&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;AppTestCase&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(unittest.TestCase)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;setUp&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(self)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		desired_caps = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;string&quot;&gt;&#39;platformName&#39;&lt;/span&gt;: config.CONNECT[&lt;span class=&quot;string&quot;&gt;&#39;platformName&#39;&lt;/span&gt;],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;string&quot;&gt;&#39;platformVersion&#39;&lt;/span&gt;: config.CONNECT[&lt;span class=&quot;string&quot;&gt;&#39;platformVersion&#39;&lt;/span&gt;],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;string&quot;&gt;&#39;deviceName&#39;&lt;/span&gt;: config.CONNECT[&lt;span class=&quot;string&quot;&gt;&#39;deviceName&#39;&lt;/span&gt;],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;string&quot;&gt;&#39;appPackage&#39;&lt;/span&gt;: config.CONNECT[&lt;span class=&quot;string&quot;&gt;&#39;appPackage&#39;&lt;/span&gt;],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;string&quot;&gt;&#39;appActivity&#39;&lt;/span&gt;: config.CONNECT[&lt;span class=&quot;string&quot;&gt;&#39;appActivity&#39;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		self.driver = webdriver.Remote(config.CONNECT[&lt;span class=&quot;string&quot;&gt;&#39;baseUrl&#39;&lt;/span&gt;], desired_caps)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;tearDown&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(self)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		self.driver.quit()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这样写，只要其他的测试类来集成这个类就行了，就不用再每个测试类中写setUp和tearDown了，而且每次测试完功能点后就会自动退出APP，还原环境。&lt;/p&gt;
&lt;p&gt;导入包有一个import config，这个是我做的一个配置文件，命名为config.py，我把一些不常修改的参数往这里丢。比如这个初始化的参数，我就这样放了。&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;config.py&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;CONNECT = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;string&quot;&gt;&#39;platformName&#39;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&#39;Android&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;string&quot;&gt;&#39;platformVersion&#39;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&#39;4.4.4&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;string&quot;&gt;&#39;deviceName&#39;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&#39;5136b01e&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;string&quot;&gt;&#39;appPackage&#39;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&#39;com.weizq&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;string&quot;&gt;&#39;appActivity&#39;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&#39;com.zztzt.android.simple.app.MainActivity&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;string&quot;&gt;&quot;baseUrl&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;http://127.0.0.1:4723/wd/hub&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;构建通用方法&quot;&gt;&lt;a href=&quot;#构建通用方法&quot; class=&quot;headerlink&quot; title=&quot;构建通用方法&quot;&gt;&lt;/a&gt;构建通用方法&lt;/h2&gt;&lt;p&gt;UnitTest的基类构建完之后，我们要对基础的方法做一些封装。&lt;/p&gt;
&lt;p&gt;常用的功能大概有这些：寻找元素的各种方法，系统的按键，滑动，获取坐标，截图等。废话不多说，先上代码：&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;91&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;92&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;93&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;94&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;95&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;96&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;97&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;98&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;99&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;100&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;101&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;102&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;103&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;104&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;105&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;106&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;107&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;108&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;109&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;110&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;111&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;112&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;113&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;114&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;115&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;116&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;117&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;118&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;119&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;120&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;121&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;122&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;123&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;124&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;125&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;126&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;127&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; selenium.webdriver.support.expected_conditions &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; NoSuchElementException&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; selenium.webdriver.support.ui &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; WebDriverWait&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; time &lt;span class=&quot;keyword&quot;&gt;as&lt;/span&gt; t&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; config&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;WebDdriver&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(object)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;__init__&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(self, driver)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		self.driver = driver&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;__str__&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(self)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;webDdriver&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;find_element&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(self, *loc)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;string&quot;&gt;&quot;&quot;&quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		定位元素,定位正确后返回元素的信息,外部调用传入元组参数必须有*,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		例如:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		find_element(*self.native_caixun)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		:param loc: 元组类型,结构必须是(By.NAME, u&#39;财讯&#39;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		:return: element&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&quot;&quot;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			element = WebDriverWait(self.driver, &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;).until(&lt;span class=&quot;keyword&quot;&gt;lambda&lt;/span&gt; x: x.find_element(*loc))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; element&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;except&lt;/span&gt; NoSuchElementException, e:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;Error details :%s&#39;&lt;/span&gt; % (e.args[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;find_elements&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(self, *loc)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;string&quot;&gt;&quot;&quot;&quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		定位元素,定位正确后返回元素的信息,外部调用传入元组参数必须有*,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		例如:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		find_elements(*self.native_caixun)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		:param loc: 元组类型,结构必须是(By.NAME, u&#39;财讯&#39;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		:return: elements&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&quot;&quot;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;comment&quot;&gt;# return self.driver.find_elements(*loc)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			elements = WebDriverWait(self.driver, &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;).until(&lt;span class=&quot;keyword&quot;&gt;lambda&lt;/span&gt; x: x.find_elements(*loc))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; elements&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;except&lt;/span&gt; NoSuchElementException, e:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;Error details :%s&#39;&lt;/span&gt; % (e.args[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;get_title&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(self)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;string&quot;&gt;&quot;&quot;&quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		获取页面的标题&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		:return: str, 页面的标题&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&quot;&quot;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		title = self.find_elements(*config.COMMON[&lt;span class=&quot;string&quot;&gt;&#39;view_title&#39;&lt;/span&gt;])[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;].text&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; title&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;	@property&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;wait&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(self)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		t.sleep(&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;getScreenshot&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(self, name, url, form=&lt;span class=&quot;string&quot;&gt;&#39;png&#39;&lt;/span&gt;)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		t.sleep(&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		self.driver.get_screenshot_as_file(url + name + &lt;span class=&quot;string&quot;&gt;&quot;.&quot;&lt;/span&gt; + form)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;sysback&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(self)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;string&quot;&gt;&quot;&quot;&quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		系统的返回按钮&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		:return: None&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&quot;&quot;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		self.driver.keyevent(&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;get_size&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(self)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;string&quot;&gt;&quot;&quot;&quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		获取当前屏幕的分辨率&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		:return: int, x*y&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&quot;&quot;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		size = self.driver.get_window_size()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; size&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;swipe_to_up&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(self)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;string&quot;&gt;&quot;&quot;&quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		从下往上滑动&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		:return: None&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&quot;&quot;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		window_size = self.get_size()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		width = window_size.get(&lt;span class=&quot;string&quot;&gt;&quot;width&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		height = window_size.get(&lt;span class=&quot;string&quot;&gt;&quot;height&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		self.driver.swipe(width / &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, height * &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt; / &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;, width / &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, height / &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;500&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;swipe_to_down&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(self)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;string&quot;&gt;&quot;&quot;&quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		从上往下滑动&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		:return: None&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&quot;&quot;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		window_size = self.get_size()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		width = window_size.get(&lt;span class=&quot;string&quot;&gt;&quot;width&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		height = window_size.get(&lt;span class=&quot;string&quot;&gt;&quot;height&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		self.driver.swipe(width / &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, height / &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;, width / &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, height * &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt; / &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;500&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;swipe_to_left&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(self)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;string&quot;&gt;&quot;&quot;&quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		从右往左滑动&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		:return: None&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&quot;&quot;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		window_size = self.get_size()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		width = window_size.get(&lt;span class=&quot;string&quot;&gt;&quot;width&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		height = window_size.get(&lt;span class=&quot;string&quot;&gt;&quot;height&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		self.driver.swipe(width / &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;, height / &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, width * &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt; / &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;, height / &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;500&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;swipe_to_right&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(self)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;string&quot;&gt;&quot;&quot;&quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		从左往右滑动&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		:return: None&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&quot;&quot;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		window_size = self.get_size()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		width = window_size.get(&lt;span class=&quot;string&quot;&gt;&quot;width&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		height = window_size.get(&lt;span class=&quot;string&quot;&gt;&quot;height&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		self.driver.swipe(width * &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt; / &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;, height / &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, width / &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;, height / &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;500&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;getLocation&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(self, *loc)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;string&quot;&gt;&quot;&quot;&quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		获取元素的定位信息,外部调用传入元组参数必须有*,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		例如:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		(*self.native_caixun)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		:param loc: 元素的定位方式&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		:return: list, [x, y]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&quot;&quot;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		locaX = self.find_element(*loc).location.get(&lt;span class=&quot;string&quot;&gt;&#39;x&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		locaY = self.find_element(*loc).location.get(&lt;span class=&quot;string&quot;&gt;&#39;y&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		rst = [locaX, locaY]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; rst&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;注释我应该写的很清楚了，就把一些比较重要的地方做一些解释，在init中先把刚刚构建的driver初始化了，让类中的其他方法可以使用driver。&lt;/p&gt;
&lt;p&gt;两个最重要的方法，find_element和find_elements做一下重点说明。正常来说，找元素的方法有这么几种，name、id、xpath、tag、class_name、link_text等，但是如果做这么多封装，代码就会显得非常多，当然，如果没有其他办法的话，那就只能老老实实的枚举了，但是如果去看webdriver的源码，就能找到这么一个方法。源码是这样的：&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;By&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(object)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;&quot;&quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Set of supported locator strategies.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &quot;&quot;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ID = &lt;span class=&quot;string&quot;&gt;&quot;id&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    XPATH = &lt;span class=&quot;string&quot;&gt;&quot;xpath&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    LINK_TEXT = &lt;span class=&quot;string&quot;&gt;&quot;link text&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    PARTIAL_LINK_TEXT = &lt;span class=&quot;string&quot;&gt;&quot;partial link text&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    NAME = &lt;span class=&quot;string&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    TAG_NAME = &lt;span class=&quot;string&quot;&gt;&quot;tag name&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CLASS_NAME = &lt;span class=&quot;string&quot;&gt;&quot;class name&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CSS_SELECTOR = &lt;span class=&quot;string&quot;&gt;&quot;css selector&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;    @classmethod&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;is_valid&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(cls, by)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; attr &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; dir(cls):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; by == getattr(cls, attr):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;True&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;False&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;那么也就是说，在webdriver的方法源码中已经帮我们枚举了，那么我们就可以直接调用这个方法，，做参数传入就行了。方法有做入参检查，因此传入参数要求是tuple的类型，所以元素我就全部剥离出来用配置文件处理，配置文件的内容我们就这样写：&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; selenium.webdriver.common.by &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; By&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;CAIXUN = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;string&quot;&gt;&#39;tuijian&#39;&lt;/span&gt;: (By.NAME, &lt;span class=&quot;string&quot;&gt;u&#39;推荐&#39;&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;string&quot;&gt;&#39;gupiao&#39;&lt;/span&gt;: (By.NAME, &lt;span class=&quot;string&quot;&gt;u&#39;股票&#39;&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;string&quot;&gt;&#39;jijin&#39;&lt;/span&gt;: (By.NAME, &lt;span class=&quot;string&quot;&gt;u&#39;基金&#39;&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;string&quot;&gt;&#39;zhaiquan&#39;&lt;/span&gt;: (By.NAME, &lt;span class=&quot;string&quot;&gt;u&#39;债券&#39;&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;string&quot;&gt;&#39;xinsanban&#39;&lt;/span&gt;: (By.NAME, &lt;span class=&quot;string&quot;&gt;u&#39;新三板&#39;&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;string&quot;&gt;&#39;zixunneirong&#39;&lt;/span&gt;: (By.ID, &lt;span class=&quot;string&quot;&gt;&#39;com.weizq:id/new_title&#39;&lt;/span&gt;),  &lt;span class=&quot;comment&quot;&gt;# 财讯记录列表,用find_elements调用&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;string&quot;&gt;&#39;imgurl&#39;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&#39;/Users/SvenWeng/PycharmProjects/WeStock/img/caixun/&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;string&quot;&gt;&#39;title&#39;&lt;/span&gt;: [&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		[&lt;span class=&quot;string&quot;&gt;&#39;tuijian&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;tuijianneirong&#39;&lt;/span&gt;],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		[&lt;span class=&quot;string&quot;&gt;&#39;gupiao&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;gupiaoneirong&#39;&lt;/span&gt;],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		[&lt;span class=&quot;string&quot;&gt;&#39;jijin&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;jijinneirong&#39;&lt;/span&gt;],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		[&lt;span class=&quot;string&quot;&gt;&#39;zhaiquan&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;zhaiquanneirong&#39;&lt;/span&gt;],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		[&lt;span class=&quot;string&quot;&gt;&#39;xinsanban&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;xinsanbanneirong&#39;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;string&quot;&gt;&#39;jiahao&#39;&lt;/span&gt;: (By.CLASS_NAME, &lt;span class=&quot;string&quot;&gt;&#39;android.widget.ImageView&#39;&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;string&quot;&gt;&#39;pindao&#39;&lt;/span&gt;: (By.ID, &lt;span class=&quot;string&quot;&gt;&#39;com.weizq:id/text_item&#39;&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;中间的那些元素就直接这样配置，如果开发进行了一些修改，那么我们就直接改这里就行了。这就是Page Object最大的好处了。&lt;/p&gt;
&lt;h2 id=&quot;最后&quot;&gt;&lt;a href=&quot;#最后&quot; class=&quot;headerlink&quot; title=&quot;最后&quot;&gt;&lt;/a&gt;最后&lt;/h2&gt;&lt;p&gt;最底层的构建就先这样处理了。当然还有其他方法需要构建，比如某个页面的元素定位方法。已经方法的调用。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;接上文&lt;a href=&quot;http://wybblog.applinzi.com/blog/article/41/&quot;&gt;《Appium实战-开始》&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;文章来源：&lt;a href=&quot;http://wybblog.applinzi.com/blog/article/42/&quot;&gt;《Appium实战-基类的构建》&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;套用UnitTest构建测试&quot;&gt;&lt;a href=&quot;#套用UnitTest构建测试&quot; class=&quot;headerlink&quot; title=&quot;套用UnitTest构建测试&quot;&gt;&lt;/a&gt;套用UnitTest构建测试&lt;/h2&gt;&lt;p&gt;UnitTest是Python的测试框架，我们这次的实战就是基于这个测试框架来构建的，所以就把基类用UnitTest构建起来。&lt;br&gt;
    
    </summary>
    
      <category term="AboutTest" scheme="http://www.wengyb.com/categories/AboutTest/"/>
    
    
      <category term="Appium" scheme="http://www.wengyb.com/tags/Appium/"/>
    
      <category term="测试" scheme="http://www.wengyb.com/tags/%E6%B5%8B%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>Appium实战-开始</title>
    <link href="http://www.wengyb.com/2016/04/25/Appium%E5%AE%9E%E6%88%98-%E5%BC%80%E5%A7%8B/"/>
    <id>http://www.wengyb.com/2016/04/25/Appium实战-开始/</id>
    <published>2016-04-25T11:29:00.000Z</published>
    <updated>2016-04-25T16:18:18.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;初衷&quot;&gt;&lt;a href=&quot;#初衷&quot; class=&quot;headerlink&quot; title=&quot;初衷&quot;&gt;&lt;/a&gt;初衷&lt;/h2&gt;&lt;p&gt;最近研究了挺多有关于Appium的东西。也写了一些Appium的学习笔记。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;http://wybblog.applinzi.com/blog/article/35/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;《Appium——驱动和常用功能的封装》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://wybblog.applinzi.com/blog/article/34/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;《Appium——处理混合APP中H5的操作》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://wybblog.applinzi.com/blog/article/33/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;《Appium——无安卓源码的一些准备》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://wybblog.applinzi.com/blog/article/25/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;《Appium学习之路—环境搭建》&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;相信很多人和我一开始一样，都会觉得学习文档太少了，但是没什么基础的又看不懂别人写好的代码，官方的demo比较简单等等问题，不知道怎么走下去。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;br&gt;其实最大的坎还是在自己，只要开始写，一边写一边Google，慢慢的会发现很其实并不难。&lt;/p&gt;
&lt;p&gt;Appium实战我打算记录自己写自动化的过程。希望对新司机有帮助。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;注：整个流程是按照Page Object来写的，直接撸代码的请看&lt;a href=&quot;http://wybblog.applinzi.com/blog/article/35/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;《Appium——驱动和常用功能的封装》&lt;/a&gt;然后自己撸代码&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&quot;几种设计模式&quot;&gt;&lt;a href=&quot;#几种设计模式&quot; class=&quot;headerlink&quot; title=&quot;几种设计模式&quot;&gt;&lt;/a&gt;几种设计模式&lt;/h2&gt;&lt;h3 id=&quot;线性模式&quot;&gt;&lt;a href=&quot;#线性模式&quot; class=&quot;headerlink&quot; title=&quot;线性模式&quot;&gt;&lt;/a&gt;线性模式&lt;/h3&gt;&lt;p&gt;我称呼它为撸代码，也就是按照业务逻辑直接hard code。基本上初学者都会这样折腾，当然，折腾了一段时间就会觉得很操蛋，自己都不想看自己写的代码。&lt;/p&gt;
&lt;h3 id=&quot;Page-Object&quot;&gt;&lt;a href=&quot;#Page-Object&quot; class=&quot;headerlink&quot; title=&quot;Page Object&quot;&gt;&lt;/a&gt;Page Object&lt;/h3&gt;&lt;p&gt;比较流行的设计模式，高度解耦，初学者看起来会觉得有点操蛋，但是了解了逻辑之后，会发现这样做非常棒，维护起来简直是轻松加愉快。&lt;/p&gt;
&lt;h3 id=&quot;通用框架&quot;&gt;&lt;a href=&quot;#通用框架&quot; class=&quot;headerlink&quot; title=&quot;通用框架&quot;&gt;&lt;/a&gt;通用框架&lt;/h3&gt;&lt;p&gt;通用框架就是比较高级的做法了，实施起来比较麻烦，如果水平到了，这种方式肯定是最好的，利用关键字来驱动程序，是比较高级的境界。缺点就是比较难。。。。&lt;/p&gt;
&lt;h2 id=&quot;设计思路&quot;&gt;&lt;a href=&quot;#设计思路&quot; class=&quot;headerlink&quot; title=&quot;设计思路&quot;&gt;&lt;/a&gt;设计思路&lt;/h2&gt;&lt;p&gt;整个设计思路是基于Page Object模式，如下图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xsgl3.com1.z0.glb.clouddn.com/45490789-D8EC-429B-A04C-7839111575B2.png&quot; alt=&quot;设计图&quot;&gt;&lt;/p&gt;
&lt;p&gt;什么是Page Object？&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;When you write tests against a web page, you need to refer to elements within that web page in order to click links and determine what’s displayed. However, if you write tests that manipulate the HTML elements directly your tests will be brittle to changes in the UI. A page object wraps an HTML page, or fragment, with an application-specific API, allowing you to manipulate page elements without digging around in the HTML.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;原来是Web端的模式，搬到移动端来，就是把页面分拆成一个一个元素，如示意图所示，我拆分为元素数据、元素定位、元素操作、测试步骤这么些东西。&lt;/p&gt;
&lt;h2 id=&quot;有什么好处？&quot;&gt;&lt;a href=&quot;#有什么好处？&quot; class=&quot;headerlink&quot; title=&quot;有什么好处？&quot;&gt;&lt;/a&gt;有什么好处？&lt;/h2&gt;&lt;p&gt;这种模式整个架构看起来比直接撸代码复杂了很多，不过当遇到一些坑爹的问题时，尤其开发频繁改动的时候，这种设计模式的优势就出来了，比如开发改了元素的ID那些东西，那么我们只要修改相应ID就行了，所有和这个元素相关的都直接关联修改了，，而直接撸代码，涉及到的地方可能会有很多，改动起来很麻烦。查找方法，测试步骤什么的都不用改，维护起来相对轻松。&lt;/p&gt;
&lt;h2 id=&quot;一些环境&quot;&gt;&lt;a href=&quot;#一些环境&quot; class=&quot;headerlink&quot; title=&quot;一些环境&quot;&gt;&lt;/a&gt;一些环境&lt;/h2&gt;&lt;p&gt;简单列一下我的环境吧：&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;系统：Mac OS X EI Capitan&lt;/p&gt;
&lt;p&gt;Python: 2.7&lt;/p&gt;
&lt;p&gt;Appium: 1.4.16&lt;/p&gt;
&lt;p&gt;IDE: PyCharm&lt;/p&gt;
&lt;p&gt;测试系统：Android&lt;/p&gt;
&lt;p&gt;测试对象：微证券（应用商店可以直接下载）&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;我的项目结构：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;____.DS_Store&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;|____config.py&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;|____Data&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| |____data.json&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;|____img&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| |____.DS_Store&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| |____caixun&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| | |____gupiao.png&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| | |____gupiaoneirong.png&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| | |____jijin.png&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| | |____jijinneirong.png&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| | |____tuijian.png&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| | |____tuijianneirong.png&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| | |____xinsanban.png&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| | |____xinsanbanneirong.png&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| | |____zhaiquan.png&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| | |____zhaiquanneirong.png&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| | |____黄金.png&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;|____Report&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;|____test.py&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;|____TestCase&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| |______init__.py&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| |____common.py&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| |____testCaixun.py&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;|____View&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| |______init__.py&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| |______init__.pyc&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| |____BaseTestCase.py&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| |____BaseView.py&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| |____Caixun.py&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;大的目录我是这么划分的：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Data 用来放置一些数据&lt;/li&gt;
&lt;li&gt;Report 存放测试报告&lt;/li&gt;
&lt;li&gt;TestCase 存放测试用例&lt;/li&gt;
&lt;li&gt;img 存放一些截图&lt;/li&gt;
&lt;li&gt;config.py 配置文件&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;当然写到后续可能会做一些调整，毕竟我才刚刚开始写。&lt;/p&gt;
&lt;h2 id=&quot;一些忠告&quot;&gt;&lt;a href=&quot;#一些忠告&quot; class=&quot;headerlink&quot; title=&quot;一些忠告&quot;&gt;&lt;/a&gt;一些忠告&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;一些很弱智的问题就自己去Google，比如Appium怎么开始啊，怎么学啊，环境怎么搭建啊！&lt;/li&gt;
&lt;li&gt;多用Google&lt;/li&gt;
&lt;li&gt;StockOverflow是个好地方&lt;/li&gt;
&lt;li&gt;多写、多写、多写&lt;/li&gt;
&lt;li&gt;人脑不是万能的，遇到问题解决后记录下来才是王道&lt;/li&gt;
&lt;/ol&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;初衷&quot;&gt;&lt;a href=&quot;#初衷&quot; class=&quot;headerlink&quot; title=&quot;初衷&quot;&gt;&lt;/a&gt;初衷&lt;/h2&gt;&lt;p&gt;最近研究了挺多有关于Appium的东西。也写了一些Appium的学习笔记。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;http://wybblog.applinzi.com/blog/article/35/&quot;&gt;《Appium——驱动和常用功能的封装》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://wybblog.applinzi.com/blog/article/34/&quot;&gt;《Appium——处理混合APP中H5的操作》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://wybblog.applinzi.com/blog/article/33/&quot;&gt;《Appium——无安卓源码的一些准备》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://wybblog.applinzi.com/blog/article/25/&quot;&gt;《Appium学习之路—环境搭建》&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;相信很多人和我一开始一样，都会觉得学习文档太少了，但是没什么基础的又看不懂别人写好的代码，官方的demo比较简单等等问题，不知道怎么走下去。&lt;br&gt;
    
    </summary>
    
      <category term="AboutTest" scheme="http://www.wengyb.com/categories/AboutTest/"/>
    
    
      <category term="Appium" scheme="http://www.wengyb.com/tags/Appium/"/>
    
      <category term="测试" scheme="http://www.wengyb.com/tags/%E6%B5%8B%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>宇宙APP性能测试报告</title>
    <link href="http://www.wengyb.com/2016/04/21/%E5%AE%87%E5%AE%99APP%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95%E6%8A%A5%E5%91%8A/"/>
    <id>http://www.wengyb.com/2016/04/21/宇宙APP性能测试报告/</id>
    <published>2016-04-21T15:29:05.000Z</published>
    <updated>2016-04-21T15:32:54.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;这两周用python自己折腾了一个安卓性能测试工具，当然，整套工具的功能还不够完善，但是，测试几个指标基本上是没什么问题的。本着结果驱动的原则，先用这套工具来试试我们的宇宙级炒股APP&lt;strong&gt;微证券&lt;/strong&gt;（下称宇宙APP）的性能。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;工具概览&quot;&gt;&lt;a href=&quot;#工具概览&quot; class=&quot;headerlink&quot; title=&quot;工具概览&quot;&gt;&lt;/a&gt;工具概览&lt;/h2&gt;&lt;p&gt;工具的开发流程在这里：&lt;a href=&quot;http://wybblog.applinzi.com/blog/article/39/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;《AndroidTestTool开发笔记》&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;工具由两部分组成，一是客户端，二是web端，具体怎么划分的？其实我就是看心情。工具大概长这样&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xsgl3.com1.z0.glb.clouddn.com/6E2A853B-7FA1-46DB-970B-E153C53EB2AD.png&quot; alt=&quot;客户端&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xsgl3.com1.z0.glb.clouddn.com/D40ABEF3-5AFF-4107-8DE9-1219E92A724E.png&quot; alt=&quot;web端&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;工具的作用&quot;&gt;&lt;a href=&quot;#工具的作用&quot; class=&quot;headerlink&quot; title=&quot;工具的作用&quot;&gt;&lt;/a&gt;工具的作用&lt;/h2&gt;&lt;p&gt;工具大概监控这么几个指标，内存、cpu、wlan流量，以及封装了Monkey做满负载执行。&lt;/p&gt;
&lt;h2 id=&quot;多次测试正常使用的指标&quot;&gt;&lt;a href=&quot;#多次测试正常使用的指标&quot; class=&quot;headerlink&quot; title=&quot;多次测试正常使用的指标&quot;&gt;&lt;/a&gt;多次测试正常使用的指标&lt;/h2&gt;&lt;h3 id=&quot;一次测试—模拟正常手工操作&quot;&gt;&lt;a href=&quot;#一次测试—模拟正常手工操作&quot; class=&quot;headerlink&quot; title=&quot;一次测试—模拟正常手工操作&quot;&gt;&lt;/a&gt;一次测试—模拟正常手工操作&lt;/h3&gt;&lt;p&gt;首先模拟正常的操作监控内存、cpu和wlan流量（全程使用wifi，所以这个指标代表流量的消耗），测试时间5分钟左右（使用秒表记录，时间可能会有略微的偏差）。&lt;/p&gt;
&lt;h4 id=&quot;第一次内存监控数据：&quot;&gt;&lt;a href=&quot;#第一次内存监控数据：&quot; class=&quot;headerlink&quot; title=&quot;第一次内存监控数据：&quot;&gt;&lt;/a&gt;第一次内存监控数据：&lt;/h4&gt;&lt;p&gt;&lt;img src=&quot;http://7xsgl3.com1.z0.glb.clouddn.com/3F7C7D57-9435-4DFE-9CAC-08AB2F5D7619.png&quot; alt=&quot;内存监控&quot;&gt;&lt;/p&gt;
&lt;h4 id=&quot;第一次cpu监控数据：&quot;&gt;&lt;a href=&quot;#第一次cpu监控数据：&quot; class=&quot;headerlink&quot; title=&quot;第一次cpu监控数据：&quot;&gt;&lt;/a&gt;第一次cpu监控数据：&lt;/h4&gt;&lt;p&gt;&lt;img src=&quot;http://7xsgl3.com1.z0.glb.clouddn.com/20C18466-D2BE-4BF8-A848-57F6EC551E0F.png&quot; alt=&quot;cpu监控&quot;&gt;&lt;/p&gt;
&lt;h4 id=&quot;第一次流量监控：&quot;&gt;&lt;a href=&quot;#第一次流量监控：&quot; class=&quot;headerlink&quot; title=&quot;第一次流量监控：&quot;&gt;&lt;/a&gt;第一次流量监控：&lt;/h4&gt;&lt;p&gt;&lt;img src=&quot;http://7xsgl3.com1.z0.glb.clouddn.com/EAB14141-4D89-483C-8D34-9289401DA9CC.png&quot; alt=&quot;流量监控&quot;&gt;&lt;/p&gt;
&lt;h4 id=&quot;第一次测试的总结&quot;&gt;&lt;a href=&quot;#第一次测试的总结&quot; class=&quot;headerlink&quot; title=&quot;第一次测试的总结&quot;&gt;&lt;/a&gt;第一次测试的总结&lt;/h4&gt;&lt;p&gt;第一次测试我模拟了正常用户的使用，查看咨询内容、查看个股详情，查看排行榜数据、查看投资学院、修改了头像昵称等操作。&lt;/p&gt;
&lt;p&gt;第一次测试暴露了以下问题：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;内存存在抖动现象&lt;/li&gt;
&lt;li&gt;cpu走势不稳定&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;当然一次测试肯定是不够的，上述两个问题的出现很可能是由于其他因素导致的，比如第一次使用APP，会导致加载大量的数据，导致CPU使用量巨大，内存不稳定等问题，而且第一次使用需要加载大量的数据，流量也会慢慢的往上走，带着这些问题，继续进行第二次测试。&lt;/p&gt;
&lt;h3 id=&quot;二次测试—模拟手工测试&quot;&gt;&lt;a href=&quot;#二次测试—模拟手工测试&quot; class=&quot;headerlink&quot; title=&quot;二次测试—模拟手工测试&quot;&gt;&lt;/a&gt;二次测试—模拟手工测试&lt;/h3&gt;&lt;p&gt;二次测试如同第一次测试一样手工执行，获取的指标如下：&lt;/p&gt;
&lt;h4 id=&quot;第二次内存监控数据&quot;&gt;&lt;a href=&quot;#第二次内存监控数据&quot; class=&quot;headerlink&quot; title=&quot;第二次内存监控数据&quot;&gt;&lt;/a&gt;第二次内存监控数据&lt;/h4&gt;&lt;p&gt;&lt;img src=&quot;http://7xsgl3.com1.z0.glb.clouddn.com/9DC2A24F-111F-49AA-A5F3-6A7D63BC37C2.png&quot; alt=&quot;内存监控数据&quot;&gt;&lt;/p&gt;
&lt;h4 id=&quot;第二次cpu监控数据&quot;&gt;&lt;a href=&quot;#第二次cpu监控数据&quot; class=&quot;headerlink&quot; title=&quot;第二次cpu监控数据&quot;&gt;&lt;/a&gt;第二次cpu监控数据&lt;/h4&gt;&lt;p&gt;&lt;img src=&quot;http://7xsgl3.com1.z0.glb.clouddn.com/E21BA601-C20E-483F-B354-8CBF42C88944.png&quot; alt=&quot;cpu监控数据&quot;&gt;&lt;/p&gt;
&lt;h4 id=&quot;第二次流量监控数据&quot;&gt;&lt;a href=&quot;#第二次流量监控数据&quot; class=&quot;headerlink&quot; title=&quot;第二次流量监控数据&quot;&gt;&lt;/a&gt;第二次流量监控数据&lt;/h4&gt;&lt;p&gt;&lt;img src=&quot;http://7xsgl3.com1.z0.glb.clouddn.com/D682E488-1EE0-4884-A571-A9A69177307B.png&quot; alt=&quot;流量监控数据&quot;&gt;&lt;/p&gt;
&lt;h4 id=&quot;第二次测试结果的总结&quot;&gt;&lt;a href=&quot;#第二次测试结果的总结&quot; class=&quot;headerlink&quot; title=&quot;第二次测试结果的总结&quot;&gt;&lt;/a&gt;第二次测试结果的总结&lt;/h4&gt;&lt;p&gt;从第二次测试结果来看，与第一次的结果并没有很大的出入，内存轻微抖动依然存在，CPU时高时低的情况也没有消除，流量数据也是老样子，不过综合第一第二次来分析，APP的流量消耗其实并不大，流量攀升都在APP打开的初始阶段，也就是在刷财讯数据的时候，都是加载新的资源，其他时候流量的消耗都是缓慢上升。属于可接受范围。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;那么问题来了，是因为APP内部的代码有问题，进行了过多的数据处理、图形的绘制，导致走势图抖动，还是正常处理数据的走势图就是这样呢？为了确认这个问题，我找了其他同类的APP进行竞品测试。&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&quot;竞品测试&quot;&gt;&lt;a href=&quot;#竞品测试&quot; class=&quot;headerlink&quot; title=&quot;竞品测试&quot;&gt;&lt;/a&gt;竞品测试&lt;/h3&gt;&lt;p&gt;竞品我选择了腾讯的自选股，作为互联网龙头企业的产品比较有标杆作用，来看看自选股的表现怎么样。&lt;/p&gt;
&lt;p&gt;同样的时间，同样的我在操作，我们来看自选股的几个指标的表现。&lt;/p&gt;
&lt;h4 id=&quot;自选股内存监控数据&quot;&gt;&lt;a href=&quot;#自选股内存监控数据&quot; class=&quot;headerlink&quot; title=&quot;自选股内存监控数据&quot;&gt;&lt;/a&gt;自选股内存监控数据&lt;/h4&gt;&lt;p&gt;&lt;img src=&quot;http://7xsgl3.com1.z0.glb.clouddn.com/8040F4D5-94B4-4D51-9EDB-02699F248CFD.png&quot; alt=&quot;自选股内存监控&quot;&gt;&lt;/p&gt;
&lt;h4 id=&quot;自选股cpu监控数据&quot;&gt;&lt;a href=&quot;#自选股cpu监控数据&quot; class=&quot;headerlink&quot; title=&quot;自选股cpu监控数据&quot;&gt;&lt;/a&gt;自选股cpu监控数据&lt;/h4&gt;&lt;p&gt;&lt;img src=&quot;http://7xsgl3.com1.z0.glb.clouddn.com/0D67E6C8-4AC2-4FFF-9A71-2E602CCD2310.png&quot; alt=&quot;自选股CPU监控数据&quot;&gt;&lt;/p&gt;
&lt;h4 id=&quot;自选股流量监控数据&quot;&gt;&lt;a href=&quot;#自选股流量监控数据&quot; class=&quot;headerlink&quot; title=&quot;自选股流量监控数据&quot;&gt;&lt;/a&gt;自选股流量监控数据&lt;/h4&gt;&lt;p&gt;&lt;img src=&quot;http://7xsgl3.com1.z0.glb.clouddn.com/9FF14466-FB60-449B-AE26-DA1E4C7192F7.png&quot; alt=&quot;自选股流量监控数据&quot;&gt;&lt;/p&gt;
&lt;h4 id=&quot;综合自选股测试结果的总结&quot;&gt;&lt;a href=&quot;#综合自选股测试结果的总结&quot; class=&quot;headerlink&quot; title=&quot;综合自选股测试结果的总结&quot;&gt;&lt;/a&gt;综合自选股测试结果的总结&lt;/h4&gt;&lt;p&gt;从自选股的三个指标来看，内存的轻微抖动属于正常现象，只要不超过最大值引发OOM，也不是全程频繁的抖动，我们都可以认为是合理的。CPU的上下波动属于正常现象，行情方面涉及到大量的数据处理，CPU标高，离开行情页面，CPU走低，这种波动也属于正常现象。从趋势图我们可以看出，自选股的内存抖动情况比我们的宇宙APP更加频繁，cpu的浮动相对较少，二者都可以理解为正常的范畴。&lt;/p&gt;
&lt;p&gt;从流量上看，自选股显然要比我们的宇宙APP少很多，但是由于APP安全处理等原因，导致没办法抓通讯数据进行分析，只能从表现层来分析数据，自选股的行情数据是通过手工刷新来更新数据的，而我们的宇宙APP是自动刷新的，也就是说在测试的5分钟内，自选股的行情只有我手工触发刷新时才会产生流量，而我们的宇宙APP属于5分钟内无时无刻都在刷新数据，因此产生的流量较高，当然影响流量的因素还有很多，由于种种原因没办法做很深入的分析，只能做一个粗浅的判断。&lt;/p&gt;
&lt;h3 id=&quot;结果&quot;&gt;&lt;a href=&quot;#结果&quot; class=&quot;headerlink&quot; title=&quot;结果&quot;&gt;&lt;/a&gt;结果&lt;/h3&gt;&lt;p&gt;有图有真相，有数据有真相，从这三个指标来看，我们的宇宙APP离行业的标杆产品还有一些距离，但是这个距离并不大。&lt;/p&gt;
&lt;p&gt;当然。APP的好坏不仅仅是这三个指标衡量的，还有功能，用户体验，流畅度等等许多因素影响，本文仅列出这三个指标是因为我的测试工具目前只能测试这三个指标。&lt;/p&gt;
&lt;p&gt;现在，来一组满负载（使用Monkey执行）的指标图：&lt;/p&gt;
&lt;p&gt;内存信息：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xsgl3.com1.z0.glb.clouddn.com/520B8C6F-5177-485B-9B46-2768B7DA6A59.png&quot; alt=&quot;内存监控&quot;&gt;&lt;/p&gt;
&lt;p&gt;cpu信息：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xsgl3.com1.z0.glb.clouddn.com/CB9F808E-2DCF-4571-9D1A-4DC7C4BDB077.png&quot; alt=&quot;cpu信息&quot;&gt;&lt;/p&gt;
&lt;p&gt;流量信息：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xsgl3.com1.z0.glb.clouddn.com/4974AEB2-EEC0-40CD-8133-401EE815D3FD.png&quot; alt=&quot;流量信息&quot;&gt;&lt;/p&gt;
&lt;p&gt;由于我对Monkey命令没有做优化处理，因此单一的结果并不具有参考性（很明显，上面测试最后转到了一个死胡同里一直跑，数据全部都是平缓的走）。这里只是为了说明，我们宇宙APP的性能还可以，Monkey并没有跑挂，啊哈哈哈哈！&lt;/p&gt;
&lt;h2 id=&quot;其他指标&quot;&gt;&lt;a href=&quot;#其他指标&quot; class=&quot;headerlink&quot; title=&quot;其他指标&quot;&gt;&lt;/a&gt;其他指标&lt;/h2&gt;&lt;p&gt;除了我自己工具的几个指标以外，还有一些其他指标，比如gfxinfo、GPU过度绘制等，我也做了一下简单的测试。&lt;/p&gt;
&lt;h3 id=&quot;gfxinfo&quot;&gt;&lt;a href=&quot;#gfxinfo&quot; class=&quot;headerlink&quot; title=&quot;gfxinfo&quot;&gt;&lt;/a&gt;gfxinfo&lt;/h3&gt;&lt;p&gt;这个指标其实就是FPS，打过游戏的对这个名词应该都不陌生，在APP中就表示动态绘制某个页面的时间，官方的说法是大于16MS就会产生卡顿的感觉。这个指标主要是用来衡量一些动态场景的流畅度，在炒股APP里面，一个股票列表的滑动，另一个是自选个股左右滑动的切换。&lt;/p&gt;
&lt;p&gt;gfxinfo有三个参考的指标。Draw、Process和Execute。&lt;/p&gt;
&lt;p&gt;Draw表示显示列表的时间开销，记录了所有view对象的绘制时间，这个指标高，要么就是view太多，要么就是执行效率太低。&lt;/p&gt;
&lt;p&gt;Process表示显示列表中绘制指令的时间，这个指标过高就表示View的数量过多。&lt;/p&gt;
&lt;p&gt;Execute表示一副图像由合成器合成的时间，这个指标过高就表示合成的效率低下。&lt;/p&gt;
&lt;p&gt;针对这个指标，我们的宇宙APP基本上是惨不忍睹。请看图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xsgl3.com1.z0.glb.clouddn.com/FC5C5E0C-8C50-4B1A-A794-2118007EB772.png&quot; alt=&quot;gfxinfo&quot;&gt;&lt;/p&gt;
&lt;p&gt;在绿色横线以上都是不合格的。所以在使用的时候快速切换个股，可以很直观的感觉非常非常的卡。图中Process的指标突破天际了，所以可以初步断定View的数量过多&lt;/p&gt;
&lt;p&gt;对比对比其他的我们看看结果。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xsgl3.com1.z0.glb.clouddn.com/BFF65971-E761-4573-B35A-8B454F72FBAD.png&quot; alt=&quot;自选股&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xsgl3.com1.z0.glb.clouddn.com/643641D4-D55E-49F9-A8BD-128E88956670.png&quot; alt=&quot;同花顺&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xsgl3.com1.z0.glb.clouddn.com/BE59FD0E-654C-4DDD-A7A7-D4E9B612E919.png&quot; alt=&quot;东方财富&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xsgl3.com1.z0.glb.clouddn.com/064D773D-3951-4663-A75C-817CC85BA2E0.png&quot; alt=&quot;佣金宝&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xsgl3.com1.z0.glb.clouddn.com/857249ED-F71B-4634-AC18-2B5AB99D5610.png&quot; alt=&quot;中山证券&quot;&gt;&lt;/p&gt;
&lt;p&gt;看了这么些APP的表现。。。只能说券商系的APP在这点上是一脉相承的烂到渣，而互联网公司的产品用户体验就会好上很多。&lt;/p&gt;
&lt;h3 id=&quot;GPU过度绘制&quot;&gt;&lt;a href=&quot;#GPU过度绘制&quot; class=&quot;headerlink&quot; title=&quot;GPU过度绘制&quot;&gt;&lt;/a&gt;GPU过度绘制&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;GPU过度绘制指的是在屏幕一个像素上绘制多次(超过一次),比如一个TextView后有背景，那么显示文本的像素至少绘了两次，一次是背景，一次是文本。GPU过度绘制或多或少对性能有些影响。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;参考指标：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;蓝色 1x过度绘制&lt;/p&gt;
&lt;p&gt;绿色 2x过度绘制&lt;/p&gt;
&lt;p&gt;淡红色 3x过度绘制&lt;/p&gt;
&lt;p&gt;红色 超过4x过度绘制&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;怎么理解这个指标呢，打开GPU显示，如果是红色一片，就表示绘制过度，如果是蓝色绿色，就表示整个UI的体系设计的还是很好的。&lt;/p&gt;
&lt;p&gt;我们来看看宇宙APP的表现。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xsgl3.com1.z0.glb.clouddn.com/IMG_0840.JPG&quot; alt=&quot;com.weizq&quot;&gt;&lt;/p&gt;
&lt;p&gt;可以看出，淡红色一整片附带了一些深红色，也就是说过度绘制是比较严重的。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xsgl3.com1.z0.glb.clouddn.com/IMG_0843.JPG&quot; alt=&quot;WeChat&quot;&gt;&lt;/p&gt;
&lt;p&gt;上图是微信的表现，可以说是非常棒的，可以说，几乎看不到红色。当然，不同类型的产品可比性是比较低的。就像上文中我们说CPU上下跳动很大的情况一样，同类产品的比较才能看出问题。我找了自选股和同花顺的图来对比。&lt;/p&gt;
&lt;p&gt;自选股：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xsgl3.com1.z0.glb.clouddn.com/IMG_0841.JPG&quot; alt=&quot;自选股&quot;&gt;&lt;/p&gt;
&lt;p&gt;同花顺：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xsgl3.com1.z0.glb.clouddn.com/IMG_0842.JPG&quot; alt=&quot;同花顺&quot;&gt;&lt;/p&gt;
&lt;p&gt;可以看出，自选股和同花顺都是非常重度的进行了绘制，也从侧面反映了一个问题，行情页面的展示UI是比较复杂的，难免涉及到重复绘制的问题，而IM类的软件结构相对简单，因此重度绘制不明显。&lt;/p&gt;
&lt;p&gt;不过话又说回来，这种绘制消耗最大的是CPU。而现在安卓手机的配置高的吓人，CPU没有个4核都不好意思拿出来卖，更何况旗舰级都已经到八核十六核了，再多绘几层用户也不会有感觉。&lt;/p&gt;
&lt;p&gt;但是高CPU会大大增加电量的消耗，为什么玩游戏耗电特别快，就是因为游戏动画需要吃非常高的CPU，手机发热，耗电加快，因此这个指标虽然不影响用户体验，但是在不影响功能的情况下，进行优化，也是对APP一个很大的提升。&lt;/p&gt;
&lt;h2 id=&quot;结语&quot;&gt;&lt;a href=&quot;#结语&quot; class=&quot;headerlink&quot; title=&quot;结语&quot;&gt;&lt;/a&gt;结语&lt;/h2&gt;&lt;p&gt;文章列的一些指标都是无需root无需代码，从一些侧面就能够发现的性能问题，还有很多指标，比如uss需要root，数据处理和IO等指标更是需要从代码入手去埋点检查，衡量一个APP的好坏也不仅仅是看这些指标，还有很多其他因素，So，学习之路还很长。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;这两周用python自己折腾了一个安卓性能测试工具，当然，整套工具的功能还不够完善，但是，测试几个指标基本上是没什么问题的。本着结果驱动的原则，先用这套工具来试试我们的宇宙级炒股APP&lt;strong&gt;微证券&lt;/strong&gt;（下称宇宙APP）的性能。&lt;br&gt;
    
    </summary>
    
      <category term="AboutTest" scheme="http://www.wengyb.com/categories/AboutTest/"/>
    
    
      <category term="Appium" scheme="http://www.wengyb.com/tags/Appium/"/>
    
      <category term="测试" scheme="http://www.wengyb.com/tags/%E6%B5%8B%E8%AF%95/"/>
    
      <category term="Python" scheme="http://www.wengyb.com/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>AndroidTestTool开发笔记</title>
    <link href="http://www.wengyb.com/2016/04/19/AndroidTestTool%E5%BC%80%E5%8F%91%E7%AC%94%E8%AE%B0/"/>
    <id>http://www.wengyb.com/2016/04/19/AndroidTestTool开发笔记/</id>
    <published>2016-04-19T02:34:32.000Z</published>
    <updated>2016-04-19T03:12:43.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;这段时间在Testerhome上看了一些有关性能测试的帖子，看别人的东西，始终是别人的，只有自己写一遍才能体会其中的细节，虽然说不要重复造轮子，但是这种基础的东西，造一次轮子能够学会很多东西，最近看的东西也比较多，拿来实战一下也未尝不可。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;br&gt;整个工程下来难度其实不大，主要是一些基本知识，只不过涉及的面比较广，需要的要素如下：&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;开发相关&lt;/p&gt;
&lt;p&gt;操作系统： Mac OS X EI capitan&lt;/p&gt;
&lt;p&gt;Python： 2.7&lt;/p&gt;
&lt;p&gt;Django：1.8.2&lt;/p&gt;
&lt;p&gt;前端：Html、Css、Js、Bootstrap、jQuery、Ajax、&lt;a href=&quot;http://echarts.baidu.com&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Echarts&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Android：ADB相关知识、Monkey相关知识&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&quot;程序的架构&quot;&gt;&lt;a href=&quot;#程序的架构&quot; class=&quot;headerlink&quot; title=&quot;程序的架构&quot;&gt;&lt;/a&gt;程序的架构&lt;/h2&gt;&lt;p&gt;当然，用架构来形容有点夸张了，大概的模型如下图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xsgl3.com1.z0.glb.clouddn.com/3D158640-1AB0-4776-B07C-B6212CE2F437.png&quot; alt=&quot;程序模型&quot;&gt;&lt;/p&gt;
&lt;p&gt;整个程序的模型并不复杂，都是通过ADB SHELL来操作Android设备、获取设备信息。在最初设计的时候是没有Tkinter的，因为我对这个GUI端并不熟，信号槽的信号传递和事件的绑定并不了解，而Web端相对了解一些。但是执行的时候发现有一些问题。在&lt;a href=&quot;http://wybblog.applinzi.com/blog/article/36/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;《Python开发测试工具(一)—Monkey》&lt;/a&gt;里面有详细描述这个问题。于是临时去学习Tkinter的知识，临时硬拼拼了一个GUI端出来。&lt;/p&gt;
&lt;h2 id=&quot;前端&quot;&gt;&lt;a href=&quot;#前端&quot; class=&quot;headerlink&quot; title=&quot;前端&quot;&gt;&lt;/a&gt;前端&lt;/h2&gt;&lt;p&gt;前端分为GUI和Web两个端，GUi端使用Tkinter，Web端使用Bootstrap和jQuery。两个端界面大概长这样。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xsgl3.com1.z0.glb.clouddn.com/6E2A853B-7FA1-46DB-970B-E153C53EB2AD.png&quot; alt=&quot;客户端&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xsgl3.com1.z0.glb.clouddn.com/D40ABEF3-5AFF-4107-8DE9-1219E92A724E.png&quot; alt=&quot;web端&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;Tkinter&quot;&gt;&lt;a href=&quot;#Tkinter&quot; class=&quot;headerlink&quot; title=&quot;Tkinter&quot;&gt;&lt;/a&gt;Tkinter&lt;/h3&gt;&lt;p&gt;最初我的选择不是TKinter，这个Python自带的原生包功能非常原始，而且最关键的是用的人太少，没人写中文文档，我如果要使用它，就必须去看英文的原文。但是其他几个GUI端也都有相应的缺点，PyQt环境搭建麻烦，而且中文文档大多是Qt4的，WxPython文档少，功能也不见得比Tkinter强大多少。最终还是硬着头皮吧Tkinter的官方文档看完了，因为没有现成的代码，所以我就把所有代码丢到了一起，全部放在gui.py中，整个代码完全没有结构而言，不过再怎样，功能也算是实现了。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Tkinter有几个坑爹的点我简单的列一下。&lt;/strong&gt;&lt;/p&gt;
&lt;h4 id=&quot;Entry只读时无法显示文字&quot;&gt;&lt;a href=&quot;#Entry只读时无法显示文字&quot; class=&quot;headerlink&quot; title=&quot;Entry只读时无法显示文字&quot;&gt;&lt;/a&gt;Entry只读时无法显示文字&lt;/h4&gt;&lt;p&gt;Entry就是一个Text输入框，单行的那种。一旦设置为只读属性，就无法显示文字，所以整个Tkinter如果要做成一个不允许输入又要展示状态的信息媒介，That’s Impossible。&lt;/p&gt;
&lt;h4 id=&quot;Label不能动态的改变&quot;&gt;&lt;a href=&quot;#Label不能动态的改变&quot; class=&quot;headerlink&quot; title=&quot;Label不能动态的改变&quot;&gt;&lt;/a&gt;Label不能动态的改变&lt;/h4&gt;&lt;p&gt;Tkinter的标签在初始化生成之后，就再也无法改变了，无法做动态的更新。&lt;/p&gt;
&lt;h4 id=&quot;Placeholder效果实现起来很坑爹&quot;&gt;&lt;a href=&quot;#Placeholder效果实现起来很坑爹&quot; class=&quot;headerlink&quot; title=&quot;Placeholder效果实现起来很坑爹&quot;&gt;&lt;/a&gt;Placeholder效果实现起来很坑爹&lt;/h4&gt;&lt;p&gt;Html中placeholder的效果很友好（就是文本框为空时显示一个提示语，输入内容后提示语消失的属性），但是在Tkinter中如果要实现它，就必须自己动手写两个事件，一是初始化的时候默认赋值，二是点击Entry获得焦点后做一个删除处理。&lt;/p&gt;
&lt;h4 id=&quot;按钮回调函数的时候无法传参&quot;&gt;&lt;a href=&quot;#按钮回调函数的时候无法传参&quot; class=&quot;headerlink&quot; title=&quot;按钮回调函数的时候无法传参&quot;&gt;&lt;/a&gt;按钮回调函数的时候无法传参&lt;/h4&gt;&lt;p&gt;这才是最坑爹的一点。。。基本上函数都要传参的诶~~~当然，通过万能的Google我还是找到了解决办法，就是使用lambda语句来处理。代码如下：&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;get_cpu_info = Button(master, text=&lt;span class=&quot;string&quot;&gt;&quot;开始生成cpu信息&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                              command=&lt;span class=&quot;keyword&quot;&gt;lambda&lt;/span&gt;: self.get_cpuinfo(self.cm.get_text(cpu_monitor)))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;在这么多的坑中，我竟然还是坚持用完了Tkinter，当然我看的是英文的文档，也有可能有这个方法我没有看到，毕竟看英文的文档还是很操蛋的一件事。&lt;/p&gt;
&lt;h3 id=&quot;多进程的处理&quot;&gt;&lt;a href=&quot;#多进程的处理&quot; class=&quot;headerlink&quot; title=&quot;多进程的处理&quot;&gt;&lt;/a&gt;多进程的处理&lt;/h3&gt;&lt;p&gt;Tkinter是一个单线程的处理机制，我想在执行Monkey的同时又执行获取内存、获取CPU，那就必须挂上多进程来处理（多线程理论上也是可以的，但是实践中我发现经常会发生线程阻塞的情况）。当然，程序比较简单，不需要专门去做进程池来处理，只要每个功能开一个进程去处理就好了。代码如下：&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;t = multiprocessing.Process(target=&lt;span class=&quot;keyword&quot;&gt;lambda&lt;/span&gt;: self.ad.get_cpuinfo(package_name, &lt;span class=&quot;string&quot;&gt;&#39;cpuinfo&#39;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;t.start()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;GUI端的一些核心代码&quot;&gt;&lt;a href=&quot;#GUI端的一些核心代码&quot; class=&quot;headerlink&quot; title=&quot;GUI端的一些核心代码&quot;&gt;&lt;/a&gt;GUI端的一些核心代码&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;执行Monkey&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;run_monkey&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(self)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        t = multiprocessing.Process(target=&lt;span class=&quot;keyword&quot;&gt;lambda&lt;/span&gt;: self.mk.merge_command(self.cm.get_text(log_path),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                                         *self.cm.collect(*ENTRYLIST)))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        t.start()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;merge_command&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(self, path, *args)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;string&quot;&gt;&quot;&quot;&quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        组合命令,Monkey使用&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        :param path:日志地址&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        :param args:Monkey命令中的其他参数&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        :return:None&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &quot;&quot;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        member = &lt;span class=&quot;string&quot;&gt;&#39; &#39;&lt;/span&gt;.join(args)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        command = &lt;span class=&quot;string&quot;&gt;&#39;adb shell monkey &amp;#123;&amp;#125; &amp;gt; &amp;#123;&amp;#125;&#39;&lt;/span&gt;.format(member, path)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.run(command)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;collect&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(self, *args)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;string&quot;&gt;&quot;&quot;&quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        收集参数中的元素,转换为列表返回&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        :param args:传入的参数&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        :return:list&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &quot;&quot;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        str_list = []&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; x &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; args:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            str_list.append(self.get_text(x))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; str_list&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;获取内存信息&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;run_meminfo&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(self, package_name)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.cf.read(&lt;span class=&quot;string&quot;&gt;&#39;monkey.conf&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.cf.set(&lt;span class=&quot;string&quot;&gt;&#39;monkey_check&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;mark&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;True&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.cf.write(open(&lt;span class=&quot;string&quot;&gt;&#39;monkey.conf&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;w&#39;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        status = self.cf.get(&lt;span class=&quot;string&quot;&gt;&#39;monkey_check&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;mark&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;with&lt;/span&gt; open(self.ad.get_dir(&lt;span class=&quot;string&quot;&gt;&#39;meminfo&#39;&lt;/span&gt;), &lt;span class=&quot;string&quot;&gt;&#39;w&#39;&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;as&lt;/span&gt; f:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; status == &lt;span class=&quot;string&quot;&gt;&#39;True&#39;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                f.write(self.ad.get_meminfo(package_name))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                f.write(&lt;span class=&quot;string&quot;&gt;&#39;\n&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                time.sleep(&lt;span class=&quot;number&quot;&gt;0.5&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                self.cf.read(&lt;span class=&quot;string&quot;&gt;&#39;monkey.conf&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; self.cf.get(&lt;span class=&quot;string&quot;&gt;&#39;monkey_check&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;mark&#39;&lt;/span&gt;) == &lt;span class=&quot;string&quot;&gt;&#39;False&#39;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;get_meminfo&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(self, package_name)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;string&quot;&gt;&quot;&quot;&quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		获取内存信息&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		:return:str, 内存信息&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&quot;&quot;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		newlist = []&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		f = os.popen(&lt;span class=&quot;string&quot;&gt;&#39;adb shell dumpsys meminfo &#39;&lt;/span&gt; + package_name)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; x &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; f.readlines():&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			newlist.append(x.strip())&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			mem_total = newlist[&lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;].split(&lt;span class=&quot;string&quot;&gt;&#39;   &#39;&lt;/span&gt;)[&lt;span class=&quot;number&quot;&gt;7&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			mem_used = newlist[&lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;].split(&lt;span class=&quot;string&quot;&gt;&#39;   &#39;&lt;/span&gt;)[&lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			mem_free = newlist[&lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;].split(&lt;span class=&quot;string&quot;&gt;&#39;   &#39;&lt;/span&gt;)[&lt;span class=&quot;number&quot;&gt;9&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;except&lt;/span&gt; Exception:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			mem_total = &lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			mem_used = &lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			mem_free = &lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		meminfo = &lt;span class=&quot;string&quot;&gt;&#39;&amp;#123;&amp;#125;,&amp;#123;&amp;#125;,&amp;#123;&amp;#125;&#39;&lt;/span&gt;.format(mem_total, mem_used, mem_free)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; meminfo&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;获取CPU信息&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;get_cpuinfo&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(self, package_name, url)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;string&quot;&gt;&quot;&quot;&quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		往cpuinfo文件夹中新写一个记录cpu信息的文件&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		:param package_name:测试包名&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		:param url:cpu文件的路径&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		:return:None&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&quot;&quot;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		self.cf.read(&lt;span class=&quot;string&quot;&gt;&#39;monkey.conf&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		self.cf.set(&lt;span class=&quot;string&quot;&gt;&#39;cpu_check&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;mark&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;True&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		self.cf.write(open(&lt;span class=&quot;string&quot;&gt;&#39;monkey.conf&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;w&#39;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;with&lt;/span&gt; open(self.get_dir(url), &lt;span class=&quot;string&quot;&gt;&#39;w&#39;&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;as&lt;/span&gt; f:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;True&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				a = os.popen(&lt;span class=&quot;string&quot;&gt;&#39;adb shell dumpsys cpuinfo | grep &#39;&lt;/span&gt; + package_name)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				cpuinfo_list = a.readlines()[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;].split(&lt;span class=&quot;string&quot;&gt;&#39; &#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; len(cpuinfo_list) == &lt;span class=&quot;number&quot;&gt;13&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;					cpu = [cpuinfo_list[&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;], cpuinfo_list[&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;], cpuinfo_list[&lt;span class=&quot;number&quot;&gt;7&lt;/span&gt;]]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;					cpuinfo = &lt;span class=&quot;string&quot;&gt;&#39;,&#39;&lt;/span&gt;.join(cpu)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;					f.write(cpuinfo)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;					f.write(&lt;span class=&quot;string&quot;&gt;&#39;\n&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;					time.sleep(&lt;span class=&quot;number&quot;&gt;0.5&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;					self.cf.read(&lt;span class=&quot;string&quot;&gt;&#39;monkey.conf&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;					&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; self.cf.get(&lt;span class=&quot;string&quot;&gt;&#39;cpu_check&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;mark&#39;&lt;/span&gt;) == &lt;span class=&quot;string&quot;&gt;&quot;False&quot;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;						&lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;当时写代码的时候比较随性，没有做统一的规划，写完后又不太想重新改，就这样放着吧。&lt;/p&gt;
&lt;h3 id=&quot;Web端&quot;&gt;&lt;a href=&quot;#Web端&quot; class=&quot;headerlink&quot; title=&quot;Web端&quot;&gt;&lt;/a&gt;Web端&lt;/h3&gt;&lt;p&gt;Web端的处理就相对比较顺畅了，我把收集内存信息和CPU信息都放在Tkinter了，因此在Web端只负责展示就行了。当然，最后我又突发奇想把收集流量信息放在Web端了，主要是流量信息不完全用走势图可以完全展示，因此就把这个功能放在Web端了。&lt;/p&gt;
&lt;h4 id=&quot;web端的几个页面&quot;&gt;&lt;a href=&quot;#web端的几个页面&quot; class=&quot;headerlink&quot; title=&quot;web端的几个页面&quot;&gt;&lt;/a&gt;web端的几个页面&lt;/h4&gt;&lt;p&gt;最初web端我是设计用来查看走势图的，因此有这么几个页面：主页、内存信息、CPU信息、流量信息，本来还有一个gxfinfo，但是不同Android手机展示出来的矩阵不同，统一处理的方案我还没想出来，暂时就搁浅了，等后续想出来后我再补充，在导航栏上我把打开GUI端的按钮集成了进来，也就是说以后我要使用就只要打开WEB端就行了，一站式解决方案。&lt;/p&gt;
&lt;h4 id=&quot;首页&quot;&gt;&lt;a href=&quot;#首页&quot; class=&quot;headerlink&quot; title=&quot;首页&quot;&gt;&lt;/a&gt;首页&lt;/h4&gt;&lt;p&gt;首页原来我是放置一些说明的，后来发现在首页也可以加一些功能，比如直接查看包名、查看Activity，查看手机上有多少app等简单实用的功能。这些功能自己从shell中去获取也不难，但是集成进来之后显得更简单易用了。&lt;/p&gt;
&lt;h5 id=&quot;获取当前包名和Activity&quot;&gt;&lt;a href=&quot;#获取当前包名和Activity&quot; class=&quot;headerlink&quot; title=&quot;获取当前包名和Activity&quot;&gt;&lt;/a&gt;获取当前包名和Activity&lt;/h5&gt;&lt;p&gt;获取的命令很简单，在*nux下的命令就是&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;adb shell dumpsys window windows | grep mFocusedApp&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;windows需要调整一下这个命令。获取之后做一些截取就可以拿到包名和Activity，把信息返回给前端即可，代码如下：&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;get_cur_pknm&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(self)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			f = os.popen(&lt;span class=&quot;string&quot;&gt;&#39;adb shell dumpsys window windows | grep mFocusedApp&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; x &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; f.readlines():&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				pknm = x.strip().split(&lt;span class=&quot;string&quot;&gt;&#39; &#39;&lt;/span&gt;)[&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			pk_info = pknm.split(&lt;span class=&quot;string&quot;&gt;&#39;/&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			pk_data = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				&lt;span class=&quot;string&quot;&gt;&#39;errmsg&#39;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&#39;查询成功&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				&lt;span class=&quot;string&quot;&gt;&#39;package_name&#39;&lt;/span&gt;: pk_info[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				&lt;span class=&quot;string&quot;&gt;&#39;avtivity_name&#39;&lt;/span&gt;: pk_info[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;except&lt;/span&gt; Exception &lt;span class=&quot;keyword&quot;&gt;as&lt;/span&gt; e:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			pk_data = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				&lt;span class=&quot;string&quot;&gt;&#39;errmsg&#39;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&#39;请确认设备正确连接或者是否有打开APP?&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; pk_data&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;前端接受代码：&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//获取当前包名和Activity&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    $(&lt;span class=&quot;string&quot;&gt;&quot;#get_cur_packagename&quot;&lt;/span&gt;).click(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        $.getJSON(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;string&quot;&gt;&#39;/datashow/get_cur_packagename/&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;data&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                $(&lt;span class=&quot;string&quot;&gt;&quot;#pkinfo&quot;&lt;/span&gt;).fadeIn(&lt;span class=&quot;string&quot;&gt;&#39;slow&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                $(&lt;span class=&quot;string&quot;&gt;&quot;#package_name&quot;&lt;/span&gt;).html(&lt;span class=&quot;string&quot;&gt;&#39;当前打开的包名为: &amp;lt;mark&amp;gt;&#39;&lt;/span&gt;+data[&lt;span class=&quot;string&quot;&gt;&#39;package_name&#39;&lt;/span&gt;]+&lt;span class=&quot;string&quot;&gt;&quot;&amp;lt;/mark&amp;gt;&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                $(&lt;span class=&quot;string&quot;&gt;&quot;#activity_name&quot;&lt;/span&gt;).html(&lt;span class=&quot;string&quot;&gt;&#39;当前打开的avtivity为: &amp;lt;mark&amp;gt;&#39;&lt;/span&gt;+data[&lt;span class=&quot;string&quot;&gt;&#39;avtivity_name&#39;&lt;/span&gt;]+&lt;span class=&quot;string&quot;&gt;&quot;&amp;lt;/mark&amp;gt;&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        )&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;获取所有第三方应用的命令是这个：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;adb shell pm list package -3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;依照上面的方式给代码就行了。效果就是这样：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xsgl3.com1.z0.glb.clouddn.com/D40ABEF3-5AFF-4107-8DE9-1219E92A724E.png&quot; alt=&quot;web端&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;内存cpu监控&quot;&gt;&lt;a href=&quot;#内存cpu监控&quot; class=&quot;headerlink&quot; title=&quot;内存cpu监控&quot;&gt;&lt;/a&gt;内存cpu监控&lt;/h3&gt;&lt;p&gt;这两部分的内容类似，都是作为一个展示的页面来处理，就需要后端给数据，数据收集在GUi端做处理，那么前端就需要发Ajax请求到后端获取数据，获取数据后调用Echarts进行绘图。前端的代码如下：&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//内存信息获取&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    $(&lt;span class=&quot;string&quot;&gt;&#39;#mem_query&#39;&lt;/span&gt;).click(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; filename = $(&lt;span class=&quot;string&quot;&gt;&quot;#selquery&quot;&lt;/span&gt;).val();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; myChart = echarts.init(&lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.getElementById(&lt;span class=&quot;string&quot;&gt;&#39;main&#39;&lt;/span&gt;), &lt;span class=&quot;string&quot;&gt;&#39;dark&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        $.get(&lt;span class=&quot;string&quot;&gt;&#39;/datashow/getmemdata/&#39;&lt;/span&gt; + filename).done(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;data&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            myChart.hideLoading();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            myChart.setOption(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                title: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    text: &lt;span class=&quot;string&quot;&gt;&#39;内存监控信息&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                tooltip: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    trigger: &lt;span class=&quot;string&quot;&gt;&#39;axis&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                legend: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    data: [&lt;span class=&quot;string&quot;&gt;&#39;内存总体使用量&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;内存剩余可用量&#39;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                toolbox: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    feature: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        saveAsImage: &amp;#123;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                grid: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    left: &lt;span class=&quot;string&quot;&gt;&#39;3%&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    right: &lt;span class=&quot;string&quot;&gt;&#39;4%&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    bottom: &lt;span class=&quot;string&quot;&gt;&#39;3%&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    containLabel: &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                xAxis: [&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        type: &lt;span class=&quot;string&quot;&gt;&#39;category&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        boundaryGap: &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        data: []&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                ],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                yAxis: [&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        type: &lt;span class=&quot;string&quot;&gt;&#39;value&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                ],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                series: [&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        name: &lt;span class=&quot;string&quot;&gt;&#39;内存剩余可用量&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        type: &lt;span class=&quot;string&quot;&gt;&#39;line&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        areaStyle: &amp;#123;normal: &amp;#123;&amp;#125;&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        data: data[&lt;span class=&quot;string&quot;&gt;&#39;user_data&#39;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        name: &lt;span class=&quot;string&quot;&gt;&#39;内存总体使用量&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        type: &lt;span class=&quot;string&quot;&gt;&#39;line&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        label: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                            normal: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                show: &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                position: &lt;span class=&quot;string&quot;&gt;&#39;top&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        opacity: &lt;span class=&quot;string&quot;&gt;&#39;0.1&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        areaStyle: &amp;#123;normal: &amp;#123;opacity: &lt;span class=&quot;string&quot;&gt;&#39;0.1&#39;&lt;/span&gt;&amp;#125;&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        data: data[&lt;span class=&quot;string&quot;&gt;&#39;total_data&#39;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                ]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;后端数据我们收集的时候是存在一个一个的TXT文本中，因此需要做这么几件事。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;在初始化页面的时候，获取所有的txt文件名，在前端生成一个下拉框给用户选择。&lt;/li&gt;
&lt;li&gt;选择对应的文件查看后，发送数据给前端绘图。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;因此我是这样设计的，在前端页面初始化的时候，发Ajax请求获取文件名来生成下拉框，代码如下：&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$.ajax(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            url: &lt;span class=&quot;string&quot;&gt;&#39;/datashow/getdirlist/meminfo&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            success: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;data&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; arr = data[&lt;span class=&quot;string&quot;&gt;&#39;data&#39;&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; select = $(&lt;span class=&quot;string&quot;&gt;&quot;&amp;lt;select id=&#39;selquery&#39; class=&#39;form-control&#39;&amp;gt;&amp;lt;/select&amp;gt;&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; arr.length; i++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    select = select.append(&lt;span class=&quot;string&quot;&gt;&quot;&amp;lt;option value=&#39;&quot;&lt;/span&gt; + arr[i] + &lt;span class=&quot;string&quot;&gt;&quot;&#39;&amp;gt;&quot;&lt;/span&gt; + arr[i] + &lt;span class=&quot;string&quot;&gt;&quot;&amp;lt;/option&amp;gt;&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                $(&lt;span class=&quot;string&quot;&gt;&quot;#selection&quot;&lt;/span&gt;).append(select)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;后端获取所有文件名后返回给前端，这里我会把第一个文件剔除出返回的列表，第一个文件名是我初始化项目结构的时候给的文件，并没有实际的数据，之后按倒叙返回给前端。代码如下：&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;getDirList&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(request, cate)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	rst = []&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	url = &lt;span class=&quot;string&quot;&gt;&#39;&amp;#123;&amp;#125;/device_info/&amp;#123;&amp;#125;&#39;&lt;/span&gt;.format(os.getcwd(), cate)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	old_rst = os.listdir(url)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	old_rst.pop(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; x &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; old_rst:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		rst.append(x.split(&lt;span class=&quot;string&quot;&gt;&#39;.&#39;&lt;/span&gt;)[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	rst_data = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;string&quot;&gt;&#39;status&#39;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;200&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;string&quot;&gt;&#39;data&#39;&lt;/span&gt;: rst[::&lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; JsonResponse(rst_data)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;CPU信息也是同理获取，代码就不多贴了。&lt;/p&gt;
&lt;h3 id=&quot;流量监控&quot;&gt;&lt;a href=&quot;#流量监控&quot; class=&quot;headerlink&quot; title=&quot;流量监控&quot;&gt;&lt;/a&gt;流量监控&lt;/h3&gt;&lt;p&gt;流量监控的命令是由两部分组成，一个要取到应用的PID，然后通过这个PID去取相应的记录文件，两部分的代码如下：&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;get_pid&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(self, package_name)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;string&quot;&gt;&quot;&quot;&quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		获取pid&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		:param package_name:包名&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		:return: str, pid&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&quot;&quot;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		pid = []&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		f = os.popen(&lt;span class=&quot;string&quot;&gt;&#39;adb shell ps | grep &#39;&lt;/span&gt; + package_name)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; x &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; f.readlines():&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			pid_list = x.split(&lt;span class=&quot;string&quot;&gt;&#39; &#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; y &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; pid_list:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; y.strip() == package_name:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;					&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; z &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; x.split(&lt;span class=&quot;string&quot;&gt;&#39; &#39;&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;						&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; z:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;							pid.append(z)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		rst = pid[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; rst&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;write_flow&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(self, package_name, url)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		self.cf.read(&lt;span class=&quot;string&quot;&gt;&#39;monkey.conf&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		self.cf.set(&lt;span class=&quot;string&quot;&gt;&#39;flow_mark&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;mark&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;True&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		self.cf.write(open(&lt;span class=&quot;string&quot;&gt;&#39;monkey.conf&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;w&#39;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;with&lt;/span&gt; open(self.get_dir(url), &lt;span class=&quot;string&quot;&gt;&#39;w&#39;&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;as&lt;/span&gt; fn:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;True&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				rst_list = []&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				f = os.popen(&lt;span class=&quot;string&quot;&gt;&#39;adb shell cat /proc/&amp;#123;&amp;#125;/net/dev | grep wlan0&#39;&lt;/span&gt;.format(self.get_pid(package_name)))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; x &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; f.readlines():&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;					&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; y &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; x.split(&lt;span class=&quot;string&quot;&gt;&#39; &#39;&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;						&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; y:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;							rst_list.append(y)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				up = rst_list[&lt;span class=&quot;number&quot;&gt;9&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				down = rst_list[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				flowInfo = &lt;span class=&quot;string&quot;&gt;&#39;&amp;#123;&amp;#125;,&amp;#123;&amp;#125;&#39;&lt;/span&gt;.format(down, up)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				fn.write(flowInfo)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				fn.write(&lt;span class=&quot;string&quot;&gt;&#39;\n&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				&lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; flowInfo&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				time.sleep(&lt;span class=&quot;number&quot;&gt;0.5&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				self.cf.read(&lt;span class=&quot;string&quot;&gt;&#39;monkey.conf&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; self.cf.get(&lt;span class=&quot;string&quot;&gt;&#39;flow_mark&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;mark&#39;&lt;/span&gt;) == &lt;span class=&quot;string&quot;&gt;&quot;False&quot;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;					&lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;流量的功能需要记录执行的时间和上行下行流量，因此在开始记录流量的时候，我会在配置文件写入一个时间戳，和已发生的上下行流量，停止的时候再记录一次信息，两个信息对减的结果返回给前端，前端就能展示时间和消耗的流量了。代码如下：&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;get_flow&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(self, package_name, mark)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;string&quot;&gt;&quot;&quot;&quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		获取流量信息&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		:param package_name:包名&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		:param mark:获取流量的标记&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		:return:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&quot;&quot;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; mark == &lt;span class=&quot;string&quot;&gt;&quot;start&quot;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			rst_list = []&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			f = os.popen(&lt;span class=&quot;string&quot;&gt;&#39;adb shell cat /proc/&amp;#123;&amp;#125;/net/dev | grep wlan0&#39;&lt;/span&gt;.format(self.get_pid(package_name)))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; x &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; f.readlines():&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; y &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; x.split(&lt;span class=&quot;string&quot;&gt;&#39; &#39;&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;					&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; y:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;						rst_list.append(y)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			rst = int(rst_list[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;]) + int(rst_list[&lt;span class=&quot;number&quot;&gt;9&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			conf_data = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				&lt;span class=&quot;string&quot;&gt;&#39;total&#39;&lt;/span&gt;: str(rst),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				&lt;span class=&quot;string&quot;&gt;&#39;flowup&#39;&lt;/span&gt;: str(rst_list[&lt;span class=&quot;number&quot;&gt;9&lt;/span&gt;]),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				&lt;span class=&quot;string&quot;&gt;&#39;flowdown&#39;&lt;/span&gt;: str(rst_list[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;]),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				&lt;span class=&quot;string&quot;&gt;&#39;timestart&#39;&lt;/span&gt;: str(time.time())&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			self.cf.read(&lt;span class=&quot;string&quot;&gt;&#39;monkey.conf&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			self.cf.set(&lt;span class=&quot;string&quot;&gt;&#39;flow_mark&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;flow_total&#39;&lt;/span&gt;, conf_data[&lt;span class=&quot;string&quot;&gt;&#39;total&#39;&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			self.cf.set(&lt;span class=&quot;string&quot;&gt;&#39;flow_mark&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;flow_up&#39;&lt;/span&gt;, conf_data[&lt;span class=&quot;string&quot;&gt;&#39;flowup&#39;&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			self.cf.set(&lt;span class=&quot;string&quot;&gt;&#39;flow_mark&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;flow_down&#39;&lt;/span&gt;, conf_data[&lt;span class=&quot;string&quot;&gt;&#39;flowdown&#39;&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			self.cf.set(&lt;span class=&quot;string&quot;&gt;&#39;flow_mark&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;time_start&#39;&lt;/span&gt;, conf_data[&lt;span class=&quot;string&quot;&gt;&#39;timestart&#39;&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			self.cf.write(open(&lt;span class=&quot;string&quot;&gt;&#39;monkey.conf&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;w&#39;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			rst_list = []&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			f = os.popen(&lt;span class=&quot;string&quot;&gt;&#39;adb shell cat /proc/&amp;#123;&amp;#125;/net/dev | grep wlan0&#39;&lt;/span&gt;.format(self.get_pid(package_name)))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; x &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; f.readlines():&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; y &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; x.split(&lt;span class=&quot;string&quot;&gt;&#39; &#39;&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;					&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; y:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;						rst_list.append(y)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			rst = int(rst_list[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;]) + int(rst_list[&lt;span class=&quot;number&quot;&gt;9&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			end_data = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				&lt;span class=&quot;string&quot;&gt;&#39;total&#39;&lt;/span&gt;: str(rst),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				&lt;span class=&quot;string&quot;&gt;&#39;flowup&#39;&lt;/span&gt;: str(rst_list[&lt;span class=&quot;number&quot;&gt;9&lt;/span&gt;]),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				&lt;span class=&quot;string&quot;&gt;&#39;flowdown&#39;&lt;/span&gt;: str(rst_list[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;]),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				&lt;span class=&quot;string&quot;&gt;&#39;timend&#39;&lt;/span&gt;: str(time.time())&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			self.cf.read(&lt;span class=&quot;string&quot;&gt;&#39;monkey.conf&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			oldTotal = self.cf.get(&lt;span class=&quot;string&quot;&gt;&#39;flow_mark&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;flow_total&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			oldUp = self.cf.get(&lt;span class=&quot;string&quot;&gt;&#39;flow_mark&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;flow_up&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			oldDown = self.cf.get(&lt;span class=&quot;string&quot;&gt;&#39;flow_mark&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;flow_down&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			oldTime = self.cf.get(&lt;span class=&quot;string&quot;&gt;&#39;flow_mark&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;time_start&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			rst_data = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				&lt;span class=&quot;string&quot;&gt;&#39;total&#39;&lt;/span&gt;: str(int(end_data[&lt;span class=&quot;string&quot;&gt;&#39;total&#39;&lt;/span&gt;]) - int(oldTotal)),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				&lt;span class=&quot;string&quot;&gt;&#39;up&#39;&lt;/span&gt;: str(int(end_data[&lt;span class=&quot;string&quot;&gt;&#39;flowup&#39;&lt;/span&gt;]) - int(oldUp)),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				&lt;span class=&quot;string&quot;&gt;&#39;down&#39;&lt;/span&gt;: str(int(end_data[&lt;span class=&quot;string&quot;&gt;&#39;flowdown&#39;&lt;/span&gt;]) - int(oldDown)),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				&lt;span class=&quot;string&quot;&gt;&#39;time&#39;&lt;/span&gt;: str(float(end_data[&lt;span class=&quot;string&quot;&gt;&#39;timend&#39;&lt;/span&gt;]) - float(oldTime))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; rst_data&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;因为处理的东西比较多，所以我也贴一下前端的代码。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$(&lt;span class=&quot;string&quot;&gt;&quot;#getflow&quot;&lt;/span&gt;).click(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; val = $(&lt;span class=&quot;string&quot;&gt;&quot;#getflow&quot;&lt;/span&gt;).text();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; myDate = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Date&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; package_name = $(&lt;span class=&quot;string&quot;&gt;&quot;#package&quot;&lt;/span&gt;).val();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (val == &lt;span class=&quot;string&quot;&gt;&#39;点击开始测试&#39;&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            $(&lt;span class=&quot;string&quot;&gt;&quot;#getflow&quot;&lt;/span&gt;).removeClass().addClass(&lt;span class=&quot;string&quot;&gt;&#39;btn btn-danger&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            $.get(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;string&quot;&gt;&#39;/datashow/testflow/&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;#123;mark: &lt;span class=&quot;string&quot;&gt;&#39;start&#39;&lt;/span&gt;, package: package_name&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            $(&lt;span class=&quot;string&quot;&gt;&quot;#getflow&quot;&lt;/span&gt;).text(&lt;span class=&quot;string&quot;&gt;&#39;点击停止测试&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            $(&lt;span class=&quot;string&quot;&gt;&quot;#start&quot;&lt;/span&gt;).text(&lt;span class=&quot;string&quot;&gt;&#39;开始测试时间为: &#39;&lt;/span&gt; + myDate.toLocaleTimeString());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            $(&lt;span class=&quot;string&quot;&gt;&quot;#end&quot;&lt;/span&gt;).text(&lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            $(&lt;span class=&quot;string&quot;&gt;&quot;#result&quot;&lt;/span&gt;).html(&lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            $(&lt;span class=&quot;string&quot;&gt;&quot;#getflow&quot;&lt;/span&gt;).removeClass().addClass(&lt;span class=&quot;string&quot;&gt;&#39;btn btn-default&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            $(&lt;span class=&quot;string&quot;&gt;&quot;#end&quot;&lt;/span&gt;).text(&lt;span class=&quot;string&quot;&gt;&#39;结束测试时间为: &#39;&lt;/span&gt; + myDate.toLocaleTimeString());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            $(&lt;span class=&quot;string&quot;&gt;&quot;#getflow&quot;&lt;/span&gt;).text(&lt;span class=&quot;string&quot;&gt;&#39;点击开始测试&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            $.get(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;string&quot;&gt;&#39;/datashow/testflow/&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;#123;mark: &lt;span class=&quot;string&quot;&gt;&#39;end&#39;&lt;/span&gt;, package: package_name&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;data&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    $(&lt;span class=&quot;string&quot;&gt;&quot;#result&quot;&lt;/span&gt;).html(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &lt;span class=&quot;string&quot;&gt;&quot;测试结果:&quot;&lt;/span&gt; +&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &lt;span class=&quot;string&quot;&gt;&quot;&amp;lt;hr&amp;gt;&quot;&lt;/span&gt; +&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &lt;span class=&quot;string&quot;&gt;&quot;测试一共耗时:&quot;&lt;/span&gt; + data[&lt;span class=&quot;string&quot;&gt;&#39;time&#39;&lt;/span&gt;] + &lt;span class=&quot;string&quot;&gt;&quot;秒&quot;&lt;/span&gt; +&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &lt;span class=&quot;string&quot;&gt;&quot;&amp;lt;hr&amp;gt;&quot;&lt;/span&gt; +&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &lt;span class=&quot;string&quot;&gt;&quot;总计流量消耗: &quot;&lt;/span&gt; + data[&lt;span class=&quot;string&quot;&gt;&#39;total&#39;&lt;/span&gt;] + &lt;span class=&quot;string&quot;&gt;&quot;byte&quot;&lt;/span&gt; +&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &lt;span class=&quot;string&quot;&gt;&quot;&amp;lt;hr&amp;gt;&quot;&lt;/span&gt; +&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &lt;span class=&quot;string&quot;&gt;&quot;上行流量: &quot;&lt;/span&gt; + data[&lt;span class=&quot;string&quot;&gt;&#39;up&#39;&lt;/span&gt;] + &lt;span class=&quot;string&quot;&gt;&quot;byte&quot;&lt;/span&gt; +&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &lt;span class=&quot;string&quot;&gt;&quot;&amp;lt;hr&amp;gt;&quot;&lt;/span&gt; +&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &lt;span class=&quot;string&quot;&gt;&quot;下行流量: &quot;&lt;/span&gt; + data[&lt;span class=&quot;string&quot;&gt;&#39;down&#39;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    )&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            $(&lt;span class=&quot;string&quot;&gt;&quot;#selection&quot;&lt;/span&gt;).html(&lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            $.ajax(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                url: &lt;span class=&quot;string&quot;&gt;&#39;/datashow/getdirlist/flowinfo&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                success: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;data&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; arr = data[&lt;span class=&quot;string&quot;&gt;&#39;data&#39;&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; select = $(&lt;span class=&quot;string&quot;&gt;&quot;&amp;lt;select id=&#39;selquery&#39; class=&#39;form-control&#39;&amp;gt;&amp;lt;/select&amp;gt;&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; arr.length; i++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        select = select.append(&lt;span class=&quot;string&quot;&gt;&quot;&amp;lt;option value=&#39;&quot;&lt;/span&gt; + arr[i] + &lt;span class=&quot;string&quot;&gt;&quot;&#39;&amp;gt;&quot;&lt;/span&gt; + arr[i] + &lt;span class=&quot;string&quot;&gt;&quot;&amp;lt;/option&amp;gt;&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    $(&lt;span class=&quot;string&quot;&gt;&quot;#selection&quot;&lt;/span&gt;).append(select)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;最终的效果图就是这样：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xsgl3.com1.z0.glb.clouddn.com/02C218C4-5922-439C-A63B-10BC5661C5F4.png&quot; alt=&quot;流量监控&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;结语&quot;&gt;&lt;a href=&quot;#结语&quot; class=&quot;headerlink&quot; title=&quot;结语&quot;&gt;&lt;/a&gt;结语&lt;/h2&gt;&lt;p&gt;整个开发周期前后大概花了两周时间，这些知识熟的朋友应该可以更快，在使用前端知识的时候，我基本上都是靠w3cschool来解决，大概的概念我懂，但是具体的编码还是需要去copy。在整个项目写完后，我感觉我对这块的了解也更加深入了，重复造轮子的好处就是可以深入理解这些东西的来源，比如adb的使用，Android的一些知识。真正在工作当中使用的话，当然还是直接使用一些大公司的产品比较好，他们的东西比较成熟，精准度从一定程度上来说也比我们自己写的质量会高一些。&lt;/p&gt;
&lt;p&gt;最后的最后，代码放在&lt;a href=&quot;https://github.com/diandianhanbin/AndroidTools&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Github&lt;/a&gt;，有兴趣的朋友可以自行翻阅。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;这段时间在Testerhome上看了一些有关性能测试的帖子，看别人的东西，始终是别人的，只有自己写一遍才能体会其中的细节，虽然说不要重复造轮子，但是这种基础的东西，造一次轮子能够学会很多东西，最近看的东西也比较多，拿来实战一下也未尝不可。&lt;br&gt;
    
    </summary>
    
      <category term="AboutTest" scheme="http://www.wengyb.com/categories/AboutTest/"/>
    
    
      <category term="Appium" scheme="http://www.wengyb.com/tags/Appium/"/>
    
      <category term="测试" scheme="http://www.wengyb.com/tags/%E6%B5%8B%E8%AF%95/"/>
    
      <category term="Python" scheme="http://www.wengyb.com/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>易中天与《易中天中华史》</title>
    <link href="http://www.wengyb.com/2016/04/10/%E6%98%93%E4%B8%AD%E5%A4%A9%E4%B8%8E%E3%80%8A%E6%98%93%E4%B8%AD%E5%A4%A9%E4%B8%AD%E5%8D%8E%E5%8F%B2%E3%80%8B/"/>
    <id>http://www.wengyb.com/2016/04/10/易中天与《易中天中华史》/</id>
    <published>2016-04-09T17:15:31.000Z</published>
    <updated>2016-04-09T17:18:02.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;易中天其人&quot;&gt;&lt;a href=&quot;#易中天其人&quot; class=&quot;headerlink&quot; title=&quot;易中天其人&quot;&gt;&lt;/a&gt;易中天其人&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;易中天（1947年2月8日－），湖南长沙人，中国知名作家、学者、教育家。&lt;/p&gt;
&lt;p&gt;1981年毕业于武汉大学，获文学硕士学位并留校任教。后在厦门大学中文系任教 。2015年4月声明已经退休。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;br&gt;易中天长期从事文学、艺术、美学、心理学、人类学、历史学等研究，著有《〈文心雕龙〉美学思想论稿》、《艺术人类学》等著作。2005年央视《百家讲坛》“开坛论道”的学者，2006年在央视“百家讲坛”主讲《汉代风云人物》、《易中天品三国》。2008年主讲《先秦诸子百家争鸣》。  2013年宣布写作36卷本《易中天中华史》，2013年12月5日，荣获第八届作家富豪榜最佳历史书。&lt;br&gt;引自百度百科&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;初识易中天&quot;&gt;&lt;a href=&quot;#初识易中天&quot; class=&quot;headerlink&quot; title=&quot;初识易中天&quot;&gt;&lt;/a&gt;初识易中天&lt;/h2&gt;&lt;p&gt;最初知道易中天先生，是在央视《百家讲坛》上看到了品三国。&lt;/p&gt;
&lt;p&gt;男生都喜欢三国这段历史，但是对三国的认知大多限于《三国演义》和一些三国系列的游戏。当时听到了易中天先生的品三国系列，让我从另外一个角度重新审视三国，让本来就喜欢历史的我获取了一个新的历史观，原来我觉得历史就是看故事，看了品三国之后，发现历史不仅仅只有故事，还有很多可以了解和研究的方向。&lt;/p&gt;
&lt;p&gt;05年正值高中，每天课业都比较重，基本上没时间完整的看完品三国，于是就买了品三国书籍来看，看完之后特别受教，也特别喜欢易中天先生的写作风格和历史观（虽然有些观点我并不怎么赞同），之后接连阅读了易中天先生的其他书籍，包括《帝国的惆怅》、《帝国的终结》、《美国宪法的诞生和我们的反思》。&lt;/p&gt;
&lt;p&gt;再之后由于高三，虽然我对念书不怎么感冒，毕竟高考是人生的一大考，还是要花很多时间准备的，慢慢的就没有继续接触易中天先生的其他书籍。&lt;/p&gt;
&lt;h2 id=&quot;再见易中天&quot;&gt;&lt;a href=&quot;#再见易中天&quot; class=&quot;headerlink&quot; title=&quot;再见易中天&quot;&gt;&lt;/a&gt;再见易中天&lt;/h2&gt;&lt;p&gt;再次看到易中天先生，是在央视的《开讲啦》，说实话，我一直觉得央视最好的节目就是《百家讲坛》和《开讲啦》，当然《宇宙联播》一定是第一节目。&lt;/p&gt;
&lt;p&gt;一个将近70岁的老头在电视上讲述他的过去，看起来也挺逗的，在最后他说他现在退休了，准备写出36卷的《易中天中华史》，即使2个月的时间能写完一本也需要3年的时间。不得不说老先生很值得我敬佩。&lt;/p&gt;
&lt;h2 id=&quot;《易中天中华史》&quot;&gt;&lt;a href=&quot;#《易中天中华史》&quot; class=&quot;headerlink&quot; title=&quot;《易中天中华史》&quot;&gt;&lt;/a&gt;《易中天中华史》&lt;/h2&gt;&lt;p&gt;截止到今天，一共出了十三卷，我看了其中的三卷，分别是《从春秋到战国》、《秦并天下》和《隋唐定局》，如果能等到36卷完结的那天，我一定会全套购买来阅读。读了3本，再加上之前的理解，慢慢的整理了一些自己的思想。&lt;/p&gt;
&lt;h3 id=&quot;适合人群&quot;&gt;&lt;a href=&quot;#适合人群&quot; class=&quot;headerlink&quot; title=&quot;适合人群&quot;&gt;&lt;/a&gt;适合人群&lt;/h3&gt;&lt;p&gt;每个人的历史观是不一样的，取决于每个人对历史的理解，比如一个历史知识比较渊博的人，那么他会比较偏爱看一些史料的讲解，那些东西更接近真正的历史，就像一位资深程序员，那么他就会偏爱看一些语言源码实现的分析，程序架构设计等内容。而历史知识比较匮乏而又想了解历史，学习历史、那么这套书就会很适合你，相对诙谐的笔法、独到的见解，对初学者非常的友好。&lt;/p&gt;
&lt;h3 id=&quot;轻松的历史&quot;&gt;&lt;a href=&quot;#轻松的历史&quot; class=&quot;headerlink&quot; title=&quot;轻松的历史&quot;&gt;&lt;/a&gt;轻松的历史&lt;/h3&gt;&lt;p&gt;书的风格几乎完整的延续了品三国。读起来相对友好，小故事带动制度、文化的知识。再通过一段一段的联系，不断的层层递进，很轻松的就能够理清逻辑关系，读起来不至于一头雾水。&lt;/p&gt;
&lt;h3 id=&quot;节点的历史&quot;&gt;&lt;a href=&quot;#节点的历史&quot; class=&quot;headerlink&quot; title=&quot;节点的历史&quot;&gt;&lt;/a&gt;节点的历史&lt;/h3&gt;&lt;p&gt;整部中华史从介绍来看，大体是按一个一个的时间节点来分的。我国的历史书基本上分为两种，一种是编年体史书，比如《春秋》、《资治通鉴》等。另一种是纪传体史书，比如《史记》、《二十四史》等。而这套易中天中华史，基本上是以时间为主线，在每个时间节点上以制度、文化为中心点，展开来讲述。这种写法让整部中华史的脉络非常清晰，易于理解。&lt;/p&gt;
&lt;h3 id=&quot;多元化的社会&quot;&gt;&lt;a href=&quot;#多元化的社会&quot; class=&quot;headerlink&quot; title=&quot;多元化的社会&quot;&gt;&lt;/a&gt;多元化的社会&lt;/h3&gt;&lt;p&gt;天下大势，合久必分，分久必合，在这些分分合合中，慢慢的由单一的社会发展为多元化的社会。&lt;/p&gt;
&lt;p&gt;夏商西周的统一后东周社会分崩离析、造就了春秋战国时期思想的百家争鸣，各国的战争格局，慢慢的促进了民族的融合，包括政治、包括思想、包括文化。在不断的战争中不断的融合。等到秦汉统一的时候，使得中国空前强大。再后来的魏晋南北朝，慢慢接受了一些少数民族的文化，比如羯、白匈奴、丁零、铁弗、卢水胡、鲜卑等民族的文化慢慢的融入了中华文明，于是造就了世界级的隋唐时代。&lt;/p&gt;
&lt;h3 id=&quot;权利的游戏&quot;&gt;&lt;a href=&quot;#权利的游戏&quot; class=&quot;headerlink&quot; title=&quot;权利的游戏&quot;&gt;&lt;/a&gt;权利的游戏&lt;/h3&gt;&lt;p&gt;纵观中国历史，就是一部权利的游戏，跟着易中天先生一点一点的了解帝制的演变，可以发现真的是非常非常非常的有意思，从最初的禅让制到家天下的过度，皇帝不断的集权，这才是可研究的大道，深入研究这些演变，整个权利演变的大局观的培养，能够很好的应用到现代社会，比如职场规划，从宏观上为自己规划一条道路，比研究那些职场小伎俩靠谱的多。&lt;/p&gt;
&lt;p&gt;皇帝从宰相手中中夺权、从将军手中夺权。随着皇权的不断集中，在明清时代达到了中央集权的巅峰。《易中天中华史》给我们勾勒出一幅完整的演变图。&lt;/p&gt;
&lt;h2 id=&quot;坚持的力量&quot;&gt;&lt;a href=&quot;#坚持的力量&quot; class=&quot;headerlink&quot; title=&quot;坚持的力量&quot;&gt;&lt;/a&gt;坚持的力量&lt;/h2&gt;&lt;p&gt;说实话，坚持几年持之以恒的做一件事，真的是非常非常难，但是很多成功又是离不开坚持的。&lt;/p&gt;
&lt;p&gt;曾经我坚持写日记，写了5本满满的日记本，大概一千多篇吧。随着杂事越来越多，终于是坚持不下去了，每天处理了很多杂事之后，还要静下心来写日记，从我自己的体验来看，即使是随便写写，一篇日记三四百字，也是非常伤脑的。&lt;/p&gt;
&lt;p&gt;之所以博客为什么不火而微博却火了这么久，其中原因之一就是因为世界上绝大多数人是坚持不下来一直写东西，内容驱动的产品缺乏内容，必然是无法火的，为什么内容产生不多，一是可写的东西不多，二是在当时并没有很健全的体制来保护原创和内容变现，最最关键的一个原因就是：&lt;strong&gt;坚持真的很难&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;祝愿易中天先生能够实现这个伟大的愿望吧！&lt;/p&gt;
&lt;h2 id=&quot;最后的最后&quot;&gt;&lt;a href=&quot;#最后的最后&quot; class=&quot;headerlink&quot; title=&quot;最后的最后&quot;&gt;&lt;/a&gt;最后的最后&lt;/h2&gt;&lt;p&gt;给自己一个flag吧，&lt;strong&gt;每个月写一篇作文&lt;/strong&gt;，不求文章写的多好，但求再次感知坚持的力量。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;易中天其人&quot;&gt;&lt;a href=&quot;#易中天其人&quot; class=&quot;headerlink&quot; title=&quot;易中天其人&quot;&gt;&lt;/a&gt;易中天其人&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;易中天（1947年2月8日－），湖南长沙人，中国知名作家、学者、教育家。&lt;/p&gt;
&lt;p&gt;1981年毕业于武汉大学，获文学硕士学位并留校任教。后在厦门大学中文系任教 。2015年4月声明已经退休。&lt;br&gt;
    
    </summary>
    
      <category term="MyTalk" scheme="http://www.wengyb.com/categories/MyTalk/"/>
    
    
      <category term="个人杂谈" scheme="http://www.wengyb.com/tags/%E4%B8%AA%E4%BA%BA%E6%9D%82%E8%B0%88/"/>
    
  </entry>
  
  <entry>
    <title>Python开发测试工具（二）—Monkey工具的优化</title>
    <link href="http://www.wengyb.com/2016/04/06/Python%E5%BC%80%E5%8F%91%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7%EF%BC%88%E4%BA%8C%EF%BC%89%E2%80%94Monkey%E5%B7%A5%E5%85%B7%E7%9A%84%E4%BC%98%E5%8C%96/"/>
    <id>http://www.wengyb.com/2016/04/06/Python开发测试工具（二）—Monkey工具的优化/</id>
    <published>2016-04-06T14:19:11.000Z</published>
    <updated>2016-04-06T14:22:24.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;上次写的Monkey工具虽然是可以运行，不过用起来非常烂，可以说非常非常的烂，点了执行Monkey程序就会卡死，现在我们来解决这个问题。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;多线程处理&quot;&gt;&lt;a href=&quot;#多线程处理&quot; class=&quot;headerlink&quot; title=&quot;多线程处理&quot;&gt;&lt;/a&gt;多线程处理&lt;/h2&gt;&lt;p&gt;上篇文章末尾提到可以使用多线程或者多进程来处理，其实我心里也没有底。今天算是稍微了解了一下，百度之后发现提的比较多的就是线程，我就先尝试了多线程的处理方式，不过不管用多线程还是多进程，都必须对原来的代码进行改写了，原来的代码编写方式是使用最基本的方式，连函数都没有处理，这次改动就一起改了，新生成一个AndroidTools类，然后在init函数中把原来界面的代码copy进去，这样实例化这个类的时候，就会画出界面了。&lt;/p&gt;
&lt;h3 id=&quot;给按钮加一个线程&quot;&gt;&lt;a href=&quot;#给按钮加一个线程&quot; class=&quot;headerlink&quot; title=&quot;给按钮加一个线程&quot;&gt;&lt;/a&gt;给按钮加一个线程&lt;/h3&gt;&lt;p&gt;其实整个调用方式是在AndroidTools类中加一个函数，然后把执行Monkey按钮的命令封装到这个函数里，在这个函数中给这个命令分配一个线程&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;run_monkey&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(self)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        t = threading.Thread(target=&lt;span class=&quot;keyword&quot;&gt;lambda&lt;/span&gt;: self.mk.merge_command(self.cm.get_text(log_path), *self.cm.collect(*ENTRYLIST)))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        t.start()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这样开了一个线程给按钮，运行之后确实解决了界面卡顿的问题，不过新的问题就来了，这个进程没办法停止。即使我点击结束Monkey，从日志来看命令也确实执行了，但是这个线程就是停不下来。这又是一个巨大的坑。&lt;/p&gt;
&lt;p&gt;当然，我尝试过很多种方式处理这个问题。比如设置一个全局变量来监控，点击停止后先结束线程，再执行结束Monkey的命令。不过结果都是很失败，不是线程阻塞就是线程阻塞。&lt;/p&gt;
&lt;p&gt;网上停止线程的方式基本都是通过一个死循环来监控变量，结束父线程的方式来结束子线程。对线程的了解还不是很深入，实施了几次都不成功。&lt;/p&gt;
&lt;p&gt;官方也没有提供停止线程的方法，据说是不提倡手动停止线程。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt; 按我的理解，线程在执行Monkeky，这时我通过命令停止Monkey，那么这个线程就应该自动结束了。不知道为什么执行起来并不是那么回事&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;如果有朋友知道，请留言告诉我。&lt;/p&gt;
&lt;h2 id=&quot;多进程的处理&quot;&gt;&lt;a href=&quot;#多进程的处理&quot; class=&quot;headerlink&quot; title=&quot;多进程的处理&quot;&gt;&lt;/a&gt;多进程的处理&lt;/h2&gt;&lt;p&gt;大概折腾了一整个下午吧，实在是有点心烦，我就换了一个东西写，在写爬虫的时候用到了多进程，我就在想如果把我的思想换一下，用多进程来处理这些按钮事件，是不是也很好呢？&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;按我的理解，线程在执行Monkeky，这时我通过命令停止Monkey，那么这个线程就应该自动结束了。不知道为什么执行起来并不是那么回事&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;如果把这个理解放到进程上呢？&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt; def run_monkey(self):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        t = multiprocessing.Process(target=lambda: 		&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.mk.merge_command(self.cm.get_text(log_path),  *self.cm.collect(*ENTRYLIST)))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        t.start()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;def stop_monkey(self):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.ad.stop_monkey(status)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这样跑起来，果然是成功了。&lt;/p&gt;
&lt;h2 id=&quot;最后&quot;&gt;&lt;a href=&quot;#最后&quot; class=&quot;headerlink&quot; title=&quot;最后&quot;&gt;&lt;/a&gt;最后&lt;/h2&gt;&lt;p&gt;写代码有时候是这样，突然的灵光一闪，几分钟就可能解决一个大问题，今天这个线程的问题我整整google了一天，结果突然一个想法，换成进程，就成功了。&lt;/p&gt;
&lt;p&gt;工具的基本功能是完善了，后续可以加上内存监控，电量监控，cup监控等功能，不过那都是后话了。&lt;/p&gt;
&lt;p&gt;完整功能的代码在&lt;a href=&quot;https://github.com/diandianhanbin/AndroidTools&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Github&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;上次写的Monkey工具虽然是可以运行，不过用起来非常烂，可以说非常非常的烂，点了执行Monkey程序就会卡死，现在我们来解决这个问题。&lt;br&gt;
    
    </summary>
    
      <category term="Python" scheme="http://www.wengyb.com/categories/Python/"/>
    
    
      <category term="测试" scheme="http://www.wengyb.com/tags/%E6%B5%8B%E8%AF%95/"/>
    
      <category term="python" scheme="http://www.wengyb.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>Python开发测试工具(一)—Monkey</title>
    <link href="http://www.wengyb.com/2016/04/01/Python%E5%BC%80%E5%8F%91%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7-%E4%B8%80-%E2%80%94Monkey/"/>
    <id>http://www.wengyb.com/2016/04/01/Python开发测试工具-一-—Monkey/</id>
    <published>2016-04-01T09:17:44.000Z</published>
    <updated>2016-04-01T09:26:58.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h2&gt;&lt;p&gt;最近在测试安卓的时候，经常会用到Monkey，Monkey作为安卓的基础工具，必须要到命令行去敲敲敲，做起来非常非常麻烦，于是我就想能不能利用学会的Python知识直接开发一个带有界面的安卓测试工具。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;思路&quot;&gt;&lt;a href=&quot;#思路&quot; class=&quot;headerlink&quot; title=&quot;思路&quot;&gt;&lt;/a&gt;思路&lt;/h2&gt;&lt;p&gt;整个实现流程并不困难，一个界面填写数据，提交到后台，然后Python调用os模块，执行shell命令，然后就可以实现GUI端的Monkey了。&lt;/p&gt;
&lt;h2 id=&quot;Web端&quot;&gt;&lt;a href=&quot;#Web端&quot; class=&quot;headerlink&quot; title=&quot;Web端&quot;&gt;&lt;/a&gt;Web端&lt;/h2&gt;&lt;p&gt;前段时间一直都在看web端的知识，我就想用web写一个界面，然后后台用Django执行，就可以很简单的完成这个工具了。&lt;/p&gt;
&lt;h3 id=&quot;使用POST表单实现&quot;&gt;&lt;a href=&quot;#使用POST表单实现&quot; class=&quot;headerlink&quot; title=&quot;使用POST表单实现&quot;&gt;&lt;/a&gt;使用POST表单实现&lt;/h3&gt;&lt;p&gt;前端就是用Bootstrap来实现了，对我来说，写了这么久得博客，这块东西比较容易了，代码就不放了，bootstrap套套就出来了，界面图如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xsgl3.com1.z0.glb.clouddn.com/F819E2C3-3A6B-4BCD-B538-22F1E9D9C6BF.png&quot; alt=&quot;界面图&quot;&gt;&lt;/p&gt;
&lt;p&gt;本来上面还有一个结束Monkey按钮的，被我拿掉了，拿掉的原因后面会说。&lt;/p&gt;
&lt;p&gt;现在该有的东西都有了，后台实现起来也不难，获取前端给的参数，然后执行命令就行了，第一版用的是POST提交表单的方式执行，我发现了这么些问题：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;点击执行Monkey命令的时候整个页面是卡住的，没办法点击获取Monkey进程和结束Monkey&lt;/li&gt;
&lt;li&gt;执行完Monkey后整个页面会刷新，也就是说没办法从前端获取我命令的参数，虽然日志中可以获取到命令相关的参数，但是总的来说并不是那么直观&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;使用Ajax提交表单&quot;&gt;&lt;a href=&quot;#使用Ajax提交表单&quot; class=&quot;headerlink&quot; title=&quot;使用Ajax提交表单&quot;&gt;&lt;/a&gt;使用Ajax提交表单&lt;/h3&gt;&lt;p&gt;用POST提交是最简单的了，我也最熟悉，不过存在上面的问题，总是很操蛋，于是我就改为使用Ajax异步提交数据，这样就不会导致执行Monkey的时候整个页面卡死的情况了。&lt;/p&gt;
&lt;p&gt;页面没有修改，改了一个方法，jQuery的方法如下：&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$(&lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;).ready(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    $(&lt;span class=&quot;string&quot;&gt;&quot;#sub&quot;&lt;/span&gt;).click(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        $.post(&lt;span class=&quot;string&quot;&gt;&quot;/monkey/&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;string&quot;&gt;&quot;package_name&quot;&lt;/span&gt;: $(&lt;span class=&quot;string&quot;&gt;&quot;#package_name&quot;&lt;/span&gt;).val(),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;string&quot;&gt;&quot;event_count&quot;&lt;/span&gt;: $(&lt;span class=&quot;string&quot;&gt;&quot;#event_count&quot;&lt;/span&gt;).val(),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;string&quot;&gt;&quot;log_path&quot;&lt;/span&gt;: $(&lt;span class=&quot;string&quot;&gt;&quot;#log_path&quot;&lt;/span&gt;).val(),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;string&quot;&gt;&quot;log_level&quot;&lt;/span&gt;: $(&lt;span class=&quot;string&quot;&gt;&quot;#log_level&quot;&lt;/span&gt;).val(),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;string&quot;&gt;&quot;delay&quot;&lt;/span&gt;: $(&lt;span class=&quot;string&quot;&gt;&quot;#delay&quot;&lt;/span&gt;).val(),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;string&quot;&gt;&quot;sys_event&quot;&lt;/span&gt;: $(&lt;span class=&quot;string&quot;&gt;&quot;#sys_event&quot;&lt;/span&gt;).val(),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;string&quot;&gt;&quot;touch_event&quot;&lt;/span&gt;: $(&lt;span class=&quot;string&quot;&gt;&quot;#touch_event&quot;&lt;/span&gt;).val(),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;string&quot;&gt;&quot;zoom_event&quot;&lt;/span&gt;: $(&lt;span class=&quot;string&quot;&gt;&quot;#zoom_event&quot;&lt;/span&gt;).val(),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;string&quot;&gt;&quot;finger_event&quot;&lt;/span&gt;: $(&lt;span class=&quot;string&quot;&gt;&quot;#finger_event&quot;&lt;/span&gt;).val(),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;string&quot;&gt;&quot;ball_event&quot;&lt;/span&gt;: $(&lt;span class=&quot;string&quot;&gt;&quot;#ball_event&quot;&lt;/span&gt;).val(),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;string&quot;&gt;&quot;nav_event&quot;&lt;/span&gt;: $(&lt;span class=&quot;string&quot;&gt;&quot;#nav_event&quot;&lt;/span&gt;).val(),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;string&quot;&gt;&quot;switch_event&quot;&lt;/span&gt;: $(&lt;span class=&quot;string&quot;&gt;&quot;#switch_event&quot;&lt;/span&gt;).val()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        )&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;使用这个方法实现，是解决了一些问题，执行Monkey的时候页面也不会卡了，也可以正常的获取Monkey进程，不过依然存在这么些问题：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;端口容易出现异常，我执行的过程中发现Monkey经常会占用两个pid&lt;/li&gt;
&lt;li&gt;执行停止Monkey命令的时候无法生效&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;第一个问题倒是还好，占用两个结束两次就行了，倒也还能接受，第二个问题就无法接受了，NND不能直观的开始和结束，我写这个工具就没有什么意义了，我专门试了直接调用python执行停止命令是正常的。代码如下：&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$(&lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;).ready(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    $(&lt;span class=&quot;string&quot;&gt;&quot;#stop_monkey&quot;&lt;/span&gt;).click(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        $.post(&lt;span class=&quot;string&quot;&gt;&quot;/monkey/stop_monkey/&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;string&quot;&gt;&quot;monkey_id&quot;&lt;/span&gt;: $(&lt;span class=&quot;string&quot;&gt;&quot;#monkey_id&quot;&lt;/span&gt;).val()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;@csrf_exempt&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;stop_monkey&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(request)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    data = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;string&quot;&gt;&quot;msg&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;Monkey已经停止&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; request.method == &lt;span class=&quot;string&quot;&gt;&#39;POST&#39;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        command = &lt;span class=&quot;string&quot;&gt;&#39;adb shell kill &amp;#123;&amp;#125;&#39;&lt;/span&gt;.format(request.POST[&lt;span class=&quot;string&quot;&gt;&#39;monkey_id&#39;&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        cm.run_monkey(command)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; JsonResponse(data, safe=&lt;span class=&quot;keyword&quot;&gt;False&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; JsonResponse(data, safe=&lt;span class=&quot;keyword&quot;&gt;False&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;若读者知道，请发邮件告诉我到底是为什么这里不会执行，我丢了print在这上面是可以正常打印的。&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&quot;GUI端&quot;&gt;&lt;a href=&quot;#GUI端&quot; class=&quot;headerlink&quot; title=&quot;GUI端&quot;&gt;&lt;/a&gt;GUI端&lt;/h2&gt;&lt;p&gt;web端的实验失败了，效果并没有达到我的预期，只能换一种方案了，用桌面的GUI端来实现这个方案试试，然而GUI端又有很多选择，PYQT据说是最好的，但是在我电脑数据抹掉之前我有装过这个，虽然最后装成功了，但是整个装的过程太操蛋了，有点心理阴影，wxpython也是一个不错的选择，不过还要装第三方包，有点折腾，最终我选择了最基本的Tkinter来处理GUI。那么问题来了，Tkinter没用过，要重新去熟悉这个包。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://effbot.org/tkinterbook/tkinter-index.htm&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;《Tkinter介绍文档》&lt;/a&gt;。。。麻蛋又是全英文的，果然英语还是必须要学好，我大概看了两小时，把一些主要的点扫了一遍，就开始写了，代码丑也是没办法的，时间少，没办法去慢慢想设计模式。&lt;/p&gt;
&lt;p&gt;写完的界面是这样的：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xsgl3.com1.z0.glb.clouddn.com/ABAD9EFF-A159-48CA-A794-B431FC5021C3.png&quot; alt=&quot;MonkeyTool&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;按钮方法&quot;&gt;&lt;a href=&quot;#按钮方法&quot; class=&quot;headerlink&quot; title=&quot;按钮方法&quot;&gt;&lt;/a&gt;按钮方法&lt;/h3&gt;&lt;p&gt;整个GUI的代码有100多行，有点长，布局是用Grid写的，所有的代码我就不贴了，我把按钮的方法贴一下：&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;connect_text = Button(master, text=&lt;span class=&quot;string&quot;&gt;&#39;获取设备号&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                      command=&lt;span class=&quot;keyword&quot;&gt;lambda&lt;/span&gt;: cm.set_text(device_name, ad.get_devices()))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;up_pknm_conf = Button(master, text=&lt;span class=&quot;string&quot;&gt;&#39;修改包名&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                      command=&lt;span class=&quot;keyword&quot;&gt;lambda&lt;/span&gt;: cm.update_conf(status, &lt;span class=&quot;string&quot;&gt;&#39;package_name&#39;&lt;/span&gt;, cm.get_text(package_name)))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;up_log_path_conf = Button(master, text=&lt;span class=&quot;string&quot;&gt;&#39;修改日志地址&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                          command=&lt;span class=&quot;keyword&quot;&gt;lambda&lt;/span&gt;: cm.update_conf(status, &lt;span class=&quot;string&quot;&gt;&#39;log_path&#39;&lt;/span&gt;, cm.get_text(log_path)))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;up_log_level_conf = Button(master, text=&lt;span class=&quot;string&quot;&gt;&#39;修改日志等级&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                           command=&lt;span class=&quot;keyword&quot;&gt;lambda&lt;/span&gt;: cm.update_conf(status, &lt;span class=&quot;string&quot;&gt;&#39;log_level&#39;&lt;/span&gt;, cm.get_text(log_level)))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;up_count_conf = Button(master, text=&lt;span class=&quot;string&quot;&gt;&#39;修改测试数量&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                       command=&lt;span class=&quot;keyword&quot;&gt;lambda&lt;/span&gt;: cm.update_conf(status, &lt;span class=&quot;string&quot;&gt;&#39;count&#39;&lt;/span&gt;, cm.get_text(count)))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;up_delay_conf = Button(master, text=&lt;span class=&quot;string&quot;&gt;&#39;修改延时&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                       command=&lt;span class=&quot;keyword&quot;&gt;lambda&lt;/span&gt;: cm.update_conf(status, &lt;span class=&quot;string&quot;&gt;&#39;delay&#39;&lt;/span&gt;, cm.get_text(delay)))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;up_touch_conf = Button(master, text=&lt;span class=&quot;string&quot;&gt;&#39;修改触摸事件&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                       command=&lt;span class=&quot;keyword&quot;&gt;lambda&lt;/span&gt;: cm.update_conf(status, &lt;span class=&quot;string&quot;&gt;&#39;touch&#39;&lt;/span&gt;, cm.get_text(touch)))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;up_motion_conf = Button(master, text=&lt;span class=&quot;string&quot;&gt;&#39;修改手势事件&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        command=&lt;span class=&quot;keyword&quot;&gt;lambda&lt;/span&gt;: cm.update_conf(status, &lt;span class=&quot;string&quot;&gt;&#39;motion&#39;&lt;/span&gt;, cm.get_text(motion)))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;up_pinch_conf = Button(master, text=&lt;span class=&quot;string&quot;&gt;&#39;修改缩放事件&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                       command=&lt;span class=&quot;keyword&quot;&gt;lambda&lt;/span&gt;: cm.update_conf(status, &lt;span class=&quot;string&quot;&gt;&#39;pinch&#39;&lt;/span&gt;, cm.get_text(pinch)))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;up_trackball_conf = Button(master, text=&lt;span class=&quot;string&quot;&gt;&#39;修改轨迹球事件&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                           command=&lt;span class=&quot;keyword&quot;&gt;lambda&lt;/span&gt;: cm.update_conf(status, &lt;span class=&quot;string&quot;&gt;&#39;trackball&#39;&lt;/span&gt;, cm.get_text(trackball)))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;up_screen_conf = Button(master, text=&lt;span class=&quot;string&quot;&gt;&#39;修改屏幕事件&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        command=&lt;span class=&quot;keyword&quot;&gt;lambda&lt;/span&gt;: cm.update_conf(status, &lt;span class=&quot;string&quot;&gt;&#39;screen&#39;&lt;/span&gt;, cm.get_text(screen)))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;up_nav_conf = Button(master, text=&lt;span class=&quot;string&quot;&gt;&#39;修改导航事件&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                     command=&lt;span class=&quot;keyword&quot;&gt;lambda&lt;/span&gt;: cm.update_conf(status, &lt;span class=&quot;string&quot;&gt;&#39;nav&#39;&lt;/span&gt;, cm.get_text(nav)))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;up_major_conf = Button(master, text=&lt;span class=&quot;string&quot;&gt;&#39;修改主要事件&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                       command=&lt;span class=&quot;keyword&quot;&gt;lambda&lt;/span&gt;: cm.update_conf(status, &lt;span class=&quot;string&quot;&gt;&#39;major&#39;&lt;/span&gt;, cm.get_text(major)))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;up_system_conf = Button(master, text=&lt;span class=&quot;string&quot;&gt;&#39;修改系统事件&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        command=&lt;span class=&quot;keyword&quot;&gt;lambda&lt;/span&gt;: cm.update_conf(status, &lt;span class=&quot;string&quot;&gt;&#39;system&#39;&lt;/span&gt;, cm.get_text(system)))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;up_app_conf = Button(master, text=&lt;span class=&quot;string&quot;&gt;&#39;修改切屏事件&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                     command=&lt;span class=&quot;keyword&quot;&gt;lambda&lt;/span&gt;: cm.update_conf(status, &lt;span class=&quot;string&quot;&gt;&#39;app&#39;&lt;/span&gt;, cm.get_text(app)))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;up_keyboard_conf = Button(master, text=&lt;span class=&quot;string&quot;&gt;&#39;修改键盘事件&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                          command=&lt;span class=&quot;keyword&quot;&gt;lambda&lt;/span&gt;: cm.update_conf(status, &lt;span class=&quot;string&quot;&gt;&#39;keyboard&#39;&lt;/span&gt;, cm.get_text(keyboard)))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;up_anyevents_conf = Button(master, text=&lt;span class=&quot;string&quot;&gt;&#39;修改其他事件&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                           command=&lt;span class=&quot;keyword&quot;&gt;lambda&lt;/span&gt;: cm.update_conf(status, &lt;span class=&quot;string&quot;&gt;&#39;anyevents&#39;&lt;/span&gt;, cm.get_text(anyevents)))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cat_monkey_pid = Button(master, text=&lt;span class=&quot;string&quot;&gt;&#39;显示Monkey进程&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        command=&lt;span class=&quot;keyword&quot;&gt;lambda&lt;/span&gt;: cm.set_text(monkey_pid, ad.get_monkey_id()))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;start_monkey = Button(master, text=&lt;span class=&quot;string&quot;&gt;&#39;开始Monkey&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                      command=&lt;span class=&quot;keyword&quot;&gt;lambda&lt;/span&gt;: mk.merge_command(cm.get_text(log_path), *cm.collect(*ENTRYLIST)))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;stop_monkey = Button(master, text=&lt;span class=&quot;string&quot;&gt;&#39;结束Monkey&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                     command=&lt;span class=&quot;keyword&quot;&gt;lambda&lt;/span&gt;: ad.stop_monkey(status))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;get_monkey = Button(master, text=&lt;span class=&quot;string&quot;&gt;&#39;获取Monkey&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    command=&lt;span class=&quot;keyword&quot;&gt;lambda&lt;/span&gt;: cm.set_text(status, mk.get_monkey(cm.get_text(log_path), *cm.collect(*ENTRYLIST))))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;值得一提的是，在Button组件中的command执行函数是&lt;strong&gt;不能带参数&lt;/strong&gt;的，否则就会报错，不知道Tkinter的作者是怎么想的，不带参数的函数能有几个啊。。。。。&lt;/p&gt;
&lt;p&gt;我用了一个折中的方法，用lambda函数来处理这一块，这样就可以加上参数了。&lt;/p&gt;
&lt;h3 id=&quot;封装其他方法&quot;&gt;&lt;a href=&quot;#封装其他方法&quot; class=&quot;headerlink&quot; title=&quot;封装其他方法&quot;&gt;&lt;/a&gt;封装其他方法&lt;/h3&gt;&lt;p&gt;其他方法我使用了三个函数，common来处理普通的方法，adb专门处理操作shell的方法，而monkey专门处理和Monkey有关的方法，这样设计以后工具就很容易拓展了，可以加上性能监控的方法等高级功能。&lt;/p&gt;
&lt;p&gt;简单的贴一下方法。&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Adb&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;__init__&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(self)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.mk = monkey.Monkey()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.cm = common.Common()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;get_devices&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(self)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;string&quot;&gt;&quot;&quot;&quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        获取设备名称&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        :return:设备名称&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &quot;&quot;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        a = os.popen(&lt;span class=&quot;string&quot;&gt;&#39;adb devices&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        devices = a.readlines()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        spl = devices[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;].find(&lt;span class=&quot;string&quot;&gt;&#39;	&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        devices_name = devices[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;][:spl]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; devices_name == &lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;请确认设备是否连接&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; devices_name&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;get_monkey_id&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(self)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;string&quot;&gt;&quot;&quot;&quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        获取monkey进程ID&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        :return:monkey进程id&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &quot;&quot;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; self.get_devices():&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            a = os.popen(&lt;span class=&quot;string&quot;&gt;&#39;adb shell ps | grep monkey&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                monkey_id = a.read().split(&lt;span class=&quot;string&quot;&gt;&#39; &#39;&lt;/span&gt;)[&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;进程为&amp;#123;&amp;#125; 的Monkey已停止&quot;&lt;/span&gt;.format(monkey_id)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;except&lt;/span&gt; Exception:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                monkey_id = &lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; monkey_id&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;设备未连接&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;stop_monkey&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(self, entry)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;string&quot;&gt;&quot;&quot;&quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        停止monkey&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        :param monkey_id:monkey的进程号&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        :return:None&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &quot;&quot;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        monkey_id = self.get_monkey_id()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; monkey_id != &lt;span class=&quot;string&quot;&gt;&#39;请确认你的设备是否连接&#39;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            os.system(&lt;span class=&quot;string&quot;&gt;&#39;adb shell kill &amp;#123;&amp;#125;&#39;&lt;/span&gt;.format(monkey_id))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            self.cm.set_text(entry, &lt;span class=&quot;string&quot;&gt;&quot;进程为&amp;#123;&amp;#125; 的Monkey已停止&quot;&lt;/span&gt;.format(monkey_id))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;设备未连接&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;merge_command&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(self, path, *args)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;string&quot;&gt;&quot;&quot;&quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        组合命令,Monkey使用&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        :param path:日志地址&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        :param args:Monkey命令中的其他参数&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        :return:None&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &quot;&quot;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        member = &lt;span class=&quot;string&quot;&gt;&#39; &#39;&lt;/span&gt;.join(args)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        command = &lt;span class=&quot;string&quot;&gt;&#39;adb shell monkey &amp;#123;&amp;#125; &amp;gt; &amp;#123;&amp;#125;&#39;&lt;/span&gt;.format(member, path)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.run(command)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;get_monkey&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(self, path, *args)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;string&quot;&gt;&quot;&quot;&quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        获取Monkey命令&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        :param path: 日志地址&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        :param args: Monkey命令中的其他参数&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        :return:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &quot;&quot;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; self.check_total(*args):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            member = &lt;span class=&quot;string&quot;&gt;&#39; &#39;&lt;/span&gt;.join(args)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            command = &lt;span class=&quot;string&quot;&gt;&#39;adb shell monkey &amp;#123;&amp;#125; &amp;gt; &amp;#123;&amp;#125;&#39;&lt;/span&gt;.format(member, path)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; command&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;事件百分数大于100%,请修正后再获取&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;check_total&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(self, *args)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;string&quot;&gt;&quot;&quot;&quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        检查事件百分比是否合规,大于100则返回False&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        :param args:传入的事件列表&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        :return:True&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &quot;&quot;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        rst = []&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        all_list = self.deal_list(*args)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; x &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; all_list:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            x = x.split(&lt;span class=&quot;string&quot;&gt;&#39; &#39;&lt;/span&gt;)[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            rst.append(int(x))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        num = sum(rst)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; num &amp;gt; &lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;False&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;True&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;deal_list&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(self, *args)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;string&quot;&gt;&quot;&quot;&quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        处理列表数据,返回只有事件的列表&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        :param args:传入的列表数据&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        :return:list&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &quot;&quot;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        rst = []&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; x &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; range(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;12&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            rst.append(args[x])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; rst&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; rst&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;存在的问题&quot;&gt;&lt;a href=&quot;#存在的问题&quot; class=&quot;headerlink&quot; title=&quot;存在的问题&quot;&gt;&lt;/a&gt;存在的问题&lt;/h3&gt;&lt;p&gt;用GUI端来处理也会存在这么个问题，点击开始的时候回出现整个GUI卡住的情况，必须要等Monkey执行完毕才能正常操作其他东西，因此我想了一个折中的方案，加一个状态显示的文本框，加一个生成Monkey命令的按钮，这样生成命令然后在GUI上就可以使用其他命令了，加上多进程或者多线程应该能解决这个问题，但是现在我对多线程多进程几乎是0了解，等了解了之后再来完善这部分的功能。&lt;/p&gt;
&lt;p&gt;##最后&lt;br&gt;就实现了这么一点点功能，代码量差不多也要300行，不得不说真是一个操蛋的工程。&lt;/p&gt;
&lt;p&gt;最后，我仍然没有解决这个操蛋的问题，等研究完多线程之后再来重新改善这段代码。&lt;/p&gt;
&lt;p&gt;最后的最后，虽然功能还不齐全，还是放上&lt;a href=&quot;https://github.com/diandianhanbin/AndroidTools&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Github&lt;/a&gt;，怎么说也是一个可以试想功能的工具吧。&lt;/p&gt;
&lt;p&gt;最近博客上线了，读者可以关注我的博客。&lt;br&gt;博客地址：&lt;a href=&quot;http://www.wengyb.com&quot;&gt;www.wengyb.com&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h2&gt;&lt;p&gt;最近在测试安卓的时候，经常会用到Monkey，Monkey作为安卓的基础工具，必须要到命令行去敲敲敲，做起来非常非常麻烦，于是我就想能不能利用学会的Python知识直接开发一个带有界面的安卓测试工具。&lt;br&gt;
    
    </summary>
    
      <category term="Python" scheme="http://www.wengyb.com/categories/Python/"/>
    
    
      <category term="测试" scheme="http://www.wengyb.com/tags/%E6%B5%8B%E8%AF%95/"/>
    
      <category term="python" scheme="http://www.wengyb.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>Appium学习之路—处理混合APP</title>
    <link href="http://www.wengyb.com/2016/03/31/Appium%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF%E2%80%94%E5%A4%84%E7%90%86%E6%B7%B7%E5%90%88APP/"/>
    <id>http://www.wengyb.com/2016/03/31/Appium学习之路—处理混合APP/</id>
    <published>2016-03-31T07:08:50.000Z</published>
    <updated>2016-04-19T03:12:46.000Z</updated>
    
    <content type="html">&lt;p&gt;文章首发：&lt;a href=&quot;http://wybblog.applinzi.com/blog/article/34/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;《我的博客》&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h2&gt;&lt;p&gt;自己自学APPIUM测试公司的APP有一段时间的，Android原生的元素定位，包括数据处理和逻辑判断也基本上搞熟了，但是公司的APP很坑爹，开发过程中存在混合开发的情况，这就意味着我必须要处理APP里面的webview，真的是很坑爹的东西。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;操作系统：Mac OS X EI Caption&lt;/p&gt;
&lt;p&gt;Appium: 1.4.16&lt;/p&gt;
&lt;p&gt;Java: java version “1.7.0_79”&lt;/p&gt;
&lt;p&gt;node.js: v5.3.0&lt;/p&gt;
&lt;p&gt;npm: 3.3.12&lt;/p&gt;
&lt;p&gt;手机：小米NOTE4&lt;/p&gt;
&lt;p&gt;待测应用： 微证券&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&quot;常规方法&quot;&gt;&lt;a href=&quot;#常规方法&quot; class=&quot;headerlink&quot; title=&quot;常规方法&quot;&gt;&lt;/a&gt;常规方法&lt;/h2&gt;&lt;p&gt;正常来说，常规的方法应该是使用UI Automator Viewer来探测页面的元素，比如下面这样：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://ww1.sinaimg.cn/mw690/811987cbgw1f20rlzwtwwj21kw103thr.jpg&quot; alt=&quot;页面元素&quot;&gt;&lt;/p&gt;
&lt;p&gt;但是，如果是混合开发，就会出现只有一个webview元素的情况，正常的方法无法定位。比如这样：&lt;br&gt;&lt;img src=&quot;http://ww3.sinaimg.cn/mw690/811987cbgw1f25r2354hcj21d4120n6k.jpg&quot; alt=&quot;webview&quot;&gt;&lt;/p&gt;
&lt;p&gt;常规的方法是没办法定位出这部分内容，只有一个webview，无法像原生一样获取内容。&lt;/p&gt;
&lt;h2 id=&quot;取巧的办法&quot;&gt;&lt;a href=&quot;#取巧的办法&quot; class=&quot;headerlink&quot; title=&quot;取巧的办法&quot;&gt;&lt;/a&gt;取巧的办法&lt;/h2&gt;&lt;p&gt;如果针对H5的元素，只需要点击的话，可以这么做，比如上文我们的开户页面，我们需要做的只是在这个页面上点击立即开户，跳转到下一个页面，我们可以用这种取巧的方法：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;self.driver.get_name(&amp;apos;立即开户&amp;apos;).click()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这样的代码，也是可以实现的，当然，上面的get_name我是进行封装了的，原来的代码是：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;def get_name(self, name):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        element = self.driver.find_element_by_name(name)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        return element&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;更优化的处理方式&quot;&gt;&lt;a href=&quot;#更优化的处理方式&quot; class=&quot;headerlink&quot; title=&quot;更优化的处理方式&quot;&gt;&lt;/a&gt;更优化的处理方式&lt;/h2&gt;&lt;p&gt;既然是H5页面，如果能够获取HTML代码就好了，那么就可以使用操作DOM的方式来操作这个H5。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;谷歌浏览器：版本 49.0.2623.87 (64-bit)&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;我用的谷歌浏览器是这个版本，把手机连接上电脑，在谷歌浏览器中输入这个代码：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;chrome://inspect&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;点击这个按钮：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://ww1.sinaimg.cn/mw690/811987cbgw1f25rku93r2j21kw176grv.jpg&quot; alt=&quot;inspect&quot;&gt;&lt;/p&gt;
&lt;p&gt;神奇的一幕出现了，所有的代码都展示在你面前。就像web一样调试混合APP中的H5.&lt;/p&gt;
&lt;h2 id=&quot;切换webdriver&quot;&gt;&lt;a href=&quot;#切换webdriver&quot; class=&quot;headerlink&quot; title=&quot;切换webdriver&quot;&gt;&lt;/a&gt;切换webdriver&lt;/h2&gt;&lt;p&gt;虽然解决了html代码的问题，但是另一个问题出现了，我们要怎么去操作DOM。常规的方法是没办法了，只能操作原生的，这个时候我们需要把webdriver切换成H5的，而不是原生的。&lt;/p&gt;
&lt;p&gt;其实原理很简单，只要把webdriver切换到H5的方式就行了。使用如下代码：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;contexts&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;contexts(self):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Returns the contexts within the current session.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    返回当前会话中的上下文，使用后可以识别H5页面的控件&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    :Usage:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        driver.contexts&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;用法 driver.contexts&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;调用这个方法后，把结果打印出来，你会发现是一个列表，列表中的第一个是NATIVE_APP，这个就表示现在的webdriver是调用原生的功能，我们使用这个命令切换一下就行了。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;def switch_h5(self):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.driver.execute(MobileCommand.SWITCH_TO_CONTEXT, &amp;#123;&amp;quot;name&amp;quot;: &amp;quot;WEBVIEW_com.weizq&amp;quot;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    def switch_app(self):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.driver.execute(MobileCommand.SWITCH_TO_CONTEXT, &amp;#123;&amp;quot;name&amp;quot;: &amp;quot;NATIVE_APP&amp;quot;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;第一个函数就是封装切换到H5的方法，name对应的东西就是通过contexts列表中打印出来的东西，当然你也可以使用其他的方法封装。&lt;/p&gt;
&lt;p&gt;切换到H5的webdriver之后，再使用driver.find_element_by_id试试？现在就变成查找DOM相关的功能了，再调用第二个函数，又切回原生的webdriver了。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;文章首发：&lt;a href=&quot;http://wybblog.applinzi.com/blog/article/34/&quot;&gt;《我的博客》&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h2&gt;&lt;p&gt;自己自学APPIUM测试公司的APP有一段时间的，Android原生的元素定位，包括数据处理和逻辑判断也基本上搞熟了，但是公司的APP很坑爹，开发过程中存在混合开发的情况，这就意味着我必须要处理APP里面的webview，真的是很坑爹的东西。&lt;br&gt;
    
    </summary>
    
      <category term="AboutTest" scheme="http://www.wengyb.com/categories/AboutTest/"/>
    
    
      <category term="Appium" scheme="http://www.wengyb.com/tags/Appium/"/>
    
      <category term="测试" scheme="http://www.wengyb.com/tags/%E6%B5%8B%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>Appium学习之路—环境搭建</title>
    <link href="http://www.wengyb.com/2016/03/31/Appium%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF%E2%80%94%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
    <id>http://www.wengyb.com/2016/03/31/Appium学习之路—环境搭建/</id>
    <published>2016-03-31T07:07:47.000Z</published>
    <updated>2016-03-31T07:08:42.000Z</updated>
    
    <content type="html">&lt;h1 id=&quot;Appium学习之路—环境搭建&quot;&gt;&lt;a href=&quot;#Appium学习之路—环境搭建&quot; class=&quot;headerlink&quot; title=&quot;Appium学习之路—环境搭建&quot;&gt;&lt;/a&gt;Appium学习之路—环境搭建&lt;/h1&gt;&lt;p&gt;说实话，Appium第一次接触还是在testerhome看到的，介绍说这个框架可以测试安卓和IOS，并且只要写一个脚本，不需要做任何改动就可以直接在IOS和Android上运行，这真心是一个好消息，说干就干。先吧环境弄起来看看到底牛掰不牛掰。&lt;br&gt;&lt;strong&gt;PS：笔者使用的是Mac OS X系统。&lt;/strong&gt;&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;准备工作&quot;&gt;&lt;a href=&quot;#准备工作&quot; class=&quot;headerlink&quot; title=&quot;准备工作&quot;&gt;&lt;/a&gt;准备工作&lt;/h2&gt;&lt;p&gt;Appium提供了两种方式，一个是客户端，另一个是命令行。不过不论哪种方式，以下的东西都必须准备好&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Xcode Command Line Tools 这个是必须的工具可以百度以下，我是使用Mac系统，干脆直接下了一个完整的Xcode&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Android SDK 和AVD 这个是测试Android必须的，当然AVD可以使用Android的真机来代替。&lt;/p&gt;
&lt;h2 id=&quot;Appium客户端&quot;&gt;&lt;a href=&quot;#Appium客户端&quot; class=&quot;headerlink&quot; title=&quot;Appium客户端&quot;&gt;&lt;/a&gt;Appium客户端&lt;/h2&gt;&lt;p&gt;我看到这个框架竟然还是有客户端的，真是有一种莫名的兴奋，有客户端就意味着我可以不用搭建那些操蛋的命令行了？下载一个GUI端我就可以轻轻松松的开搞了。不过下载客户端是需要翻墙的，这个有点蛋疼，我自己的专门翻墙出去下载了一个Appium for Mac的客户端，不过那速度慢得让人无法直视。官网地址：&lt;a href=&quot;http://appium.io/downloads.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Appium官网&lt;/a&gt;。我是不太建议在官网下载。这里推荐一个资源，下载速度比较快。&lt;a href=&quot;http://pan.baidu.com/s/1jGvAISu&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Appium国内下载地址&lt;/a&gt;。&lt;/p&gt;
&lt;h3 id=&quot;客户端的使用&quot;&gt;&lt;a href=&quot;#客户端的使用&quot; class=&quot;headerlink&quot; title=&quot;客户端的使用&quot;&gt;&lt;/a&gt;客户端的使用&lt;/h3&gt;&lt;p&gt;我个人折腾完客户端之后，感觉不是很给力，客户端虽然界面挺漂亮的，风格也挺好，不过总体折腾下来不是我喜欢的类型，如果喜欢客户端的朋友可以自己去折腾折腾客户端，配置起来很简单，就不做过多的赘述了。&lt;/p&gt;
&lt;h2 id=&quot;命令行&quot;&gt;&lt;a href=&quot;#命令行&quot; class=&quot;headerlink&quot; title=&quot;命令行&quot;&gt;&lt;/a&gt;命令行&lt;/h2&gt;&lt;p&gt;命令行是体现逼格高大上的东东，不过折腾起来也很费事，笔者折腾这个命令行折腾了大概一周的时间，其中种种原因很多&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;java环境&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Mac自带了这东西，不过说实话一般的电脑也都会把这个环境折腾好吧，毕竟java是最流行的开发语言&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Python环境&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Mac自带了这东西，因为笔者是使用Python来写脚本，当然你也可以使用其他语言来写，比如java、ruby、c#等等&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;brew&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;brew是一个套件管理器，不过笔者比较懒，直接使用Mac自带的easy_install来安装，比较省事&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;node&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;node也是必须的，如果有了brew或者easy_install，安装是很省事的 sudo easy_install node，输入密码就搞定了&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;SvenWengdeMBP:~ svenweng$ node -v&lt;br&gt;v0.10.34&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;这样就算安装成功&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;npm&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;npm这东西和node一样，也是使用安装工具来安装很方便&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;SvenWengdeMBP:~ svenweng$ npm -v&lt;br&gt;1.4.28&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;Appium&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;终于到我们的主角了安装命令是 npm install -g appium&lt;br&gt;这里要说明一下，Appium的安装不能使用sudo。-g是让npm自动帮我们配置Appium的环境。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;SvenWengdeMBP:~ svenweng$ appium -v&lt;br&gt;1.4.16&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;如果你看到了这个东西，就表示你的Appium已经完全安装完毕了。网上还有教程说需要安装一个wd的东西，我不知道这个是干什么的，当然我也安装了，npm install wd。很简单的安装&lt;/p&gt;
&lt;h3 id=&quot;检查Appium的配置是否正确&quot;&gt;&lt;a href=&quot;#检查Appium的配置是否正确&quot; class=&quot;headerlink&quot; title=&quot;检查Appium的配置是否正确&quot;&gt;&lt;/a&gt;检查Appium的配置是否正确&lt;/h3&gt;&lt;p&gt;执行命令appium-doctor，你如果看到一下的界面，就表示已经正确的安装完毕了&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;SvenWengdeMBP:~ svenweng$ appium-doctor&lt;br&gt;Running iOS Checks&lt;br&gt;✔ Xcode is installed at /Applications/Xcode.app/Contents/Developer&lt;br&gt;✔ Xcode Command Line Tools are installed.&lt;br&gt;✔ DevToolsSecurity is enabled.&lt;br&gt;✔ The Authorization DB is set up properly.&lt;br&gt;✔ Node binary found at /usr/local/bin/node&lt;br&gt;✔ iOS Checks were successful.&lt;/p&gt;
&lt;p&gt;Running Android Checks&lt;br&gt;✔ ANDROID_HOME is set to “/Users/svenweng/Desktop/Application/adt-bundle-mac-x86_64-20131030/sdk”&lt;br&gt;✔ JAVA_HOME is set to “/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home.”&lt;br&gt;✔ ADB exists at /Users/svenweng/Desktop/Application/adt-bundle-mac-x86_64-20131030/sdk/platform-tools/adb&lt;br&gt;✔ Android exists at /Users/svenweng/Desktop/Application/adt-bundle-mac-x86_64-20131030/sdk/tools/android&lt;br&gt;✔ Emulator exists at /Users/svenweng/Desktop/Application/adt-bundle-mac-x86_64-20131030/sdk/tools/emulator&lt;br&gt;✔ Android Checks were successful.&lt;/p&gt;
&lt;p&gt;✔ All Checks were successful&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;如果某一行签名不是打钩，而是一个红叉叉，那就表示那个配置没有安装正确&lt;/p&gt;
&lt;h3 id=&quot;疑问&quot;&gt;&lt;a href=&quot;#疑问&quot; class=&quot;headerlink&quot; title=&quot;疑问&quot;&gt;&lt;/a&gt;疑问&lt;/h3&gt;&lt;p&gt;理论上我的Appium安装是正确的，但是我运行appium的时候出现了下面的一大串错误&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;SvenWengdeMBP:~ svenweng$ appium&lt;br&gt;error: uncaughtException: fn must be a function&lt;/p&gt;
&lt;p&gt;See &lt;a href=&quot;http://goo.gl/916lJJ&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://goo.gl/916lJJ&lt;/a&gt;&lt;br&gt;date=Sat Nov 21 2015 10:37:25 GMT+0800 (HKT), pid=2504, uid=501, gid=20, cwd=/usr/local/lib/node_modules/appium, execPath=/usr/local/bin/node, version=v0.10.34, argv=[node, /usr/local/bin/appium], rss=103559168, heapTotal=86062080, heapUsed=56309664, loadavg=[1.6328125, 1.86767578125, 1.81103515625], uptime=39552, trace=[column=15, file=/usr/local/lib/node_modules/appium/node_modules/appium-chromedriver/node_modules/appium-jsonwp-proxy/node_modules/appium-support/node_modules/bluebird/js/main/promisify.js, function=Function.Promise.promisify, line=268, method=Promise.promisify, native=false, column=13, file=lib/fs.js, function=, line=46, method=null, native=false, column=26, file=module.js, function=Module._compile, line=456, method=_compile, native=false, column=10, file=module.js, function=Object.Module._extensions..js, line=474, method=Module._extensions..js, native=false, column=32, file=module.js, function=Module.load, line=356, method=load, native=false, column=12, file=module.js, function=Function.Module._load, line=312, method=Module._load, native=false, column=17, file=module.js, function=Module.require, line=364, method=require, native=false, column=17, file=module.js, function=require, line=380, method=null, native=false, column=11, file=/usr/local/lib/node_modules/appium/node_modules/appium-chromedriver/node_modules/appium-jsonwp-proxy/node_modules/appium-support/build/lib/tempdir.js, function=, line=12, method=null, native=false, column=26, file=module.js, function=Module._compile, line=456, method=_compile, native=false, column=10, file=module.js, function=Object.Module._extensions..js, line=474, method=Module._extensions..js, native=false, column=32, file=module.js, function=Module.load, line=356, method=load, native=false, column=12, file=module.js, function=Function.Module._load, line=312, method=Module._load, native=false, column=17, file=module.js, function=Module.require, line=364, method=require, native=false, column=17, file=module.js, function=require, line=380, method=null, native=false, column=19, file=/usr/local/lib/node_modules/appium/node_modules/appium-chromedriver/node_modules/appium-jsonwp-proxy/node_modules/appium-support/build/index.js, function=, line=11, method=null, native=false, column=26, file=module.js, function=Module._compile, line=456, method=_compile, native=false, column=10, file=module.js, function=Object.Module._extensions..js, line=474, method=Module._extensions..js, native=false, column=32, file=module.js, function=Module.load, line=356, method=load, native=false, column=12, file=module.js, function=Function.Module._load, line=312, method=Module._load, native=false, column=17, file=module.js, function=Module.require, line=364, method=require, native=false, column=17, file=module.js, function=require, line=380, method=null, native=false, column=42, file=lib/proxy.js, function=, line=2, method=null, native=false, column=26, file=module.js, function=Module._compile, line=456, method=_compile, native=false, column=10, file=module.js, function=Object.Module._extensions..js, line=474, method=Module._extensions..js, native=false, column=32, file=module.js, function=Module.load, line=356, method=load, native=false, column=12, file=module.js, function=Function.Module._load, line=312, method=Module._load, native=false, column=17, file=module.js, function=Module.require, line=364, method=require, native=false, column=17, file=module.js, function=require, line=380, method=null, native=false, column=17, file=/usr/local/lib/node_modules/appium/node_modules/appium-chromedriver/node_modules/appium-jsonwp-proxy/build/index.js, function=, line=9, method=null, native=false, column=26, file=module.js, function=Module._compile, line=456, method=_compile, native=false, column=10, file=module.js, function=Object.Module._extensions..js, line=474, method=Module._extensions..js, native=false, column=32, file=module.js, function=Module.load, line=356, method=load, native=false, column=12, file=module.js, function=Function.Module._load, line=312, method=Module._load, native=false, column=17, file=module.js, function=Module.require, line=364, method=require, native=false, column=17, file=module.js, function=require, line=380, method=null, native=false, column=28, file=lib/chromedriver.js, function=, line=3, method=null, native=false, column=26, file=module.js, function=Module._compile, line=456, method=_compile, native=false, column=10, file=module.js, function=Object.Module._extensions..js, line=474, method=Module._extensions..js, native=false, column=32, file=module.js, function=Module.load, line=356, method=load, native=false], stack=[TypeError: fn must be a function, ,     See &lt;a href=&quot;http://goo.gl/916lJJ&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://goo.gl/916lJJ&lt;/a&gt;, ,     at Function.Promise.promisify (/usr/local/lib/node_modules/appium/node_modules/appium-chromedriver/node_modules/appium-jsonwp-proxy/node_modules/appium-support/node_modules/bluebird/js/main/promisify.js:268:15),     at Object.&lt;anonymous&gt; (lib/fs.js:46:13),     at Module._compile (module.js:456:26),     at Object.Module._extensions..js (module.js:474:10),     at Module.load (module.js:356:32),     at Function.Module._load (module.js:312:12),     at Module.require (module.js:364:17),     at require (module.js:380:17),     at Object.&lt;anonymous&gt; (/usr/local/lib/node_modules/appium/node_modules/appium-chromedriver/node_modules/appium-jsonwp-proxy/node_modules/appium-support/build/lib/tempdir.js:12:11),     at Module._compile (module.js:456:26),     at Object.Module._extensions..js (module.js:474:10),     at Module.load (module.js:356:32),     at Function.Module._load (module.js:312:12),     at Module.require (module.js:364:17),     at require (module.js:380:17),     at Object.&lt;anonymous&gt; (/usr/local/lib/node_modules/appium/node_modules/appium-chromedriver/node_modules/appium-jsonwp-proxy/node_modules/appium-support/build/index.js:11:19),     at Module._compile (module.js:456:26),     at Object.Module._extensions..js (module.js:474:10),     at Module.load (module.js:356:32),     at Function.Module._load (module.js:312:12),     at Module.require (module.js:364:17),     at require (module.js:380:17),     at Object.&lt;anonymous&gt; (lib/proxy.js:2:42),     at Module._compile (module.js:456:26),     at Object.Module._extensions..js (module.js:474:10),     at Module.load (module.js:356:32),     at Function.Module._load (module.js:312:12),     at Module.require (module.js:364:17),     at require (module.js:380:17),     at Object.&lt;anonymous&gt; (/usr/local/lib/node_modules/appium/node_modules/appium-chromedriver/node_modules/appium-jsonwp-proxy/build/index.js:9:17),     at Module._compile (module.js:456:26),     at Object.Module._extensions..js (module.js:474:10),     at Module.load (module.js:356:32),     at Function.Module._load (module.js:312:12),     at Module.require (module.js:364:17),     at require (module.js:380:17),     at Object.&lt;anonymous&gt; (lib/chromedriver.js:3:28),     at Module._compile (module.js:456:26),     at Object.Module._extensions..js (module.js:474:10),     at Module.load (module.js:356:32)]&lt;/anonymous&gt;&lt;/anonymous&gt;&lt;/anonymous&gt;&lt;/anonymous&gt;&lt;/anonymous&gt;&lt;/anonymous&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;求大神给一个解答吧。&lt;/p&gt;
&lt;p&gt;翻墙工具正常了，我进入了命令行提示的错误网址&lt;br&gt;网址上显示的是这个&lt;br&gt;Error: fn must be a function&lt;/p&gt;
&lt;p&gt;This page is here for the sake of completeness. There really is nothing much to add on that error.&lt;br&gt;翻译过来就是：&lt;br&gt;错误： FN必须是一个函数&lt;/p&gt;
&lt;p&gt;这页是这里为了完整性。真的是没有什么补充该错误。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;折腾了一天，终于把问题搞定了，问题的原因是因为node的版本太旧了导致的，原因分析在&lt;a href=&quot;https://github.com/appium/appium/issues/5814&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;1楼回答的那个链接上&lt;/a&gt;，再说说今天自己折腾过程中遇到的问题吧，我在网上搜索帖子的时候说需要吧node卸载了才能升级（我真是天真）。于是按照步骤手贱删除了一些不应该删除的东西，结果搞的很乱，思路都乱了，不知道从何下手。于是我就去睡了一觉，醒来重新折腾，重新去官网下了一个node的安装包，把之前干掉的node环境重新部署好。再使用npm install -g appium的时候，一直会出现这个问题&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;SvenWengdeMBP:~ svenweng$ npm install -g appium&lt;br&gt;npm ERR! tar.unpack unzip error /var/folders/hm/04tcnt812v909nysd8jgl0100000gn/T/npm-10484-941ff227/registry.npmjs.org/appium-uiauto/-/appium-uiauto-1.10.10.tgz&lt;br&gt;npm ERR! tar.unpack unzip error /var/folders/hm/04tcnt812v909nysd8jgl0100000gn/T/npm-10484-941ff227/registry.npmjs.org/appium-instruments/-/appium-instruments-2.0.6.tgz&lt;br&gt;loadRequestedDeps → netwo ▐ ╢███████████████████████████████░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░╟&lt;br&gt;^C&lt;br&gt;SvenWengdeMBP:~ svenweng$ sudo chmod -r 777 /usr/local&lt;br&gt;Password:&lt;br&gt;chmod: 777: No such file or directory&lt;br&gt;SvenWengdeMBP:~ svenweng$ sudo chmod -R 777 /usr/local&lt;br&gt;SvenWengdeMBP:~ svenweng$ npm install -g appium&lt;br&gt;loadRequestedDeps → netwo ▄ ╢███████████████████████████████░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░╟&lt;br&gt;^C&lt;br&gt;SvenWengdeMBP:~ svenweng$ npm install -g appium&lt;br&gt;npm ERR! tar.unpack unzip error /var/folders/hm/04tcnt812v909nysd8jgl0100000gn/T/npm-13599-e762bf07/registry.npmjs.org/hoek/-/hoek-2.16.3.tgz&lt;br&gt;npm ERR! tar.unpack untar error /var/folders/hm/04tcnt812v909nysd8jgl0100000gn/T/npm-13599-e762bf07/registry.npmjs.org/hoek/-/hoek-2.16.3.tgz&lt;br&gt;npm ERR! tar.unpack unzip error /var/folders/hm/04tcnt812v909nysd8jgl0100000gn/T/npm-13599-e762bf07/registry.npmjs.org/iconv-lite/-/iconv-lite-0.4.8.tgz&lt;br&gt;npm ERR! tar.unpack untar error /var/folders/hm/04tcnt812v909nysd8jgl0100000gn/T/npm-13599-e762bf07/registry.npmjs.org/iconv-lite/-/iconv-lite-0.4.8.tgz&lt;br&gt;npm ERR! tar.unpack unzip error /var/folders/hm/04tcnt812v909nysd8jgl0100000gn/T/npm-13599-e762bf07/registry.npmjs.org/core-js/-/core-js-0.9.18.tgz&lt;br&gt;npm ERR! tar.unpack unzip error /var/folders/hm/04tcnt812v909nysd8jgl0100000gn/T/npm-13599-e762bf07/registry.npmjs.org/appium-adb/-/appium-adb-1.7.5.tgz&lt;br&gt;npm ERR! tar.unpack unzip error /var/folders/hm/04tcnt812v909nysd8jgl0100000gn/T/npm-13599-e762bf07/registry.npmjs.org/appium-instruments/-/appium-instruments-2.0.6.tgz&lt;br&gt;npm ERR! tar.unpack unzip error /var/folders/hm/04tcnt812v909nysd8jgl0100000gn/T/npm-13599-e762bf07/registry.npmjs.org/appium-uiauto/-/appium-uiauto-1.10.10.tgz&lt;br&gt;npm ERR! Darwin 15.0.0&lt;br&gt;npm ERR! argv “/usr/local/bin/node” “/usr/local/bin/npm” “install” “-g” “appium”&lt;br&gt;npm ERR! node v5.1.0&lt;br&gt;npm ERR! npm  v3.3.12&lt;br&gt;npm ERR! code Z_BUF_ERROR&lt;br&gt;npm ERR! errno -5&lt;/p&gt;
&lt;p&gt;npm ERR! unexpected end of file&lt;br&gt;npm ERR!&lt;br&gt;npm ERR! If you need help, you may report this error at:&lt;br&gt;npm ERR!     &lt;a href=&quot;https://github.com/npm/npm/issues&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/npm/npm/issues&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;npm ERR! Please include the following file with any support request:&lt;br&gt;npm ERR!     /Users/svenweng/npm-debug.log&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;每次安装到一半都安装不下去，我的电脑也是翻墙的，按道理应该也都能下载才对，具体详细的原因请恕我是小白，不太懂这个。不过我换了一个下载源就把这个问题搞定了，这里发出来，希望下次有遇到这种问题的朋友不会在这个地方浪费太多时间。命令是这个：npm -g –registry &lt;a href=&quot;http://registry.cnpmjs.org&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://registry.cnpmjs.org&lt;/a&gt;  install appium&lt;/p&gt;
&lt;p&gt;前前后后折腾了差不多一周的环境，终于把环境的问题搞定了，希望能够更深入的学习，也给自己一个勉励。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Appium学习之路—环境搭建&quot;&gt;&lt;a href=&quot;#Appium学习之路—环境搭建&quot; class=&quot;headerlink&quot; title=&quot;Appium学习之路—环境搭建&quot;&gt;&lt;/a&gt;Appium学习之路—环境搭建&lt;/h1&gt;&lt;p&gt;说实话，Appium第一次接触还是在testerhome看到的，介绍说这个框架可以测试安卓和IOS，并且只要写一个脚本，不需要做任何改动就可以直接在IOS和Android上运行，这真心是一个好消息，说干就干。先吧环境弄起来看看到底牛掰不牛掰。&lt;br&gt;&lt;strong&gt;PS：笔者使用的是Mac OS X系统。&lt;/strong&gt;&lt;br&gt;
    
    </summary>
    
      <category term="AboutTest" scheme="http://www.wengyb.com/categories/AboutTest/"/>
    
    
      <category term="Appium" scheme="http://www.wengyb.com/tags/Appium/"/>
    
      <category term="测试" scheme="http://www.wengyb.com/tags/%E6%B5%8B%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>Appium学习之路—驱动和常用功能的封装</title>
    <link href="http://www.wengyb.com/2016/03/24/Appium%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF%E2%80%94%E9%A9%B1%E5%8A%A8%E5%92%8C%E5%B8%B8%E7%94%A8%E5%8A%9F%E8%83%BD%E7%9A%84%E5%B0%81%E8%A3%85/"/>
    <id>http://www.wengyb.com/2016/03/24/Appium学习之路—驱动和常用功能的封装/</id>
    <published>2016-03-24T07:04:28.000Z</published>
    <updated>2016-03-31T07:06:37.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h2&gt;&lt;p&gt;初步了解Appium各个功能之后，应该把这些功能进行一些封装，否则整个代码会比较难看，可用性和重用性也会很差。本文是我这段时间使用Appium的一些想法，仅供参考。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;操作系统：Mac OS X EI Caption&lt;/p&gt;
&lt;p&gt;Appium: 1.4.16&lt;/p&gt;
&lt;p&gt;Java: java version “1.7.0_79”&lt;/p&gt;
&lt;p&gt;node.js: v5.3.0&lt;/p&gt;
&lt;p&gt;npm: 3.3.12&lt;/p&gt;
&lt;p&gt;手机：小米NOTE4&lt;/p&gt;
&lt;p&gt;待测应用： 微证券&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&quot;driver的封装&quot;&gt;&lt;a href=&quot;#driver的封装&quot; class=&quot;headerlink&quot; title=&quot;driver的封装&quot;&gt;&lt;/a&gt;driver的封装&lt;/h2&gt;&lt;p&gt;初始化的driver是Python操作Appium的核心，因此driver在整个代码中重用率是非常高的。&lt;/p&gt;
&lt;p&gt;新建一个driver.py文件，专门用来封装driver。代码如下：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;# ecoding=utf-8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;__author__ = &amp;quot;Sven_Weng&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;from appium import webdriver&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;class AppiumTest:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    def __init__(self):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        desired_caps = &amp;#123;&amp;apos;platformName&amp;apos;: &amp;apos;Android&amp;apos;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &amp;apos;platformVersion&amp;apos;: &amp;apos;5.0.2&amp;apos;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &amp;apos;deviceName&amp;apos;: &amp;apos;5136b01e&amp;apos;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &amp;apos;appPackage&amp;apos;: &amp;apos;com.weizq&amp;apos;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &amp;apos;appActivity&amp;apos;: &amp;apos;com.zztzt.android.simple.app.MainActivity&amp;apos;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.driver = webdriver.Remote(&amp;apos;http://localhost:4723/wd/hub&amp;apos;, desired_caps)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.driver.implicitly_wait(30)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    def get_driver(self):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        return self.driver&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;在AppiumTest这个类中，初始化函数包含了driver的信息，然后在get_driver函数中直接把这个driver返回回去，测试用例中只要在测试类的初始化中调用它，就能获取driver。&lt;/p&gt;
&lt;h2 id=&quot;按模块划分封装的方法&quot;&gt;&lt;a href=&quot;#按模块划分封装的方法&quot; class=&quot;headerlink&quot; title=&quot;按模块划分封装的方法&quot;&gt;&lt;/a&gt;按模块划分封装的方法&lt;/h2&gt;&lt;p&gt;我是这么划分模块的，一个Element，专门封装操作和对象有关的方法，把find_element_by_id这种很长很长的方法缩短一点，用一些比较简洁的名字封装一下，使用起来代码可读性也会比较强。一个common类，专门封装通用的方法，其他就是按照功能模块来划分，我测试的微证券有4个主要功能，所以会有财讯、行情、发现、我这些类模块。&lt;/p&gt;
&lt;h3 id=&quot;element对象封装&quot;&gt;&lt;a href=&quot;#element对象封装&quot; class=&quot;headerlink&quot; title=&quot;element对象封装&quot;&gt;&lt;/a&gt;element对象封装&lt;/h3&gt;&lt;p&gt;我自己的代码如下：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;68&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;class Element:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    封装Appium中关于元素对象的方法&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    def __init__(self):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        at = AppiumTest()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.driver = at.get_driver()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    def get_id(self, id):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        element = self.driver.find_element_by_id(id)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        return element&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    def get_name(self, name):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        element = self.driver.find_element_by_name(name)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        return element&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    def over(self):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        element = self.driver.quit()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        return element&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    def get_screen(self, path):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.driver.get_screenshot_as_file(path)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    def get_size(self):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        size = self.driver.get_window_size()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        return size&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    def swipe_to_up(self):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        window_size = self.get_size()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        width = window_size.get(&amp;quot;width&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        height = window_size.get(&amp;quot;height&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.driver.swipe(width / 2, height * 3 / 4, width / 2, height / 4, 500)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    def swipe_to_down(self):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        window_size = self.get_size()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        width = window_size.get(&amp;quot;width&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        height = window_size.get(&amp;quot;height&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.driver.swipe(width / 2, height / 4, width / 2, height * 3 / 4, 500)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    def swipe_to_left(self):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        window_size = self.get_size()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        width = window_size.get(&amp;quot;width&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        height = window_size.get(&amp;quot;height&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.driver.swipe(width / 4, height / 2, width * 3 / 4, height / 2, 500)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    def swipe_to_right(self):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        window_size = self.get_size()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        width = window_size.get(&amp;quot;width&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        height = window_size.get(&amp;quot;height&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.driver.swipe(width * 4 / 5, height / 2, width / 5, height / 2, 500)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    def back(self):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.driver.keyevent(4)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    def get_classes(self, classesname):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        elements = self.driver.find_elements_by_class_name(classesname)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        return elements&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    def get_ids(self, ids):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        elements = self.driver.find_elements_by_id(ids)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        return elements&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    def switch_h5(self):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.driver.execute(MobileCommand.SWITCH_TO_CONTEXT, &amp;#123;&amp;quot;name&amp;quot;: &amp;quot;WEBVIEW_com.weizq&amp;quot;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    def switch_app(self):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.driver.execute(MobileCommand.SWITCH_TO_CONTEXT, &amp;#123;&amp;quot;name&amp;quot;: &amp;quot;NATIVE_APP&amp;quot;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;上面封装的很简单，就是一些常用的方法，在初始化函数中初始化driver即可。&lt;/p&gt;
&lt;h3 id=&quot;common&quot;&gt;&lt;a href=&quot;#common&quot; class=&quot;headerlink&quot; title=&quot;common&quot;&gt;&lt;/a&gt;common&lt;/h3&gt;&lt;p&gt;common就是封装一些通用的方法，比如登录，比大小，获取股票代码，页面标题校验等等。以下是我的代码：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;91&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;92&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;93&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;94&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;95&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;96&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;97&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;98&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;99&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;100&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;101&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;102&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;103&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;104&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;105&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;106&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;107&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;108&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;109&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;110&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;111&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;112&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;113&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;114&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;115&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;116&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;117&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;118&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;119&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;120&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;121&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;122&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;123&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;124&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;125&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;126&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;127&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;128&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;129&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;130&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;131&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;132&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;133&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;134&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;135&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;136&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;137&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;138&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;139&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;140&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;141&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;142&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;143&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;144&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;145&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;146&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;147&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;148&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;149&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;150&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;151&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;152&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;153&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;154&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;155&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;156&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;157&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;158&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;159&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;160&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;161&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;162&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;class Common:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    封装通用的方法&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    def __init__(self):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.cf = ConfigParser.ConfigParser()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.cf.read(&amp;apos;enable_data.conf&amp;apos;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    def cycle_screen(self, section_name, num, driver):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        循环截图功能&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        从json文件中读取信息,用来定位点击的方位和保存截图的路径&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        执行成功则返回True,否则返回False&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        :param section_name: json文件中一级节点的名称&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        :param num: json文件中对应的列表序列位&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        :param driver: Appium的驱动&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        :return:True or False&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        try:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            with open(&amp;apos;get_screen.json&amp;apos;, &amp;apos;r&amp;apos;) as f:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                jsondata = f.read()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            cx_info = json.loads(jsondata)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            values = cx_info[section_name][num].values()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            for value in values:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                driver.get_name(value[&amp;apos;name&amp;apos;]).click()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                time.sleep(2)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                self.check_title(value[&amp;apos;name&amp;apos;], driver)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                driver.get_screen(value[&amp;apos;path&amp;apos;])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                logging.info(value[&amp;apos;log&amp;apos;])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            return True&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        except Exception as e:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            logging.warning(e)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            return False&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    def cycle_screen_and_back(self, section_name, num, driver):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        功能和上一个函数一样,在步骤最后加了一个返回事件,用来处理&amp;quot;行情&amp;quot;-&amp;quot;更多&amp;quot;页面的数据校验&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        :param section_name: conf配置文件的节点名称&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        try:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            with open(&amp;apos;get_screen.json&amp;apos;, &amp;apos;r&amp;apos;) as f:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                jsondata = f.read()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            cx_info = json.loads(jsondata)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            values = cx_info[section_name][num].values()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            for value in values:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                logging.info(value)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                driver.get_name(value[&amp;apos;name&amp;apos;]).click()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                time.sleep(2)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                self.check_title(value[&amp;apos;name&amp;apos;], driver)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                # title = driver.get_classes(&amp;apos;android.widget.TextView&amp;apos;)[0].text&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                # try:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                #     assert title == value[&amp;apos;name&amp;apos;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                #     logging.info(title + &amp;apos;页面显示正确&amp;apos;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                # except Exception as e:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                #     logging.warning(value[&amp;apos;name&amp;apos;])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                #     logging.warning(title + &amp;apos;页面显示不正确&amp;apos;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                driver.get_screen(value[&amp;apos;path&amp;apos;])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                driver.driver.keyevent(4)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                time.sleep(1)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                logging.info(value[&amp;apos;log&amp;apos;])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            return True&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        except Exception as e:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            logging.warning(e)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            return False&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    def check_title(self, title, driver):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        text = driver.get_classes(&amp;apos;android.widget.TextView&amp;apos;)[0].text&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        try:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            assert text == title&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            logging.info(&amp;quot;标题为: &amp;#123;&amp;#125; 校验通过&amp;quot;.format(title))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            return True&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        except Exception as e:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            logging.warning(e)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            logging.warning(&amp;quot;标题为: &amp;#123;&amp;#125; 校验不通过&amp;quot;.format(title))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            return False&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    def compare(self, ids, numstar, numend, driver):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        比较传入值得大小, 第一个数比第二个数大返回True,否则返回False&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        :param ids:传入的ID名&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        :param numstar:传入的开始序号&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        :param numend:传入的结束需要&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        :param driver:驱动&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        :return:True or False&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        try:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            startext = float(driver.get_ids(ids)[numstar].text)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            endtext = float(driver.get_ids(ids)[numend].text)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        except ValueError:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            starmark = driver.get_ids(ids)[numstar].text[:1]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            endmark = driver.get_ids(ids)[numend].text[:1]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            if starmark == endmark:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                startext = float(driver.get_ids(ids)[numstar].text.lstrip(starmark).rstrip(&amp;apos;%&amp;apos;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                endtext = float(driver.get_ids(ids)[numend].text.lstrip(endmark).rstrip(&amp;apos;%&amp;apos;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            elif starmark == &amp;quot;+&amp;quot;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                return True&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            elif starmark == &amp;quot;-&amp;quot;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                return False&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        if startext &amp;gt; endtext:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            return True&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        else:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            return False&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    def get_SotckCode(self, ids, driver):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        获取行情-自选页面中的所有股票代码,自选超过50支的时候请修改参数中的range(10)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        返回list&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        :param driver:驱动控件&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        :return:list, 自选股票代码&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        SotckCode = []&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        for x in driver.get_ids(ids):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            SotckCode.append(x.text)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        for x in range(5):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            driver.swipe_to_up()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            for x in driver.get_ids(ids):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                if x.text not in SotckCode:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    SotckCode.append(x.text)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        return SotckCode&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    def zjzh_login(self, driver):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        资金账号登录方法,传入appium-driver&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        APP启动时需要资金账号为登录状态时调用&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        :param driver: Appium驱动&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        :return: True&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        driver.get_name(&amp;apos;发现&amp;apos;).click()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        driver.switch_h5()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        driver.get_classes(&amp;apos;list-item&amp;apos;)[1].click()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        driver.switch_app()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        driver.get_name(&amp;apos;买入&amp;apos;).click()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        username = self.cf.get(&amp;apos;zjzh_login_info&amp;apos;, &amp;apos;username&amp;apos;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        password = self.cf.get(&amp;apos;zjzh_login_info&amp;apos;, &amp;apos;password&amp;apos;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        if self.tra_login(username, password, driver):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            self.check_title(u&amp;apos;委托买入&amp;apos;, driver)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            driver.back()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            driver.back()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            self.check_title(u&amp;apos;发现&amp;apos;, driver)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            logging.info(&amp;apos;资金账号登录成功&amp;apos;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            return True&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    def tra_login(self, username, password, driver):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        资金账号登录页面的登录方法&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        :param username:账号&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        :param password:密码&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        :param driver:Appium驱动&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        :return:True&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        driver.get_id(&amp;apos;com.weizq:id/edit_account&amp;apos;).clear()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        driver.get_id(&amp;apos;com.weizq:id/edit_account&amp;apos;).send_keys(username)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        logging.info(&amp;apos;输入的账号为: &amp;#123;&amp;#125;&amp;apos;.format(username))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        driver.get_id(&amp;apos;com.weizq:id/edit_password&amp;apos;).send_keys(password)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        logging.info(&amp;apos;输入的密码为: &amp;#123;&amp;#125;&amp;apos;.format(password))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        yzm = driver.get_id(&amp;apos;com.weizq:id/text_yanzhengma&amp;apos;).text&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        logging.info(&amp;apos;验证码为:&amp;#123;&amp;#125;&amp;apos;.format(yzm))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        driver.get_id(&amp;apos;com.weizq:id/edit_yanzhengma&amp;apos;).send_keys(yzm)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        driver.get_id(&amp;apos;com.weizq:id/login&amp;apos;).click()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        time.sleep(3)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        return True&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;其他功能模块&quot;&gt;&lt;a href=&quot;#其他功能模块&quot; class=&quot;headerlink&quot; title=&quot;其他功能模块&quot;&gt;&lt;/a&gt;其他功能模块&lt;/h3&gt;&lt;p&gt;其他功能模块也是同样的道理，不过其他模块封装的都是特定功能模块才会用到的方法，因为代码可能涉及公司的机密，所以功能模块的代码就暂不放出来，思想还是一样的。&lt;/p&gt;
&lt;h2 id=&quot;日志记录&quot;&gt;&lt;a href=&quot;#日志记录&quot; class=&quot;headerlink&quot; title=&quot;日志记录&quot;&gt;&lt;/a&gt;日志记录&lt;/h2&gt;&lt;p&gt;关于日志记录的原则，我觉得是这样的，写入日志的必须是一些关键的信息，把日志浏览一遍，基本上就能了解到整个脚本跑的流程，比如我调试一些功能的时候，基本上不用关注手机运行的页面，脚本到底做了什么，只要看日志就懂了。下面是一些我调试功能的时候打出来的日志：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Thu, 24 Mar 2016 14:26:35 test_weizq.py[line:437] INFO ==========结束测试我的内容==========&lt;/p&gt;
&lt;p&gt;Thu, 24 Mar 2016 14:26:37 test_weizq.py[line:429] INFO ==========开始测试我的内容==========&lt;/p&gt;
&lt;p&gt;Thu, 24 Mar 2016 14:26:55 test_weizq.py[line:429] INFO ==========开始测试我的内容==========&lt;/p&gt;
&lt;p&gt;Thu, 24 Mar 2016 14:27:23 test_weizq.py[line:429] INFO ==========开始测试我的内容==========&lt;/p&gt;
&lt;p&gt;Thu, 24 Mar 2016 14:27:32 test_weizq.py[line:448] INFO —–开始测试个人资料页面校验—–&lt;/p&gt;
&lt;p&gt;Thu, 24 Mar 2016 14:27:36 test_weizq.py[line:456] INFO 旧的昵称是: 6850252&lt;/p&gt;
&lt;p&gt;Thu, 24 Mar 2016 14:27:50 test_weizq.py[line:463] INFO 新的昵称是: 5030013&lt;/p&gt;
&lt;p&gt;Thu, 24 Mar 2016 14:27:50 test_weizq.py[line:437] INFO ==========结束测试我的内容==========&lt;/p&gt;
&lt;p&gt;Thu, 24 Mar 2016 14:31:55 test_weizq.py[line:429] INFO ==========开始测试我的内容==========&lt;/p&gt;
&lt;p&gt;Thu, 24 Mar 2016 14:32:06 test_weizq.py[line:448] INFO —–开始测试个人资料页面校验—–&lt;/p&gt;
&lt;p&gt;Thu, 24 Mar 2016 14:32:09 test_weizq.py[line:468] INFO 女&lt;/p&gt;
&lt;p&gt;Thu, 24 Mar 2016 14:32:09 test_weizq.py[line:437] INFO ==========结束测试我的内容==========&lt;/p&gt;
&lt;p&gt;Thu, 24 Mar 2016 14:34:38 test_weizq.py[line:429] INFO ==========开始测试我的内容==========&lt;/p&gt;
&lt;p&gt;Thu, 24 Mar 2016 14:34:50 test_weizq.py[line:448] INFO —–开始测试个人资料页面校验—–&lt;/p&gt;
&lt;p&gt;Thu, 24 Mar 2016 14:34:53 test_weizq.py[line:468] INFO 修改前的性别: 女&lt;/p&gt;
&lt;p&gt;Thu, 24 Mar 2016 14:34:58 test_weizq.py[line:472] INFO 性别修改为: 男&lt;/p&gt;
&lt;p&gt;Thu, 24 Mar 2016 14:34:58 test_weizq.py[line:437] INFO ==========结束测试我的内容==========&lt;/p&gt;
&lt;p&gt;Thu, 24 Mar 2016 14:35:14 test_weizq.py[line:429] INFO ==========开始测试我的内容==========&lt;/p&gt;
&lt;p&gt;Thu, 24 Mar 2016 14:35:35 test_weizq.py[line:429] INFO ==========开始测试我的内容==========&lt;/p&gt;
&lt;p&gt;Thu, 24 Mar 2016 14:35:47 test_weizq.py[line:429] INFO ==========开始测试我的内容==========&lt;/p&gt;
&lt;p&gt;Thu, 24 Mar 2016 14:36:01 test_weizq.py[line:429] INFO ==========开始测试我的内容==========&lt;/p&gt;
&lt;p&gt;Thu, 24 Mar 2016 14:36:12 test_weizq.py[line:448] INFO —–开始测试个人资料页面校验—–&lt;/p&gt;
&lt;p&gt;Thu, 24 Mar 2016 14:36:16 test_weizq.py[line:456] INFO 旧的昵称是: 5030013&lt;/p&gt;
&lt;p&gt;Thu, 24 Mar 2016 14:36:28 test_weizq.py[line:463] INFO 新的昵称是: 908602&lt;/p&gt;
&lt;p&gt;Thu, 24 Mar 2016 14:36:28 test_weizq.py[line:468] INFO 修改前的性别: 男&lt;/p&gt;
&lt;p&gt;Thu, 24 Mar 2016 14:36:33 test_weizq.py[line:475] INFO 性别修改为: 女&lt;/p&gt;
&lt;p&gt;Thu, 24 Mar 2016 14:36:33 test_weizq.py[line:437] INFO ==========结束测试我的内容==========&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;基本上看到这些日志就知道我到底在测试什么东西了。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h2&gt;&lt;p&gt;初步了解Appium各个功能之后，应该把这些功能进行一些封装，否则整个代码会比较难看，可用性和重用性也会很差。本文是我这段时间使用Appium的一些想法，仅供参考。&lt;br&gt;
    
    </summary>
    
      <category term="AboutTest" scheme="http://www.wengyb.com/categories/AboutTest/"/>
    
    
      <category term="Appium" scheme="http://www.wengyb.com/tags/Appium/"/>
    
      <category term="测试" scheme="http://www.wengyb.com/tags/%E6%B5%8B%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>Appium学习之路—无安卓源码的一些准备</title>
    <link href="http://www.wengyb.com/2016/03/18/Appium%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF%E2%80%94%E6%97%A0%E5%AE%89%E5%8D%93%E6%BA%90%E7%A0%81%E7%9A%84%E4%B8%80%E4%BA%9B%E5%87%86%E5%A4%87/"/>
    <id>http://www.wengyb.com/2016/03/18/Appium学习之路—无安卓源码的一些准备/</id>
    <published>2016-03-18T07:02:57.000Z</published>
    <updated>2016-03-31T07:06:50.000Z</updated>
    
    <content type="html">&lt;p&gt;准备工作其实是比较简单了，现阶段我测试的是安卓，所以就需要准备一台安卓手机了，在环境准备中已经把电脑的环境变量配置完毕了，所以现在需要的就是一些安卓测试的一些前奏知识。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;环境&quot;&gt;&lt;a href=&quot;#环境&quot; class=&quot;headerlink&quot; title=&quot;环境&quot;&gt;&lt;/a&gt;环境&lt;/h2&gt;&lt;hr&gt;
&lt;p&gt;操作系统：Mac OS X EI Caption &lt;/p&gt;
&lt;p&gt;Appium: 1.4.16&lt;/p&gt;
&lt;p&gt;Java: java version “1.7.0_79”&lt;/p&gt;
&lt;p&gt;node.js: v5.3.0&lt;/p&gt;
&lt;p&gt;npm: 3.3.12&lt;/p&gt;
&lt;p&gt;一切的前提，需要配置好环境&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&quot;获取包名&quot;&gt;&lt;a href=&quot;#获取包名&quot; class=&quot;headerlink&quot; title=&quot;获取包名&quot;&gt;&lt;/a&gt;获取包名&lt;/h2&gt;&lt;p&gt;我这里假设是我们都没有源码的情况下，有源码当然比较简单，如果只有一个apk文件，我们要获取包名的方式也一样很简单。在终端中输入下列命令：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;adb logcat ActivityManager:I *:s&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;然后打开需要测试的APP，找到topActivity.packageName，里面就是待测应用的包名了。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://ww3.sinaimg.cn/mw690/811987cbgw1f20rbgiuv4j20wi0kcqcu.jpg&quot; alt=&quot;示例&quot;&gt;&lt;/p&gt;
&lt;p&gt;这条命令的实质就是Android手机的日志打印之后，通过管道符过滤，LInux也同样有效，Windows可能就没办法使用这条命令了，当然，windows的朋友可以使用管道符之前的命令，然后找到topActivity.packageName。也同样可以获取到包名。&lt;/p&gt;
&lt;h2 id=&quot;当前Activity&quot;&gt;&lt;a href=&quot;#当前Activity&quot; class=&quot;headerlink&quot; title=&quot;当前Activity&quot;&gt;&lt;/a&gt;当前Activity&lt;/h2&gt;&lt;p&gt;同样是无源码，也可以通过命令来获取当前Activity。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Mac/Linux： adb shell dumpsys window windows | grep mFocusedApp&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Windows: adb shell dump sys window windows  并且手动查找mFocusedApp行&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;效果如下图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://ww1.sinaimg.cn/mw690/811987cbgw1f20ri5te6xj21kw11ok72.jpg&quot; alt=&quot;效果图&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;获取页面元素&quot;&gt;&lt;a href=&quot;#获取页面元素&quot; class=&quot;headerlink&quot; title=&quot;获取页面元素&quot;&gt;&lt;/a&gt;获取页面元素&lt;/h2&gt;&lt;p&gt;Appium和Selenium一样，需要通过一些元素来定位，达到自动化测试的目的，这里我使用的是Android Studio里面的一个工具：Android Device Monitor。&lt;/p&gt;
&lt;p&gt;这个工具可以获取屏幕快照，然后点击相关元素就可以获得上面的信息了，如下图所示：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://ww1.sinaimg.cn/mw690/811987cbgw1f20rlzwtwwj21kw103thr.jpg&quot; alt=&quot;示例图&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;最后&quot;&gt;&lt;a href=&quot;#最后&quot; class=&quot;headerlink&quot; title=&quot;最后&quot;&gt;&lt;/a&gt;最后&lt;/h2&gt;&lt;p&gt;熟悉使用这些东西，我们就可以开始Appium之旅了。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;准备工作其实是比较简单了，现阶段我测试的是安卓，所以就需要准备一台安卓手机了，在环境准备中已经把电脑的环境变量配置完毕了，所以现在需要的就是一些安卓测试的一些前奏知识。&lt;br&gt;
    
    </summary>
    
      <category term="AboutTest" scheme="http://www.wengyb.com/categories/AboutTest/"/>
    
    
      <category term="Appium" scheme="http://www.wengyb.com/tags/Appium/"/>
    
      <category term="测试" scheme="http://www.wengyb.com/tags/%E6%B5%8B%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>Python-MongoDB翻译</title>
    <link href="http://www.wengyb.com/2016/03/14/Python-MongoDB%E7%BF%BB%E8%AF%91/"/>
    <id>http://www.wengyb.com/2016/03/14/Python-MongoDB翻译/</id>
    <published>2016-03-14T02:41:06.000Z</published>
    <updated>2016-03-31T03:16:59.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;都说MongoDB这个NoSql数据库特别友好，使用起来也非常方便，今天稍微接触了一下，发现真的是非常非常简单，但是网上对这块内容涉及的很少，而且很多内容都是很老的版本使用的方法，我看了一下官方API文档中描述的内容也不多，顺手翻译一下吧，造福一下后来人。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;br&gt;&lt;strong&gt;注：我并不是逐字逐句的翻译，在某些地方我无法精确翻译的时候，我概括了大概的意思，有能力的可以直接看&lt;a href=&quot;http://api.mongodb.org/python/current/tutorial.html?_ga=1.218270941.558755682.1457943607#getting-a-single-document-with-find-one&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;官方文档&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&quot;前提条件&quot;&gt;&lt;a href=&quot;#前提条件&quot; class=&quot;headerlink&quot; title=&quot;前提条件&quot;&gt;&lt;/a&gt;前提条件&lt;/h2&gt;&lt;p&gt;首先，我们需要安装PyMongo模块，在PythonShell中下面的代码能正常运行且无报错。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; import pymongo&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;当然，你的MongoDB需要在默认地址和端口开启，你可以按照这个方法确认你是否安装了MongoDB：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ mongod&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;建立一个MongoClient&quot;&gt;&lt;a href=&quot;#建立一个MongoClient&quot; class=&quot;headerlink&quot; title=&quot;建立一个MongoClient&quot;&gt;&lt;/a&gt;建立一个MongoClient&lt;/h2&gt;&lt;p&gt;第一步我们需要建立一个MongoClient来运行MongoDB，这个做起来非常简单：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; from pymongo import MongoClient&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; client = MongoClient()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;上面的代码会连接默认的地址和端口，我们也可以自己指定地址和端口，像下面这样：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; client = MongoClient(&amp;apos;localhost&amp;apos;, 27017)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;或者使用MongoDB的URI连接：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; client = MongoClient(&amp;apos;mongodb://localhost:27017/&amp;apos;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;获取数据库&quot;&gt;&lt;a href=&quot;#获取数据库&quot; class=&quot;headerlink&quot; title=&quot;获取数据库&quot;&gt;&lt;/a&gt;获取数据库&lt;/h2&gt;&lt;p&gt;一个MongoDB可以提供多个数据库接口。当使用PyMongo的时候，你可以使用获取属性的方式建立MongoClient：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; db = client.test_database&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;如果你使用上面的方法无法获取数据库的时候，你可以使用字典的方式来获取数据库。&lt;/p&gt;
&lt;h2 id=&quot;获取连接&quot;&gt;&lt;a href=&quot;#获取连接&quot; class=&quot;headerlink&quot; title=&quot;获取连接&quot;&gt;&lt;/a&gt;获取连接&lt;/h2&gt;&lt;p&gt;获取连接的方式和获取数据库的方式一样，也可以使用获取属性的方式：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; collection = db.test_collection&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;或者使用字典的方式：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; collection = db[&amp;apos;test-collection&amp;apos;]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;注意：使用MongoDB建立连接非常容易，但是上面的所有操作都不是实实在在的操作了MongoDB，当第一次获取数据库和建立连接的时候，数据库和连接会被创建。&lt;/p&gt;
&lt;h2 id=&quot;文档&quot;&gt;&lt;a href=&quot;#文档&quot; class=&quot;headerlink&quot; title=&quot;文档&quot;&gt;&lt;/a&gt;文档&lt;/h2&gt;&lt;p&gt;MongoDB的数据格式存储使用的是JSON风格，在PyMongo中，我们使用的字典类型就相当于数据。比如下面的数据就类似博客中的post信息：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; import datetime&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; post = &amp;#123;&amp;quot;author&amp;quot;: &amp;quot;Mike&amp;quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...         &amp;quot;text&amp;quot;: &amp;quot;My first blog post!&amp;quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...         &amp;quot;tags&amp;quot;: [&amp;quot;mongodb&amp;quot;, &amp;quot;python&amp;quot;, &amp;quot;pymongo&amp;quot;],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...         &amp;quot;date&amp;quot;: datetime.datetime.utcnow()&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;数据格式可以容纳python的类型（就像datetime.datetime）&lt;/p&gt;
&lt;h2 id=&quot;插入数据&quot;&gt;&lt;a href=&quot;#插入数据&quot; class=&quot;headerlink&quot; title=&quot;插入数据&quot;&gt;&lt;/a&gt;插入数据&lt;/h2&gt;&lt;p&gt;往数据库插入一条数据我们使用insert_one()方法：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; posts = db.posts&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; post_id = posts.insert_one(post).inserted_id&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; post_id&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ObjectId(&amp;apos;...&amp;apos;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;当我们插入数据成功的时候，MongoDB会生成一个特殊的主键“_id”。这个主键“_id”的值是唯一的。insert_one()返回的值就是这个主键的值。&lt;/p&gt;
&lt;p&gt;插入第一条数据后，数据库、数据表和连接都建立了，我们可以查看列表中的所有信息：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; db.collection_names(include_system_collections=False)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[u&amp;apos;posts&amp;apos;]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;使用find-one-方法获取一条记录&quot;&gt;&lt;a href=&quot;#使用find-one-方法获取一条记录&quot; class=&quot;headerlink&quot; title=&quot;使用find_one()方法获取一条记录&quot;&gt;&lt;/a&gt;使用find_one()方法获取一条记录&lt;/h2&gt;&lt;p&gt;在MongoDB中最基本的方法就是find_one()。这个方法返回一条符合条件的记录（或者None）。当你知道某条信息只有一个的时候，这个方法非常有用，或者返回第一条数据，这里我们使用这个方法获取第一条数据：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; posts.find_one()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;u&amp;apos;date&amp;apos;: datetime.datetime(...), u&amp;apos;text&amp;apos;: u&amp;apos;My first blog post!&amp;apos;, u&amp;apos;_id&amp;apos;: ObjectId(&amp;apos;...&amp;apos;), u&amp;apos;author&amp;apos;: u&amp;apos;Mike&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;结果是我们之前插入的一条字典型的数据。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;注意：返回结果中的“_id”是插入数据时自动添加的。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;find_one()同时也提供了精确查找的功能，下面的示例是我们定位author为Mike的代码：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; posts.find_one(&amp;#123;&amp;quot;author&amp;quot;: &amp;quot;Mike&amp;quot;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;u&amp;apos;date&amp;apos;: datetime.datetime(...), u&amp;apos;text&amp;apos;: u&amp;apos;My first blog post!&amp;apos;, u&amp;apos;_id&amp;apos;: ObjectId(&amp;apos;...&amp;apos;), u&amp;apos;author&amp;apos;: u&amp;apos;Mike&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;如果我们把author换成另外一个，则不会返回结果：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; posts.find_one(&amp;#123;&amp;quot;author&amp;quot;: &amp;quot;Eliot&amp;quot;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;使用ObjectId查询&quot;&gt;&lt;a href=&quot;#使用ObjectId查询&quot; class=&quot;headerlink&quot; title=&quot;使用ObjectId查询&quot;&gt;&lt;/a&gt;使用ObjectId查询&lt;/h2&gt;&lt;p&gt;我们也可以用“_id”来查询，下面是我们的示例：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; post_id&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ObjectId(...)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; posts.find_one(&amp;#123;&amp;quot;_id&amp;quot;: post_id&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;u&amp;apos;date&amp;apos;: datetime.datetime(...), u&amp;apos;text&amp;apos;: u&amp;apos;My first blog post!&amp;apos;, u&amp;apos;_id&amp;apos;: ObjectId(&amp;apos;...&amp;apos;), u&amp;apos;author&amp;apos;: u&amp;apos;Mike&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;注意：ObjectId和转换为字符串的ObjectId是不一样的：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; post_id_as_str = str(post_id)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; posts.find_one(&amp;#123;&amp;quot;_id&amp;quot;: post_id_as_str&amp;#125;) # No result&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;在web应用中一个很常见的现象就是从URI中获取ObjectId来查询后台记录。在使用这个之前需要把str类型转换成ObjectId类型：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;from bson.objectid import ObjectId&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# The web framework gets post_id from the URL and passes it as a string&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;def get(post_id):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    # Convert from string to ObjectId:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    document = client.db.collection.find_one(&amp;#123;&amp;apos;_id&amp;apos;: ObjectId(post_id)&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;Unicode-Strings注意事项&quot;&gt;&lt;a href=&quot;#Unicode-Strings注意事项&quot; class=&quot;headerlink&quot; title=&quot;Unicode Strings注意事项&quot;&gt;&lt;/a&gt;Unicode Strings注意事项&lt;/h2&gt;&lt;p&gt;你可能会注意到我们的数据和存进去的数据有一些不一样，比如（ u’Mike’ 而不是‘Mike’）。&lt;/p&gt;
&lt;p&gt;MongoDB是使用BSON来存储数据。BSON是使用utf-8来编码的。所以PyMongo存储的str类型必须是utf-8的。（‘str’类型）也是要被支持的，因此Unicode类型(&amp;lt;‘unicode’类型&amp;gt;)需要先编码成utf-8，我们的示例中PythonShell显示的是u’Mike’而不是‘Mike’就是因为PyMongo解码了BSON的string变成Python的unicode string。&lt;/p&gt;
&lt;h2 id=&quot;大量的插入数据&quot;&gt;&lt;a href=&quot;#大量的插入数据&quot; class=&quot;headerlink&quot; title=&quot;大量的插入数据&quot;&gt;&lt;/a&gt;大量的插入数据&lt;/h2&gt;&lt;p&gt;为了让查询更有意思，我们需要插入多一些数据。能够新增一条记录，我们也可以做到新增多条记录。使用insert_many()方法插入由第一条数据组成的列表，只需要往服务端发送一条命令：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; new_posts = [&amp;#123;&amp;quot;author&amp;quot;: &amp;quot;Mike&amp;quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...               &amp;quot;text&amp;quot;: &amp;quot;Another post!&amp;quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...               &amp;quot;tags&amp;quot;: [&amp;quot;bulk&amp;quot;, &amp;quot;insert&amp;quot;],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...               &amp;quot;date&amp;quot;: datetime.datetime(2009, 11, 12, 11, 14)&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...              &amp;#123;&amp;quot;author&amp;quot;: &amp;quot;Eliot&amp;quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...               &amp;quot;title&amp;quot;: &amp;quot;MongoDB is fun&amp;quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...               &amp;quot;text&amp;quot;: &amp;quot;and pretty easy too!&amp;quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...               &amp;quot;date&amp;quot;: datetime.datetime(2009, 11, 10, 10, 45)&amp;#125;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; result = posts.insert_many(new_posts)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; result.inserted_ids&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[ObjectId(&amp;apos;...&amp;apos;), ObjectId(&amp;apos;...&amp;apos;)]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这个例子有几个有意思的地方：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;insert_many()返回了两个相互对应ObjectId&lt;/li&gt;
&lt;li&gt;new_post[1]有一个不同的地方，多了一个“tags”字段。而现在我们又多了一个字段，这就是我们说MongoDB非常&lt;em&gt;schema-free&lt;/em&gt;（开放？）&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;查询一条以上的记录&quot;&gt;&lt;a href=&quot;#查询一条以上的记录&quot; class=&quot;headerlink&quot; title=&quot;查询一条以上的记录&quot;&gt;&lt;/a&gt;查询一条以上的记录&lt;/h2&gt;&lt;p&gt;我们使用find()方法来获取一条以上的记录。find()返回一组符合条件的记录，并且允许我们通过迭代的方式获取它们。例如，在post中我们可以迭代的获取所有查询的数据：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; for post in posts.find():&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...   post&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;u&amp;apos;date&amp;apos;: datetime.datetime(...), u&amp;apos;text&amp;apos;: u&amp;apos;My first blog post!&amp;apos;, u&amp;apos;_id&amp;apos;: ObjectId(&amp;apos;...&amp;apos;), u&amp;apos;author&amp;apos;: u&amp;apos;Mike&amp;apos;, u&amp;apos;tags&amp;apos;: [u&amp;apos;mongodb&amp;apos;, u&amp;apos;python&amp;apos;, u&amp;apos;pymongo&amp;apos;]&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;u&amp;apos;date&amp;apos;: datetime.datetime(2009, 11, 12, 11, 14), u&amp;apos;text&amp;apos;: u&amp;apos;Another post!&amp;apos;, u&amp;apos;_id&amp;apos;: ObjectId(&amp;apos;...&amp;apos;), u&amp;apos;author&amp;apos;: u&amp;apos;Mike&amp;apos;, u&amp;apos;tags&amp;apos;: [u&amp;apos;bulk&amp;apos;, u&amp;apos;insert&amp;apos;]&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;u&amp;apos;date&amp;apos;: datetime.datetime(2009, 11, 10, 10, 45), u&amp;apos;text&amp;apos;: u&amp;apos;and pretty easy too!&amp;apos;, u&amp;apos;_id&amp;apos;: ObjectId(&amp;apos;...&amp;apos;), u&amp;apos;author&amp;apos;: u&amp;apos;Eliot&amp;apos;, u&amp;apos;title&amp;apos;: u&amp;apos;MongoDB is fun&amp;apos;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;就像我们使用find_one()一样，我们也可以在这里加上查询条件来获取符合条件的数据：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; for post in posts.find(&amp;#123;&amp;quot;author&amp;quot;: &amp;quot;Mike&amp;quot;&amp;#125;):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...   post&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;u&amp;apos;date&amp;apos;: datetime.datetime(...), u&amp;apos;text&amp;apos;: u&amp;apos;My first blog post!&amp;apos;, u&amp;apos;_id&amp;apos;: ObjectId(&amp;apos;...&amp;apos;), u&amp;apos;author&amp;apos;: u&amp;apos;Mike&amp;apos;, u&amp;apos;tags&amp;apos;: [u&amp;apos;mongodb&amp;apos;, u&amp;apos;python&amp;apos;, u&amp;apos;pymongo&amp;apos;]&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;u&amp;apos;date&amp;apos;: datetime.datetime(2009, 11, 12, 11, 14), u&amp;apos;text&amp;apos;: u&amp;apos;Another post!&amp;apos;, u&amp;apos;_id&amp;apos;: ObjectId(&amp;apos;...&amp;apos;), u&amp;apos;author&amp;apos;: u&amp;apos;Mike&amp;apos;, u&amp;apos;tags&amp;apos;: [u&amp;apos;bulk&amp;apos;, u&amp;apos;insert&amp;apos;]&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;计数&quot;&gt;&lt;a href=&quot;#计数&quot; class=&quot;headerlink&quot; title=&quot;计数&quot;&gt;&lt;/a&gt;计数&lt;/h2&gt;&lt;p&gt;如果我们只想获取数量，我们可以使用count()方法来代替全记录查询。我们可以获得查询的数量：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; posts.count()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;或者获得符合条件的数量：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; posts.find(&amp;#123;&amp;quot;author&amp;quot;: &amp;quot;Mike&amp;quot;&amp;#125;).count()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;不同种类的查询&quot;&gt;&lt;a href=&quot;#不同种类的查询&quot; class=&quot;headerlink&quot; title=&quot;不同种类的查询&quot;&gt;&lt;/a&gt;不同种类的查询&lt;/h2&gt;&lt;p&gt;MongoDB还提供了许多种类的查询方式。例如我们查询数据的日期小于某一个日期，且按照author字段来排序：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; d = datetime.datetime(2009, 11, 12, 12)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; for post in posts.find(&amp;#123;&amp;quot;date&amp;quot;: &amp;#123;&amp;quot;$lt&amp;quot;: d&amp;#125;&amp;#125;).sort(&amp;quot;author&amp;quot;):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...   print post&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;u&amp;apos;date&amp;apos;: datetime.datetime(2009, 11, 10, 10, 45), u&amp;apos;text&amp;apos;: u&amp;apos;and pretty easy too!&amp;apos;, u&amp;apos;_id&amp;apos;: ObjectId(&amp;apos;...&amp;apos;), u&amp;apos;author&amp;apos;: u&amp;apos;Eliot&amp;apos;, u&amp;apos;title&amp;apos;: u&amp;apos;MongoDB is fun&amp;apos;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;u&amp;apos;date&amp;apos;: datetime.datetime(2009, 11, 12, 11, 14), u&amp;apos;text&amp;apos;: u&amp;apos;Another post!&amp;apos;, u&amp;apos;_id&amp;apos;: ObjectId(&amp;apos;...&amp;apos;), u&amp;apos;author&amp;apos;: u&amp;apos;Mike&amp;apos;, u&amp;apos;tags&amp;apos;: [u&amp;apos;bulk&amp;apos;, u&amp;apos;insert&amp;apos;]&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这里我们使用“$lt”来做一个限制的查询，使用sort()来对author字段排序。&lt;/p&gt;
&lt;h2 id=&quot;主键&quot;&gt;&lt;a href=&quot;#主键&quot; class=&quot;headerlink&quot; title=&quot;主键&quot;&gt;&lt;/a&gt;主键&lt;/h2&gt;&lt;p&gt;增加一个主键能够帮助我们快速而准确的查询记录，也可以使我们存储的数据更加有用。在这个示例中，我们将会展示在一个已存在主键的表中新增一个主键：&lt;/p&gt;
&lt;p&gt;首先，我们要新增一个主键：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; result = db.profiles.create_index([(&amp;apos;user_id&amp;apos;, pymongo.ASCENDING)],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...                                   unique=True)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; list(db.profiles.index_information())&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[u&amp;apos;user_id_1&amp;apos;, u&amp;apos;_id_&amp;apos;]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;注意，我们现在有两个主键了，一个是MongoDB自带的”_id“，另一个是我们新增的”user_id“。&lt;/p&gt;
&lt;p&gt;现在，我们来新增一些用户信息：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; user_profiles = [&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...     &amp;#123;&amp;apos;user_id&amp;apos;: 211, &amp;apos;name&amp;apos;: &amp;apos;Luke&amp;apos;&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...     &amp;#123;&amp;apos;user_id&amp;apos;: 212, &amp;apos;name&amp;apos;: &amp;apos;Ziltoid&amp;apos;&amp;#125;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; result = db.profiles.insert_many(user_profiles)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;我们新增的主键阻止我们新增一条已存在这个主键的记录。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; new_profile = &amp;#123;&amp;apos;user_id&amp;apos;: 213, &amp;apos;name&amp;apos;: &amp;apos;Drew&amp;apos;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; duplicate_profile = &amp;#123;&amp;apos;user_id&amp;apos;: 212, &amp;apos;name&amp;apos;: &amp;apos;Tommy&amp;apos;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; result = db.profiles.insert_one(new_profile)  # This is fine.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; result = db.profiles.insert_one(duplicate_profile)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Traceback (most recent call last):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;pymongo.errors.DuplicateKeyError: E11000 duplicate key error index: test_database.profiles.$user_id_1 dup key: &amp;#123; : 212 &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;写在最后&quot;&gt;&lt;a href=&quot;#写在最后&quot; class=&quot;headerlink&quot; title=&quot;写在最后&quot;&gt;&lt;/a&gt;写在最后&lt;/h2&gt;&lt;p&gt;官方文档上并没有给出删除，修改记录的方法，或许是我目前还没看到吧，等看到了我会再补充上来的。文档比较短，翻译的过程中由于本人英语水平有限，并不能做到逐字逐句的翻译，也无法保证完全准确，并且会有一些地方的内容念起来并不是那么的顺口，但是官方文档想表达的大概意思应该是不会错的。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;都说MongoDB这个NoSql数据库特别友好，使用起来也非常方便，今天稍微接触了一下，发现真的是非常非常简单，但是网上对这块内容涉及的很少，而且很多内容都是很老的版本使用的方法，我看了一下官方API文档中描述的内容也不多，顺手翻译一下吧，造福一下后来人。&lt;br&gt;
    
    </summary>
    
      <category term="Python" scheme="http://www.wengyb.com/categories/Python/"/>
    
    
      <category term="python" scheme="http://www.wengyb.com/tags/python/"/>
    
      <category term="MongoDB" scheme="http://www.wengyb.com/tags/MongoDB/"/>
    
  </entry>
  
  <entry>
    <title>Django使用第三方接口（一）</title>
    <link href="http://www.wengyb.com/2016/03/12/Django%E4%BD%BF%E7%94%A8%E7%AC%AC%E4%B8%89%E6%96%B9%E6%8E%A5%E5%8F%A3%EF%BC%88%E4%B8%80%EF%BC%89/"/>
    <id>http://www.wengyb.com/2016/03/12/Django使用第三方接口（一）/</id>
    <published>2016-03-12T02:41:06.000Z</published>
    <updated>2016-03-31T03:08:03.000Z</updated>
    
    <content type="html">&lt;p&gt;文章首发：&lt;a href=&quot;http://wybblog.applinzi.com/blog/article/30/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;我的博客&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;好久没发文章了，最近我在学习使用第三方接口来优化我的网站，这篇文章介绍两个接口吧，都是从百度API商店折腾了之后使用的，一个是天气资讯，另一个是名人名言。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;思路&quot;&gt;&lt;a href=&quot;#思路&quot; class=&quot;headerlink&quot; title=&quot;思路&quot;&gt;&lt;/a&gt;思路&lt;/h2&gt;&lt;p&gt;其实调接口很简单，原理和使用数据库的数据差不多，我们使用本地数据库的时候是通过： 连接数据库——获取数据——返回前端——前端处理这么一个流程，调用接口其实也差不多是这样，发送请求——收到数据——数据处理——返回前端——前端处理。理清思路后我们就来处理处理这块的使用方法。&lt;/p&gt;
&lt;h2 id=&quot;名人名言&quot;&gt;&lt;a href=&quot;#名人名言&quot; class=&quot;headerlink&quot; title=&quot;名人名言&quot;&gt;&lt;/a&gt;名人名言&lt;/h2&gt;&lt;p&gt;关于名人名言，我是放在我博客的首页展示，效果图如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/1228386-4d9c798a9e456193.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;名人名言效果图&quot;&gt;&lt;/p&gt;
&lt;p&gt;整个调用流程和上文说的思路差不多，首先，进入百度API商店，传送门在这：&lt;a href=&quot;http://apistore.baidu.com/apiworks/servicedetail/1756.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://apistore.baidu.com/apiworks/servicedetail/1756.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;查看API后，只要请求的时候带上相关参数就行了，API文档比较简单，百度API商店也给了Python的示例，不过百度的示例使用的是urllib这个python自带的库，我用的是requests这个库，对比起来requests这个库使用起来更简单，我的前端使用的是jQuery调用ajax来从Django后台异步获取数据，所以打开网页的时候你会发现这一块一开始是没有的，过了一秒后才会出现数据。废话不多说，上代码。&lt;/p&gt;
&lt;h3 id=&quot;views-py&quot;&gt;&lt;a href=&quot;#views-py&quot; class=&quot;headerlink&quot; title=&quot;views.py&quot;&gt;&lt;/a&gt;views.py&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;def famous(request):   &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  famous_word = Mingrenmingyan()    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  return JsonResponse(famous_word.get_mrmy(), safe=False)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;师徒函数很简单，初始化这个类，然后返回一个json数据给前端。整个处理方法我单独写了一个common类来处理，所以还需要在views的开头引入这个方法。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;from common.common import Weather, Mingrenmingyan&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;common-py&quot;&gt;&lt;a href=&quot;#common-py&quot; class=&quot;headerlink&quot; title=&quot;common.py&quot;&gt;&lt;/a&gt;common.py&lt;/h3&gt;&lt;p&gt;这个方法我是专门来处理一些数据的，所以会写好几个类。代码如下：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;class Mingrenmingyan:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    处理名人名言接口返回的数据&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    def __init__(self):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        初始化相关数据,包括接口的url,headers和parm&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        :return: None&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.url = &amp;apos;http://apis.baidu.com/avatardata/mingrenmingyan/lookup&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.headers = &amp;#123;&amp;quot;apikey&amp;quot;: &amp;quot;your key&amp;quot;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.parm = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;quot;dtype&amp;quot;: &amp;quot;JSON&amp;quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;quot;keyword&amp;quot;: &amp;quot;人生&amp;quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;quot;page&amp;quot;: &amp;quot;1&amp;quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;quot;rows&amp;quot;: &amp;quot;20&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    def get_mrmy(self):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        从接口获取名人名言数据,随机选取一条返回,返回json数据.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        :return:json, 名人名言数据&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        wb_data = requests.get(self.url, headers=self.headers, params=self.parm)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        data = wb_data.json()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        if data[&amp;apos;error_code&amp;apos;] == 0:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            result = data[&amp;apos;result&amp;apos;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            random_num = random.randint(0, 19)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            return json.dumps(result[random_num])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        else:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            return json.dumps(data)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这个类是处理名人名言数据的，因为接口返回的是20条数据，因此我会随机选取一条返回给前端。&lt;/p&gt;
&lt;h3 id=&quot;前端&quot;&gt;&lt;a href=&quot;#前端&quot; class=&quot;headerlink&quot; title=&quot;前端&quot;&gt;&lt;/a&gt;前端&lt;/h3&gt;&lt;p&gt;在前端我是用js的ajax方法异步获取数据，所以这里我只贴js部分的代码，代码如下：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;function famous()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    $.getJSON(&amp;apos;/blog/get_famous/&amp;apos;, function(data)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        var famous_data = jQuery.parseJSON(data);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        console.log(famous_data);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        $(&amp;apos;#mrmy-body&amp;apos;).html(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;apos;&amp;lt;p&amp;gt;&amp;apos; + famous_data.famous_saying + &amp;apos;&amp;lt;/p&amp;gt;&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        $(&amp;apos;#mrmy-footer&amp;apos;).html(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;apos;&amp;lt;p&amp;gt;By--&amp;apos; + famous_data.famous_name + &amp;apos;&amp;lt;/p&amp;gt;&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        )&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;url-py&quot;&gt;&lt;a href=&quot;#url-py&quot; class=&quot;headerlink&quot; title=&quot;url.py&quot;&gt;&lt;/a&gt;url.py&lt;/h3&gt;&lt;p&gt;在url部分就为前后端通讯加一条路由就行了。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;url(r&amp;apos;^get_famous&amp;apos;, views.famous, name=&amp;apos;famous&amp;apos;),&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这样一个名人名言的接口调用就完成了。&lt;/p&gt;
&lt;h2 id=&quot;天气资讯&quot;&gt;&lt;a href=&quot;#天气资讯&quot; class=&quot;headerlink&quot; title=&quot;天气资讯&quot;&gt;&lt;/a&gt;天气资讯&lt;/h2&gt;&lt;p&gt;天气资讯接口的调用方式也非常简单，和这部分是一样的。我就不详细的贴了，就是一个页面一个搜索框一个展示，方法和上文说的是一样的，相信聪明的你自己就可以写出来。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;文章首发：&lt;a href=&quot;http://wybblog.applinzi.com/blog/article/30/&quot;&gt;我的博客&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;好久没发文章了，最近我在学习使用第三方接口来优化我的网站，这篇文章介绍两个接口吧，都是从百度API商店折腾了之后使用的，一个是天气资讯，另一个是名人名言。&lt;br&gt;
    
    </summary>
    
      <category term="Python" scheme="http://www.wengyb.com/categories/Python/"/>
    
    
      <category term="python" scheme="http://www.wengyb.com/tags/python/"/>
    
      <category term="Django" scheme="http://www.wengyb.com/tags/Django/"/>
    
  </entry>
  
  <entry>
    <title>Python小知识——深度剖析获取迭代序列</title>
    <link href="http://www.wengyb.com/2016/03/12/Python%E5%B0%8F%E7%9F%A5%E8%AF%86%E2%80%94%E2%80%94%E6%B7%B1%E5%BA%A6%E5%89%96%E6%9E%90%E8%8E%B7%E5%8F%96%E8%BF%AD%E4%BB%A3%E5%BA%8F%E5%88%97/"/>
    <id>http://www.wengyb.com/2016/03/12/Python小知识——深度剖析获取迭代序列/</id>
    <published>2016-03-12T02:41:06.000Z</published>
    <updated>2016-03-31T03:15:37.000Z</updated>
    
    <content type="html">&lt;p&gt;相信获取迭代序列是一个非常普遍的需求功能，基本上写代码都要考虑到这个东西，我自己写博客系统的时候也经常遇到这个问题，实现起来其实很简单，只要在for循环外加一个参数监听迭代就行了，比如下面这种方式&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;li = [&amp;apos;a&amp;apos;, &amp;apos;b&amp;apos;, &amp;apos;c&amp;apos;, &amp;apos;d&amp;apos;, &amp;apos;f&amp;apos;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;num = 0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;for i in li:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	print &amp;apos;index :&amp;apos; num, &amp;apos;element :&amp;apos;, i&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	num += 1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这种方式获取起来很容写，也比较好理解，但是这个运行过程中多声明了一个变量，性能上并不是最优的（当然基本上我们写的东西性能上不差这一点）。&lt;/p&gt;
&lt;p&gt;另一个替代方法是使用len（）和range（）的结合使用，这个方法用起来也是非常方便的，代码如下：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;li = [&amp;apos;a&amp;apos;, &amp;apos;b&amp;apos;, &amp;apos;c&amp;apos;, &amp;apos;d&amp;apos;, &amp;apos;f&amp;apos;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;for i in range(len(li)):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	print &amp;apos;index :&amp;apos; i, &amp;apos;element :&amp;apos;, li[i]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;类似的方法还有zip（）， while循环等等。&lt;/p&gt;
&lt;h2 id=&quot;enumerate&quot;&gt;&lt;a href=&quot;#enumerate&quot; class=&quot;headerlink&quot; title=&quot;enumerate&quot;&gt;&lt;/a&gt;enumerate&lt;/h2&gt;&lt;p&gt;今天在看书的时候突然看到这个函数，这个函数处理起来真的是非常巧妙，至少我感觉比上文提到的方法更简单，更粗暴。&lt;/p&gt;
&lt;p&gt;看下面的代码：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;li = [&amp;apos;a&amp;apos;, &amp;apos;b&amp;apos;, &amp;apos;c&amp;apos;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;for i, e in enumerate(li):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	print  i, e&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;======输出结果===========&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;0 a&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;1 b&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2 c&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[Finished in 0.1s]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这种实现方式代码简洁，可读性强。其函数签名如下：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;enumerate(sequence, start=0)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;其中的sequence可以为任意一个可迭代的对象，函数的本质上就是一个迭代器，可以使用next()方法获取下一个迭代元素，比如上面的代码我们做一下简单的修改。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;li = [&amp;apos;a&amp;apos;, &amp;apos;b&amp;apos;, &amp;apos;c&amp;apos;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print enumerate(li)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;e = enumerate(li)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print e.next()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print e.next()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;=======输出结果======&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;enumerate object at 0x1079faaa0&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(0, &amp;apos;a&amp;apos;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(1, &amp;apos;b&amp;apos;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;不适用于字典&quot;&gt;&lt;a href=&quot;#不适用于字典&quot; class=&quot;headerlink&quot; title=&quot;不适用于字典&quot;&gt;&lt;/a&gt;不适用于字典&lt;/h3&gt;&lt;p&gt;字典这个类型是无序的，所以无法使用enumerate来处理字典的迭代,当然，你如果使用了也不会报错。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;相信获取迭代序列是一个非常普遍的需求功能，基本上写代码都要考虑到这个东西，我自己写博客系统的时候也经常遇到这个问题，实现起来其实很简单，只要在for循环外加一个参数监听迭代就行了，比如下面这种方式&lt;br&gt;
    
    </summary>
    
      <category term="Python" scheme="http://www.wengyb.com/categories/Python/"/>
    
    
      <category term="python" scheme="http://www.wengyb.com/tags/python/"/>
    
  </entry>
  
</feed>
